// Generated by purs bundle 0.11.7
var PS = {};
(function(exports) {
    "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["compose"] = compose;
  exports["Semigroupoid"] = Semigroupoid;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Category = function (Semigroupoid0, id) {
      this.Semigroupoid0 = Semigroupoid0;
      this.id = id;
  };
  var id = function (dict) {
      return dict.id;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["id"] = id;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Category = PS["Control.Category"];        
  var on = function (f) {
      return function (g) {
          return function (x) {
              return function (y) {
                  return f(g(x))(g(y));
              };
          };
      };
  };
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var applyFlipped = function (x) {
      return function (f) {
          return f(x);
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
  exports["applyFlipped"] = applyFlipped;
  exports["on"] = on;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showCharImpl = function (c) {
    var code = c.charCodeAt(0);
    if (code < 0x20 || code === 0x7F) {
      switch (c) {
        case "\x07": return "'\\a'";
        case "\b": return "'\\b'";
        case "\f": return "'\\f'";
        case "\n": return "'\\n'";
        case "\r": return "'\\r'";
        case "\t": return "'\\t'";
        case "\v": return "'\\v'";
      }
      return "'\\" + code.toString(10) + "'";
    }
    return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Show"];     
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showInt = new Show($foreign.showIntImpl);
  var showChar = new Show($foreign.showCharImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showChar"] = showChar;
  exports["showString"] = showString;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidLeft = function (dictFunctor) {
      return function (f) {
          return function (x) {
              return map(dictFunctor)(Data_Function["const"](x))(f);
          };
      };
  };
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
  exports["voidRight"] = voidRight;
  exports["voidLeft"] = voidLeft;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
    "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Show = PS["Data.Show"];
  var absurd = function (a) {
      var spin = function ($copy_v) {
          var $tco_result;
          function $tco_loop(v) {
              $copy_v = v;
              return;
          };
          while (!false) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return spin(a);
  };
  var showVoid = new Data_Show.Show(absurd);
  exports["absurd"] = absurd;
  exports["showVoid"] = showVoid;
})(PS["Data.Void"] = PS["Data.Void"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  var semigroupFn = function (dictSemigroup) {
      return new Semigroup(function (f) {
          return function (g) {
              return function (x) {
                  return append(dictSemigroup)(f(x))(g(x));
              };
          };
      });
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupFn"] = semigroupFn;
  exports["semigroupArray"] = semigroupArray;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];        
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
    "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l*k);
      var n = 0;
      for (var i = 0; i < l; i++) {
        var f = fs[i];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  }; 
  var applyArray = new Apply(function () {
      return Data_Functor.functorArray;
  }, $foreign.arrayApply);
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
  exports["applyArray"] = applyArray;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative line 57, column 1 - line 57, column 63: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  }; 
  var applicativeArray = new Applicative(function () {
      return Control_Apply.applyArray;
  }, function (x) {
      return [ x ];
  });
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["when"] = when;
  exports["applicativeArray"] = applicativeArray;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Data_Functor = PS["Data.Functor"];        
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS["Control.Plus"] = PS["Control.Plus"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor = PS["Data.Functor"];        
  var Alternative = function (Applicative0, Plus1) {
      this.Applicative0 = Applicative0;
      this.Plus1 = Plus1;
  };
  exports["Alternative"] = Alternative;
})(PS["Control.Alternative"] = PS["Control.Alternative"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var Discard = function (discard) {
      this.discard = discard;
  };
  var discard = function (dict) {
      return dict.discard;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["Discard"] = Discard;
  exports["discard"] = discard;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["discardUnit"] = discardUnit;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
    "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
    "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];        
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var zero = function (dict) {
      return dict.zero;
  };                                                                            
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var one = function (dict) {
      return dict.one;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var add = function (dict) {
      return dict.add;
  };
  exports["Semiring"] = Semiring;
  exports["add"] = add;
  exports["zero"] = zero;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["semiringInt"] = semiringInt;
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];        
  var Ring = function (Semiring0, sub) {
      this.Semiring0 = Semiring0;
      this.sub = sub;
  };
  var sub = function (dict) {
      return dict.sub;
  };                  
  var ringInt = new Ring(function () {
      return Data_Semiring.semiringInt;
  }, $foreign.intSub);
  var negate = function (dictRing) {
      return function (a) {
          return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
      };
  };
  exports["Ring"] = Ring;
  exports["sub"] = sub;
  exports["negate"] = negate;
  exports["ringInt"] = ringInt;
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];        
  var CommutativeRing = function (Ring0) {
      this.Ring0 = Ring0;
  }; 
  var commutativeRingInt = new CommutativeRing(function () {
      return Data_Ring.ringInt;
  });
  exports["CommutativeRing"] = CommutativeRing;
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS["Data.CommutativeRing"] = PS["Data.CommutativeRing"] || {});
(function(exports) {
    "use strict";

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Eq = function (eq) {
      this.eq = eq;
  };
  var eqVoid = new Eq(function (v) {
      return function (v1) {
          return true;
      };
  });
  var eqUnit = new Eq(function (v) {
      return function (v1) {
          return true;
      };
  });
  var eqString = new Eq($foreign.refEq);
  var eqInt = new Eq($foreign.refEq); 
  var eqBoolean = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  var eqArray = function (dictEq) {
      return new Eq($foreign.eqArrayImpl(eq(dictEq)));
  }; 
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqString"] = eqString;
  exports["eqUnit"] = eqUnit;
  exports["eqVoid"] = eqVoid;
  exports["eqArray"] = eqArray;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  exports.intDiv = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x / y | 0;
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      return x % y;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function(exports) {
    "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.HeytingAlgebra"];
  var Data_Unit = PS["Data.Unit"];        
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };                 
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  var heytingAlgebraFunction = function (dictHeytingAlgebra) {
      return new HeytingAlgebra(function (f) {
          return function (g) {
              return function (a) {
                  return conj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (g) {
              return function (a) {
                  return disj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (v) {
          return ff(dictHeytingAlgebra);
      }, function (f) {
          return function (g) {
              return function (a) {
                  return implies(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (a) {
              return not(dictHeytingAlgebra)(f(a));
          };
      }, function (v) {
          return tt(dictHeytingAlgebra);
      });
  };
  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["tt"] = tt;
  exports["ff"] = ff;
  exports["implies"] = implies;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
  exports["heytingAlgebraFunction"] = heytingAlgebraFunction;
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.EuclideanRing"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];        
  var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
      this.CommutativeRing0 = CommutativeRing0;
      this.degree = degree;
      this.div = div;
      this.mod = mod;
  };
  var mod = function (dict) {
      return dict.mod;
  };
  var gcd = function ($copy_dictEq) {
      return function ($copy_dictEuclideanRing) {
          return function ($copy_a) {
              return function ($copy_b) {
                  var $tco_var_dictEq = $copy_dictEq;
                  var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;
                  var $tco_var_a = $copy_a;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(dictEq, dictEuclideanRing, a, b) {
                      var $7 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                      if ($7) {
                          $tco_done = true;
                          return a;
                      };
                      $tco_var_dictEq = dictEq;
                      $tco_var_dictEuclideanRing = dictEuclideanRing;
                      $tco_var_a = b;
                      $copy_b = mod(dictEuclideanRing)(a)(b);
                      return;
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);
                  };
                  return $tco_result;
              };
          };
      };
  }; 
  var euclideanRingInt = new EuclideanRing(function () {
      return Data_CommutativeRing.commutativeRingInt;
  }, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
  var div = function (dict) {
      return dict.div;
  };
  var degree = function (dict) {
      return dict.degree;
  };
  exports["EuclideanRing"] = EuclideanRing;
  exports["degree"] = degree;
  exports["div"] = div;
  exports["mod"] = mod;
  exports["gcd"] = gcd;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function(exports) {
    "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Extend"];
  var Control_Category = PS["Control.Category"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];        
  var Extend = function (Functor0, extend) {
      this.Functor0 = Functor0;
      this.extend = extend;
  };                       
  var extend = function (dict) {
      return dict.extend;
  };
  var duplicate = function (dictExtend) {
      return extend(dictExtend)(Control_Category.id(Control_Category.categoryFn));
  };
  exports["Extend"] = Extend;
  exports["extend"] = extend;
  exports["duplicate"] = duplicate;
})(PS["Control.Extend"] = PS["Control.Extend"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];        
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS["Data.Ordering"] = PS["Data.Ordering"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];        
  var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
  exports["unsafeCompare"] = unsafeCompare;
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord_Unsafe = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  };
  var ordVoid = new Ord(function () {
      return Data_Eq.eqVoid;
  }, function (v) {
      return function (v1) {
          return Data_Ordering.EQ.value;
      };
  });
  var ordUnit = new Ord(function () {
      return Data_Eq.eqUnit;
  }, function (v) {
      return function (v1) {
          return Data_Ordering.EQ.value;
      };
  });
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, Data_Ord_Unsafe.unsafeCompare);
  var compare = function (dict) {
      return dict.compare;
  };
  var greaterThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.GT) {
                  return true;
              };
              return false;
          };
      };
  };
  var greaterThanOrEq = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.LT) {
                  return false;
              };
              return true;
          };
      };
  };
  var signum = function (dictOrd) {
      return function (dictRing) {
          return function (x) {
              var $33 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
              if ($33) {
                  return Data_Semiring.one(dictRing.Semiring0());
              };
              return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()));
          };
      };
  };
  var max = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return y;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return x;
              };
              throw new Error("Failed pattern match at Data.Ord line 123, column 3 - line 126, column 12: " + [ v.constructor.name ]);
          };
      };
  };
  var min = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return x;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return y;
              };
              throw new Error("Failed pattern match at Data.Ord line 114, column 3 - line 117, column 12: " + [ v.constructor.name ]);
          };
      };
  };
  var abs = function (dictOrd) {
      return function (dictRing) {
          return function (x) {
              var $42 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
              if ($42) {
                  return x;
              };
              return Data_Ring.negate(dictRing)(x);
          };
      };
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["greaterThan"] = greaterThan;
  exports["greaterThanOrEq"] = greaterThanOrEq;
  exports["min"] = min;
  exports["max"] = max;
  exports["abs"] = abs;
  exports["signum"] = signum;
  exports["ordInt"] = ordInt;
  exports["ordString"] = ordString;
  exports["ordUnit"] = ordUnit;
  exports["ordVoid"] = ordVoid;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };                 
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");                    
  var monoidArray = new Monoid(function () {
      return Data_Semigroup.semigroupArray;
  }, [  ]);
  var mempty = function (dict) {
      return dict.mempty;
  };
  var monoidFn = function (dictMonoid) {
      return new Monoid(function () {
          return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
      }, Data_Function["const"](mempty(dictMonoid)));
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidFn"] = monoidFn;
  exports["monoidString"] = monoidString;
  exports["monoidArray"] = monoidArray;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 219, column 1 - line 219, column 51: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.id(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar34) {
                  return $dollar34;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Just) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Maybe line 270, column 1 - line 270, column 46: " + [ v.constructor.name ]);
          })());
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 68, column 1 - line 68, column 35: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["eqMaybe"] = eqMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Prelude = PS["Prelude"];        
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var under = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (v) {
              return function (f) {
                  return function ($55) {
                      return unwrap(dictNewtype1)(f(wrap(dictNewtype)($55)));
                  };
              };
          };
      };
  };
  var un = function (dictNewtype) {
      return function (v) {
          return unwrap(dictNewtype);
      };
  };
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          return function ($64) {
                              return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($64)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
  exports["un"] = un;
  exports["alaF"] = alaF;
  exports["under"] = under;
})(PS["Data.Newtype"] = PS["Data.Newtype"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var First = function (x) {
      return x;
  };
  var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          if (v instanceof Data_Maybe.Just) {
              return v;
          };
          return v1;
      };
  });                                  
  var newtypeFirst = new Data_Newtype.Newtype(function (n) {
      return n;
  }, First);
  var monoidFirst = new Data_Monoid.Monoid(function () {
      return semigroupFirst;
  }, Data_Maybe.Nothing.value);
  exports["First"] = First;
  exports["newtypeFirst"] = newtypeFirst;
  exports["semigroupFirst"] = semigroupFirst;
  exports["monoidFirst"] = monoidFirst;
})(PS["Data.Maybe.First"] = PS["Data.Maybe.First"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Extend = PS["Control.Extend"];
  var Data_Functor = PS["Data.Functor"];        
  var Comonad = function (Extend0, extract) {
      this.Extend0 = Extend0;
      this.extract = extract;
  };
  var extract = function (dict) {
      return dict.extract;
  };
  exports["Comonad"] = Comonad;
  exports["extract"] = extract;
})(PS["Control.Comonad"] = PS["Control.Comonad"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var newtypeDisj = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Disj);
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["newtypeDisj"] = newtypeDisj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;
})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($195) {
                  return Control_Apply.applySecond(dictApplicative.Apply0())(f($195));
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var sequence_ = function (dictApplicative) {
      return function (dictFoldable) {
          return traverse_(dictApplicative)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  };
  var length = function (dictFoldable) {
      return function (dictSemiring) {
          return foldl(dictFoldable)(function (c) {
              return function (v) {
                  return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);
              };
          })(Data_Semiring.zero(dictSemiring));
      };
  }; 
  var foldableMaybe = new Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Data_Maybe.Just) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var fold = function (dictFoldable) {
      return function (dictMonoid) {
          return foldMap(dictFoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["fold"] = fold;
  exports["traverse_"] = traverse_;
  exports["for_"] = for_;
  exports["sequence_"] = sequence_;
  exports["intercalate"] = intercalate;
  exports["any"] = any;
  exports["length"] = length;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont(fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList(x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray(list) {
      var arr = [];
      var xs = list;
      while (xs !== emptyList) {
        arr.push(xs.head);
        xs = xs.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Traversable_Accum = PS["Data.Traversable.Accum"];
  var Data_Traversable_Accum_Internal = PS["Data.Traversable.Accum.Internal"];
  var Prelude = PS["Prelude"];        
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["sequenceDefault"] = sequenceDefault;
  exports["traversableArray"] = traversableArray;
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Field = PS["Data.Field"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Contravariant = PS["Data.Functor.Contravariant"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];        
  var Const = function (x) {
      return x;
  };
  var newtypeConst = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Const);
  exports["Const"] = Const;
  exports["newtypeConst"] = newtypeConst;
})(PS["Data.Const"] = PS["Data.Const"] || {});
(function(exports) {
    "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var runExists = Unsafe_Coerce.unsafeCoerce;
  var mkExists = Unsafe_Coerce.unsafeCoerce;
  exports["mkExists"] = mkExists;
  exports["runExists"] = runExists;
})(PS["Data.Exists"] = PS["Data.Exists"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Const = PS["Data.Const"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var ApF = (function () {
      function ApF(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ApF.create = function (value0) {
          return function (value1) {
              return new ApF(value0, value1);
          };
      };
      return ApF;
  })();
  var Pure = (function () {
      function Pure(value0) {
          this.value0 = value0;
      };
      Pure.create = function (value0) {
          return new Pure(value0);
      };
      return Pure;
  })();
  var Ap = (function () {
      function Ap(value0) {
          this.value0 = value0;
      };
      Ap.create = function (value0) {
          return new Ap(value0);
      };
      return Ap;
  })();
  var retractFreeAp = function (dictApplicative) {
      return function (v) {
          if (v instanceof Pure) {
              return Control_Applicative.pure(dictApplicative)(v.value0);
          };
          if (v instanceof Ap) {
              return Data_Exists.runExists(function (v1) {
                  return Control_Apply.apply(dictApplicative.Apply0())(retractFreeAp(dictApplicative)(v1.value1(Data_Unit.unit)))(v1.value0(Data_Unit.unit));
              })(v.value0);
          };
          throw new Error("Failed pattern match at Control.Applicative.Free line 32, column 1 - line 32, column 64: " + [ v.constructor.name ]);
      };
  };
  var ap = function (v) {
      return function (k) {
          return new Ap(Data_Exists.mkExists(new ApF(v, k)));
      };
  };              
  var hoistFreeAp = function (k) {
      return function (v) {
          if (v instanceof Pure) {
              return new Pure(v.value0);
          };
          if (v instanceof Ap) {
              return Data_Exists.runExists(function (v1) {
                  return ap(function (v3) {
                      return k(v1.value0(Data_Unit.unit));
                  })(function (v3) {
                      return hoistFreeAp(k)(v1.value1(Data_Unit.unit));
                  });
              })(v.value0);
          };
          throw new Error("Failed pattern match at Control.Applicative.Free line 44, column 1 - line 44, column 66: " + [ k.constructor.name, v.constructor.name ]);
      };
  };
  exports["retractFreeAp"] = retractFreeAp;
  exports["hoistFreeAp"] = hoistFreeAp;
})(PS["Control.Applicative.Free"] = PS["Control.Applicative.Free"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Unit = PS["Data.Unit"];        
  var Lazy = function (defer) {
      this.defer = defer;
  }; 
  var defer = function (dict) {
      return dict.defer;
  };
  exports["defer"] = defer;
  exports["Lazy"] = Lazy;
})(PS["Control.Lazy"] = PS["Control.Lazy"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Category = PS["Control.Category"];        
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var rmap = function (dictBifunctor) {
      return bimap(dictBifunctor)(Control_Category.id(Control_Category.categoryFn));
  };
  exports["bimap"] = bimap;
  exports["Bifunctor"] = Bifunctor;
  exports["lmap"] = lmap;
  exports["rmap"] = rmap;
})(PS["Data.Bifunctor"] = PS["Data.Bifunctor"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Distributive = PS["Data.Distributive"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Type_Equality = PS["Type.Equality"];        
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var swap = function (v) {
      return new Tuple(v.value1, v.value0);
  };
  var snd = function (v) {
      return v.value1;
  };
  var functorTuple = new Data_Functor.Functor(function (f) {
      return function (v) {
          return new Tuple(v.value0, f(v.value1));
      };
  });                                                                                                   
  var fst = function (v) {
      return v.value0;
  };
  var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return new Tuple(f(v.value0), g(v.value1));
          };
      };
  });
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["uncurry"] = uncurry;
  exports["swap"] = swap;
  exports["functorTuple"] = functorTuple;
  exports["bifunctorTuple"] = bifunctorTuple;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Comonad_Trans_Class = PS["Control.Comonad.Trans.Class"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var StoreT = function (x) {
      return x;
  };         
  var functorStoreT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return StoreT(new Data_Tuple.Tuple(Data_Functor.map(dictFunctor)(function (h) {
                  return function ($28) {
                      return f(h($28));
                  };
              })(v.value0), v.value1));
          };
      });
  };
  var extendStoreT = function (dictExtend) {
      return new Control_Extend.Extend(function () {
          return functorStoreT(dictExtend.Functor0());
      }, function (f) {
          return function (v) {
              return StoreT(new Data_Tuple.Tuple(Control_Extend.extend(dictExtend)(function (w$prime) {
                  return function (s$prime) {
                      return f(StoreT(new Data_Tuple.Tuple(w$prime, s$prime)));
                  };
              })(v.value0), v.value1));
          };
      });
  }; 
  var comonadStoreT = function (dictComonad) {
      return new Control_Comonad.Comonad(function () {
          return extendStoreT(dictComonad.Extend0());
      }, function (v) {
          return Control_Comonad.extract(dictComonad)(v.value0)(v.value1);
      });
  };
  exports["StoreT"] = StoreT;
  exports["functorStoreT"] = functorStoreT;
  exports["extendStoreT"] = extendStoreT;
  exports["comonadStoreT"] = comonadStoreT;
})(PS["Control.Comonad.Store.Trans"] = PS["Control.Comonad.Store.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Comonad_Store_Trans = PS["Control.Comonad.Store.Trans"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var ComonadStore = function (Comonad0, peek, pos) {
      this.Comonad0 = Comonad0;
      this.peek = peek;
      this.pos = pos;
  };
  var pos = function (dict) {
      return dict.pos;
  };
  var peek = function (dict) {
      return dict.peek;
  };
  var peeks = function (dictComonadStore) {
      return function (f) {
          return function (x) {
              return peek(dictComonadStore)(f(pos(dictComonadStore)(x)))(x);
          };
      };
  };
  var seeks = function (dictComonadStore) {
      return function (f) {
          return function ($15) {
              return peeks(dictComonadStore)(f)(Control_Extend.duplicate((dictComonadStore.Comonad0()).Extend0())($15));
          };
      };
  };
  var comonadStoreStoreT = function (dictComonad) {
      return new ComonadStore(function () {
          return Control_Comonad_Store_Trans.comonadStoreT(dictComonad);
      }, function (s) {
          return function (v) {
              return Control_Comonad.extract(dictComonad)(v.value0)(s);
          };
      }, function (v) {
          return v.value1;
      });
  };
  exports["peek"] = peek;
  exports["pos"] = pos;
  exports["ComonadStore"] = ComonadStore;
  exports["peeks"] = peeks;
  exports["seeks"] = seeks;
  exports["comonadStoreStoreT"] = comonadStoreStoreT;
})(PS["Control.Comonad.Store.Class"] = PS["Control.Comonad.Store.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Field = PS["Data.Field"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];        
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (v) {
          return f(v);
      };
  });
  var extendIdentity = new Control_Extend.Extend(function () {
      return functorIdentity;
  }, function (f) {
      return function (m) {
          return f(m);
      };
  });
  var comonadIdentity = new Control_Comonad.Comonad(function () {
      return extendIdentity;
  }, function (v) {
      return v;
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
  exports["extendIdentity"] = extendIdentity;
  exports["comonadIdentity"] = comonadIdentity;
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Comonad_Store_Class = PS["Control.Comonad.Store.Class"];
  var Control_Comonad_Store_Trans = PS["Control.Comonad.Store.Trans"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var store = function (f) {
      return function (x) {
          return Control_Comonad_Store_Trans.StoreT(new Data_Tuple.Tuple(f, x));
      };
  };
  var runStore = function (v) {
      return Data_Tuple.swap(Data_Functor.map(Data_Tuple.functorTuple)(Data_Newtype.unwrap(Data_Identity.newtypeIdentity))(Data_Tuple.swap(v)));
  };
  exports["runStore"] = runStore;
  exports["store"] = store;
})(PS["Control.Comonad.Store"] = PS["Control.Comonad.Store"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];        
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Left) {
              return new Left(v1.value0);
          };
          if (v1 instanceof Right) {
              return new Right(v(v1.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 36, column 1 - line 36, column 45: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });                                                                                                     
  var fromRight = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar62) {
                  return $dollar62;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Right) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Either line 252, column 1 - line 252, column 52: " + [ v.constructor.name ]);
          })());
      };
  }; 
  var eqEither = function (dictEq) {
      return function (dictEq1) {
          return new Data_Eq.Eq(function (x) {
              return function (y) {
                  if (x instanceof Left && y instanceof Left) {
                      return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                  };
                  if (x instanceof Right && y instanceof Right) {
                      return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
                  };
                  return false;
              };
          });
      };
  };
  var ordEither = function (dictOrd) {
      return function (dictOrd1) {
          return new Data_Ord.Ord(function () {
              return eqEither(dictOrd.Eq0())(dictOrd1.Eq0());
          }, function (x) {
              return function (y) {
                  if (x instanceof Left && y instanceof Left) {
                      return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                  };
                  if (x instanceof Left) {
                      return Data_Ordering.LT.value;
                  };
                  if (y instanceof Left) {
                      return Data_Ordering.GT.value;
                  };
                  if (x instanceof Right && y instanceof Right) {
                      return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);
                  };
                  throw new Error("Failed pattern match at Data.Either line 176, column 8 - line 176, column 64: " + [ x.constructor.name, y.constructor.name ]);
              };
          });
      };
  };
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 229, column 1 - line 229, column 64: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either line 43, column 1 - line 43, column 45: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either line 79, column 1 - line 79, column 41: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Control_Bind.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var semigroupEither = function (dictSemigroup) {
      return new Data_Semigroup.Semigroup(function (x) {
          return function (y) {
              return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);
          };
      });
  };
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  var monadEither = new Control_Monad.Monad(function () {
      return applicativeEither;
  }, function () {
      return bindEither;
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["fromRight"] = fromRight;
  exports["hush"] = hush;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["bindEither"] = bindEither;
  exports["monadEither"] = monadEither;
  exports["eqEither"] = eqEither;
  exports["ordEither"] = ordEither;
  exports["semigroupEither"] = semigroupEither;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var MonadThrow = function (Monad0, throwError) {
      this.Monad0 = Monad0;
      this.throwError = throwError;
  };
  var MonadError = function (MonadThrow0, catchError) {
      this.MonadThrow0 = MonadThrow0;
      this.catchError = catchError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  }; 
  var catchError = function (dict) {
      return dict.catchError;
  };
  var $$try = function (dictMonadError) {
      return function (a) {
          return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))(function ($21) {
              return Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0())(Data_Either.Left.create($21));
          });
      };
  };
  exports["catchError"] = catchError;
  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
  exports["MonadError"] = MonadError;
  exports["try"] = $$try;
})(PS["Control.Monad.Error.Class"] = PS["Control.Monad.Error.Class"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };

  exports.foreachE = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["runPure"] = $foreign.runPure;
  exports["foreachE"] = $foreign.foreachE;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var MonadEff = function (Monad0, liftEff) {
      this.Monad0 = Monad0;
      this.liftEff = liftEff;
  };
  var monadEffEff = new MonadEff(function () {
      return Control_Monad_Eff.monadEff;
  }, Control_Category.id(Control_Category.categoryFn));
  var liftEff = function (dict) {
      return dict.liftEff;
  };
  exports["liftEff"] = liftEff;
  exports["MonadEff"] = MonadEff;
  exports["monadEffEff"] = monadEffEff;
})(PS["Control.Monad.Eff.Class"] = PS["Control.Monad.Eff.Class"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCoerceEff = function (f) {
    return f;
  };
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var unsafePerformEff = function ($0) {
      return Control_Monad_Eff.runPure($foreign.unsafeCoerceEff($0));
  };
  exports["unsafePerformEff"] = unsafePerformEff;
  exports["unsafeCoerceEff"] = $foreign.unsafeCoerceEff;
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.newSTRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readSTRef = function (ref) {
    return function () {
      return ref.value;
    };
  };
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.ST"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["newSTRef"] = $foreign.newSTRef;
  exports["readSTRef"] = $foreign.readSTRef;
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
    "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
    "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Partial.Unsafe"];
  var Partial = PS["Partial"];
  var unsafeCrashWith = function (msg) {
      return $foreign.unsafePartial(function (dictPartial) {
          return Partial.crashWith(dictPartial)(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var MonadRec = function (Monad0, tailRecM) {
      this.Monad0 = Monad0;
      this.tailRecM = tailRecM;
  };
  var tailRecM = function (dict) {
      return dict.tailRecM;
  };
  var tailRecEff = function (f) {
      return function (a) {
          var fromDone = function (v) {
              var __unused = function (dictPartial1) {
                  return function ($dollar16) {
                      return $dollar16;
                  };
              };
              return __unused()((function () {
                  if (v instanceof Done) {
                      return v.value0;
                  };
                  throw new Error("Failed pattern match at Control.Monad.Rec.Class line 141, column 28 - line 141, column 42: " + [ v.constructor.name ]);
              })());
          };
          var f$prime = function ($52) {
              return Control_Monad_Eff_Unsafe.unsafeCoerceEff(f($52));
          };
          return function __do() {
              var v = Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Control_Monad_ST.newSTRef)(f$prime(a))();
              (function () {
                  while (!(function __do() {
                      var v1 = v.value;
                      if (v1 instanceof Loop) {
                          var v2 = f$prime(v1.value0)();
                          var v3 = v.value = v2;
                          return false;
                      };
                      if (v1 instanceof Done) {
                          return true;
                      };
                      throw new Error("Failed pattern match at Control.Monad.Rec.Class line 130, column 5 - line 135, column 26: " + [ v1.constructor.name ]);
                  })()) {

                  };
                  return {};
              })();
              return Data_Functor.map(Control_Monad_Eff.functorEff)(fromDone)(Control_Monad_ST.readSTRef(v))();
          };
      };
  };
  var tailRec = function (f) {
      var go = function ($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
              if (v instanceof Loop) {
                  $copy_v = f(v.value0);
                  return;
              };
              if (v instanceof Done) {
                  $tco_done = true;
                  return v.value0;
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class line 96, column 3 - line 96, column 25: " + [ v.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return function ($53) {
          return go(f($53));
      };
  }; 
  var monadRecEither = new MonadRec(function () {
      return Data_Either.monadEither;
  }, function (f) {
      return function (a0) {
          var g = function (v) {
              if (v instanceof Data_Either.Left) {
                  return new Done(new Data_Either.Left(v.value0));
              };
              if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
                  return new Loop(f(v.value0.value0));
              };
              if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
                  return new Done(new Data_Either.Right(v.value0.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class line 112, column 7 - line 112, column 33: " + [ v.constructor.name ]);
          };
          return tailRec(g)(f(a0));
      };
  });
  var monadRecEff = new MonadRec(function () {
      return Control_Monad_Eff.monadEff;
  }, tailRecEff);
  var bifunctorStep = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Loop) {
                  return new Loop(v(v2.value0));
              };
              if (v2 instanceof Done) {
                  return new Done(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class line 32, column 1 - line 32, column 41: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["MonadRec"] = MonadRec;
  exports["tailRec"] = tailRec;
  exports["tailRecM"] = tailRecM;
  exports["bifunctorStep"] = bifunctorStep;
  exports["monadRecEff"] = monadRecEff;
  exports["monadRecEither"] = monadRecEither;
})(PS["Control.Monad.Rec.Class"] = PS["Control.Monad.Rec.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var MonadState = function (Monad0, state) {
      this.Monad0 = Monad0;
      this.state = state;
  };
  var state = function (dict) {
      return dict.state;
  };
  var modify = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
          });
      };
  };
  var get = function (dictMonadState) {
      return state(dictMonadState)(function (s) {
          return new Data_Tuple.Tuple(s, s);
      });
  };
  exports["state"] = state;
  exports["MonadState"] = MonadState;
  exports["get"] = get;
  exports["modify"] = modify;
})(PS["Control.Monad.State.Class"] = PS["Control.Monad.State.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Prelude = PS["Prelude"];        
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["lift"] = lift;
  exports["MonadTrans"] = MonadTrans;
})(PS["Control.Monad.Trans.Class"] = PS["Control.Monad.Trans.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  }; 
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var except = function (dictApplicative) {
      return function ($96) {
          return ExceptT(Control_Applicative.pure(dictApplicative)($96));
      };
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
              })(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, function ($98) {
          return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
      });
  };
  var monadThrowExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadExceptT(dictMonad);
      }, function ($102) {
          return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
      });
  };
  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["except"] = except;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS["Control.Monad.Except.Trans"] = PS["Control.Monad.Except.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Prelude = PS["Prelude"];                                                           
  var runExcept = function ($0) {
      return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
  };
  exports["runExcept"] = runExcept;
})(PS["Control.Monad.Except"] = PS["Control.Monad.Except"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Bound = (function () {
      function Bound(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bound.create = function (value0) {
          return function (value1) {
              return new Bound(value0, value1);
          };
      };
      return Bound;
  })();
  var FreeT = (function () {
      function FreeT(value0) {
          this.value0 = value0;
      };
      FreeT.create = function (value0) {
          return new FreeT(value0);
      };
      return FreeT;
  })();
  var Bind = (function () {
      function Bind(value0) {
          this.value0 = value0;
      };
      Bind.create = function (value0) {
          return new Bind(value0);
      };
      return Bind;
  })();
  var monadTransFreeT = function (dictFunctor) {
      return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
          return function (ma) {
              return new FreeT(function (v) {
                  return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Either.Left.create)(ma);
              });
          };
      });
  };
  var freeT = FreeT.create;
  var bound = function (m) {
      return function (f) {
          return new Bind(Data_Exists.mkExists(new Bound(m, f)));
      };
  };
  var functorFreeT = function (dictFunctor) {
      return function (dictFunctor1) {
          return new Data_Functor.Functor(function (f) {
              return function (v) {
                  if (v instanceof FreeT) {
                      return new FreeT(function (v1) {
                          return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
                      });
                  };
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)(function ($104) {
                              return Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f)(v1.value1($104));
                          });
                      })(v.value0);
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans line 58, column 1 - line 58, column 71: " + [ f.constructor.name, v.constructor.name ]);
              };
          });
      };
  };
  var monadFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad.Monad(function () {
              return applicativeFreeT(dictFunctor)(dictMonad);
          }, function () {
              return bindFreeT(dictFunctor)(dictMonad);
          });
      };
  };
  var bindFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Bind.Bind(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (v) {
              return function (f) {
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)(function (x) {
                              return bound(function (v2) {
                                  return v1.value1(x);
                              })(f);
                          });
                      })(v.value0);
                  };
                  return bound(function (v1) {
                      return v;
                  })(f);
              };
          });
      };
  };
  var applyFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Apply.Apply(function () {
              return functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0());
          }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
      };
  };
  var applicativeFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Applicative.Applicative(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (a) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(a));
              });
          });
      };
  };
  var liftFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return function (fa) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
              });
          };
      };
  };
  var resume = function (dictFunctor) {
      return function (dictMonadRec) {
          var go = function (v) {
              if (v instanceof FreeT) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));
              };
              if (v instanceof Bind) {
                  return Data_Exists.runExists(function (v1) {
                      var v2 = v1.value0(Data_Unit.unit);
                      if (v2 instanceof FreeT) {
                          return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(v2.value0(Data_Unit.unit))(function (v3) {
                              if (v3 instanceof Data_Either.Left) {
                                  return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(v1.value1(v3.value0)));
                              };
                              if (v3 instanceof Data_Either.Right) {
                                  return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
                                      return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(h)(v1.value1);
                                  })(v3.value0))));
                              };
                              throw new Error("Failed pattern match at Control.Monad.Free.Trans line 53, column 20 - line 55, column 67: " + [ v3.constructor.name ]);
                          });
                      };
                      if (v2 instanceof Bind) {
                          return Data_Exists.runExists(function (v3) {
                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value0(Data_Unit.unit))(function (z) {
                                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value1(z))(v1.value1);
                              })));
                          })(v2.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans line 51, column 5 - line 56, column 98: " + [ v2.constructor.name ]);
                  })(v.value0);
              };
              throw new Error("Failed pattern match at Control.Monad.Free.Trans line 48, column 3 - line 48, column 75: " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  var runFreeT = function (dictFunctor) {
      return function (dictMonadRec) {
          return function (interp) {
              var go = function (v) {
                  if (v instanceof Data_Either.Left) {
                      return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(v.value0));
                  };
                  if (v instanceof Data_Either.Right) {
                      return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(interp(v.value0));
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans line 127, column 3 - line 127, column 63: " + [ v.constructor.name ]);
              };
              return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped((dictMonadRec.Monad0()).Bind1())(go)(resume(dictFunctor)(dictMonadRec)));
          };
      };
  };
  var monadRecFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad_Rec_Class.MonadRec(function () {
              return monadFreeT(dictFunctor)(dictMonad);
          }, function (f) {
              var go = function (s) {
                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
                      if (v instanceof Control_Monad_Rec_Class.Loop) {
                          return go(v.value0);
                      };
                      if (v instanceof Control_Monad_Rec_Class.Done) {
                          return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans line 81, column 15 - line 83, column 25: " + [ v.constructor.name ]);
                  });
              };
              return go;
          });
      };
  };
  exports["freeT"] = freeT;
  exports["liftFreeT"] = liftFreeT;
  exports["resume"] = resume;
  exports["runFreeT"] = runFreeT;
  exports["functorFreeT"] = functorFreeT;
  exports["applyFreeT"] = applyFreeT;
  exports["applicativeFreeT"] = applicativeFreeT;
  exports["bindFreeT"] = bindFreeT;
  exports["monadFreeT"] = monadFreeT;
  exports["monadTransFreeT"] = monadTransFreeT;
  exports["monadRecFreeT"] = monadRecFreeT;
})(PS["Control.Monad.Free.Trans"] = PS["Control.Monad.Free.Trans"] || {});
(function(exports) {
    "use strict";

  exports.newRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modifyRef'"] = function (ref) {
    return function (f) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.writeRef = function (ref) {
    return function (val) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var modifyRef = function (ref) {
      return function (f) {
          return $foreign["modifyRef'"](ref)(function (s) {
              return {
                  state: f(s),
                  value: Data_Unit.unit
              };
          });
      };
  };
  exports["modifyRef"] = modifyRef;
  exports["newRef"] = $foreign.newRef;
  exports["readRef"] = $foreign.readRef;
  exports["modifyRef'"] = $foreign["modifyRef'"];
  exports["writeRef"] = $foreign.writeRef;
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Cont_Trans = PS["Control.Monad.Cont.Trans"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Compose = PS["Data.Functor.Compose"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Parallel = function (Applicative1, Monad0, parallel, sequential) {
      this.Applicative1 = Applicative1;
      this.Monad0 = Monad0;
      this.parallel = parallel;
      this.sequential = sequential;
  };                                                           
  var sequential = function (dict) {
      return dict.sequential;
  };
  var parallel = function (dict) {
      return dict.parallel;
  };
  exports["Parallel"] = Parallel;
  exports["parallel"] = parallel;
  exports["sequential"] = sequential;
})(PS["Control.Parallel.Class"] = PS["Control.Parallel.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];        
  var parTraverse_ = function (dictParallel) {
      return function (dictFoldable) {
          return function (f) {
              return function ($17) {
                  return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)(function ($18) {
                      return Control_Parallel_Class.parallel(dictParallel)(f($18));
                  })($17));
              };
          };
      };
  };
  var parSequence_ = function (dictParallel) {
      return function (dictFoldable) {
          return parTraverse_(dictParallel)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  exports["parTraverse_"] = parTraverse_;
  exports["parSequence_"] = parSequence_;
})(PS["Control.Parallel"] = PS["Control.Parallel"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Prelude = PS["Prelude"];        
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  };
  var profunctorFn = new Profunctor(function (a2b) {
      return function (c2d) {
          return function (b2c) {
              return function ($9) {
                  return c2d(b2c(a2b($9)));
              };
          };
      };
  });
  var dimap = function (dict) {
      return dict.dimap;
  };
  var rmap = function (dictProfunctor) {
      return function (b2c) {
          return dimap(dictProfunctor)(Control_Category.id(Control_Category.categoryFn))(b2c);
      };
  };
  exports["dimap"] = dimap;
  exports["Profunctor"] = Profunctor;
  exports["rmap"] = rmap;
  exports["profunctorFn"] = profunctorFn;
})(PS["Data.Profunctor"] = PS["Data.Profunctor"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Emit = (function () {
      function Emit(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Emit.create = function (value0) {
          return function (value1) {
              return new Emit(value0, value1);
          };
      };
      return Emit;
  })();
  var runProcess = function (dictMonadRec) {
      return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)(function ($186) {
          return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($186));
      });
  };
  var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
      return function (g) {
          return function (v) {
              return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(v);
          };
      };
  });
  var loop = function (dictFunctor) {
      return function (dictMonad) {
          return function (me) {
              return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(dictFunctor)(dictMonad))(function (v) {
                  return Data_Functor.map(Control_Monad_Free_Trans.functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0()))(Data_Maybe.maybe(new Control_Monad_Rec_Class.Loop(Data_Unit.unit))(Control_Monad_Rec_Class.Done.create))(me);
              })(Data_Unit.unit);
          };
      };
  };
  var fuseWithL = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictFunctor2) {
              return function (dictMonadRec) {
                  return function (zap) {
                      return function (fs) {
                          return function (gs) {
                              var go = function (v) {
                                  return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0)))(function (v1) {
                                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))(function (v2) {
                                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonadRec.Monad0()))(Data_Functor.map(dictFunctor2)(function (t) {
                                              return Control_Monad_Free_Trans.freeT(function (v3) {
                                                  return go(t);
                                              });
                                          })(zap(Data_Tuple.Tuple.create)(v1)(v2)));
                                      });
                                  }));
                              };
                              return Control_Monad_Free_Trans.freeT(function (v) {
                                  return go(new Data_Tuple.Tuple(fs, gs));
                              });
                          };
                      };
                  };
              };
          };
      };
  };
  var fuseWith = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictFunctor2) {
              return function (dictMonadRec) {
                  return function (dictParallel) {
                      return function (zap) {
                          return function (fs) {
                              return function (gs) {
                                  var go = function (v) {
                                      return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictParallel.Applicative1()).Apply0())(Data_Functor.map(((dictParallel.Applicative1()).Apply0()).Functor0())(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function (v1) {
                                          if (v1 instanceof Data_Either.Left) {
                                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Left(v1.value0));
                                          };
                                          if (v1 instanceof Data_Either.Right) {
                                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
                                                  return Control_Monad_Free_Trans.freeT(function (v2) {
                                                      return go(t);
                                                  });
                                              })(v1.value0)));
                                          };
                                          throw new Error("Failed pattern match at Control.Coroutine line 80, column 5 - line 82, column 63: " + [ v1.constructor.name ]);
                                      });
                                  };
                                  return Control_Monad_Free_Trans.freeT(function (v) {
                                      return go(new Data_Tuple.Tuple(fs, gs));
                                  });
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var functorAwait = new Data_Functor.Functor(Data_Profunctor.rmap(profunctorAwait));
  var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return new Emit(f(v.value0), g(v.value1));
          };
      };
  });
  var functorEmit = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorEmit));
  var connect = function (dictMonadRec) {
      return function (dictParallel) {
          return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
              return function (v) {
                  return function (v1) {
                      return f(v.value1)(v1(v.value0));
                  };
              };
          });
      };
  };
  var emit = function (dictMonad) {
      return function (o) {
          return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o, Data_Unit.unit));
      };
  };
  var producer = function (dictMonad) {
      return function (recv) {
          return loop(functorEmit)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonad)(recv))(function (v) {
              if (v instanceof Data_Either.Left) {
                  return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorEmit)(((dictMonad.Bind1()).Apply0()).Functor0()))(emit(dictMonad)(v.value0))(Data_Maybe.Nothing.value);
              };
              if (v instanceof Data_Either.Right) {
                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonad))(new Data_Maybe.Just(v.value0));
              };
              throw new Error("Failed pattern match at Control.Coroutine line 126, column 3 - line 128, column 29: " + [ v.constructor.name ]);
          }));
      };
  };
  var pullFrom = function (dictMonadRec) {
      return fuseWithL(functorAwait)(functorEmit)(Data_Identity.functorIdentity)(dictMonadRec)(function (f) {
          return function (v) {
              return function (v1) {
                  return Control_Applicative.pure(Data_Identity.applicativeIdentity)(f(v(v1.value0))(v1.value1));
              };
          };
      });
  };
  var $$await = function (dictMonad) {
      return Control_Monad_Free_Trans.liftFreeT(functorAwait)(dictMonad)(Control_Category.id(Control_Category.categoryFn));
  };
  exports["loop"] = loop;
  exports["runProcess"] = runProcess;
  exports["fuseWith"] = fuseWith;
  exports["fuseWithL"] = fuseWithL;
  exports["Emit"] = Emit;
  exports["emit"] = emit;
  exports["producer"] = producer;
  exports["await"] = $$await;
  exports["connect"] = connect;
  exports["pullFrom"] = pullFrom;
  exports["bifunctorEmit"] = bifunctorEmit;
  exports["functorEmit"] = functorEmit;
  exports["profunctorAwait"] = profunctorAwait;
  exports["functorAwait"] = functorAwait;
})(PS["Control.Coroutine"] = PS["Control.Coroutine"] || {});
(function(exports) {
  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
  /* jshint -W083, -W098, -W003 */
  "use strict";

  var Aff = function () {
    // A unique value for empty.
    var EMPTY = {};

    /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */  
    var PURE    = "Pure";
    var THROW   = "Throw";
    var CATCH   = "Catch";
    var SYNC    = "Sync";
    var ASYNC   = "Async";
    var BIND    = "Bind";
    var BRACKET = "Bracket";
    var FORK    = "Fork";
    var SEQ     = "Sequential";

    /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */  
    var MAP   = "Map";
    var APPLY = "Apply";
    var ALT   = "Alt";

    // Various constructors used in interpretation
    var CONS      = "Cons";      // Cons-list, for stacks
    var RESUME    = "Resume";    // Continue indiscriminately
    var RELEASE   = "Release";   // Continue with bracket finalizers
    var FINALIZER = "Finalizer"; // A non-interruptible effect
    var FINALIZED = "Finalized"; // Marker for finalization
    var FORKED    = "Forked";    // Reference to a forked fiber, with resumption stack
    var FIBER     = "Fiber";     // Actual fiber reference
    var THUNK     = "Thunk";     // Primed effect, ready to invoke

    function Aff(tag, _1, _2, _3) {
      this.tag = tag;
      this._1  = _1;
      this._2  = _2;
      this._3  = _3;
    }

    function AffCtr(tag) {
      var fn = function (_1, _2, _3) {
        return new Aff(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }

    function nonCanceler(error) {
      return new Aff(PURE, void 0);
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error) {
        return left(error);
      }
    }

    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error) {
        k(left(error))();
        return nonCanceler;
      }
    }

    var Scheduler = function () {
      var limit    = 1024;
      var size     = 0;
      var ix       = 0;
      var queue    = new Array(limit);
      var draining = false;

      function drain() {
        var thunk;
        draining = true;
        while (size !== 0) {
          size--;
          thunk     = queue[ix];
          queue[ix] = void 0;
          ix        = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }

      return {
        isDraining: function () {
          return draining;
        },
        enqueue: function (cb) {
          var i, tmp;
          if (size === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }

          queue[(ix + size) % limit] = cb;
          size++;

          if (!draining) {
            drain();
          }
        }
      };
    }();

    function Supervisor(util) {
      var fibers  = {};
      var fiberId = 0;
      var count   = 0;

      return {
        register: function (fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function (result) {
              return function () {
                count--;
                delete fibers[fid];
              };
            }
          });
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function () {
          return count === 0;
        },
        killAll: function (killError, cb) {
          return function () {
            var killCount = 0;
            var kills     = {};

            function kill(fid) {
              kills[fid] = fibers[fid].kill(killError, function (result) {
                return function () {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function () {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }

            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill(k);
              }
            }

            fibers  = {};
            fiberId = 0;
            count   = 0;

            return function (error) {
              return new Aff(SYNC, function () {
                for (var k in kills) {
                  if (kills.hasOwnProperty(k)) {
                    kills[k]();
                  }
                }
              });
            };
          };
        }
      };
    }

    // Fiber state machine
    var SUSPENDED   = 0; // Suspended, pending a join.
    var CONTINUE    = 1; // Interpret the next instruction.
    var STEP_BIND   = 2; // Apply the next bind.
    var STEP_RESULT = 3; // Handle potential failure from a result.
    var PENDING     = 4; // An async effect is running.
    var RETURN      = 5; // The current stack has returned.
    var COMPLETED   = 6; // The entire fiber has completed.

    function Fiber(util, supervisor, aff) {
      // Monotonically increasing tick, increased on each asynchronous turn.
      var runTick = 0;

      // The current branch of the state machine.
      var status = SUSPENDED;

      // The current point of interest for the state machine branch.
      var step      = aff;  // Successful step
      var fail      = null; // Failure step
      var interrupt = null; // Asynchronous interrupt

      // Stack of continuations for the current fiber.
      var bhead = null;
      var btail = null;

      // Stack of attempts and finalizers for error recovery. Every `Cons` is also
      // tagged with current `interrupt` state. We use this to track which items
      // should be ignored or evaluated as a result of a kill.
      var attempts = null;

      // A special state is needed for Bracket, because it cannot be killed. When
      // we enter a bracket acquisition or finalizer, we increment the counter,
      // and then decrement once complete.
      var bracketCount = 0;

      // Each join gets a new id so they can be revoked.
      var joinId  = 0;
      var joins   = null;
      var rethrow = true;

      // Each invocation of `run` requires a tick. When an asynchronous effect is
      // resolved, we must check that the local tick coincides with the fiber
      // tick before resuming. This prevents multiple async continuations from
      // accidentally resuming the same fiber. A common example may be invoking
      // the provided callback in `makeAff` more than once, but it may also be an
      // async effect resuming after the fiber was already cancelled.
      function run(localRunTick) {
        var tmp, result, attempt, canceler;
        while (true) {
          tmp       = null;
          result    = null;
          attempt   = null;
          canceler  = null;

          switch (status) {
          case STEP_BIND:
            status = CONTINUE;
            step   = bhead(step);
            if (btail === null) {
              bhead = null;
            } else {
              bhead = btail._1;
              btail = btail._2;
            }
            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail   = step;
              step   = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step   = util.fromRight(step);
            }
            break;

          case CONTINUE:
            switch (step.tag) {
            case BIND:
              if (bhead) {
                btail = new Aff(CONS, bhead, btail);
              }
              bhead  = step._2;
              status = CONTINUE;
              step   = step._1;
              break;

            case PURE:
              if (bhead === null) {
                status = RETURN;
                step   = util.right(step._1);
              } else {
                status = STEP_BIND;
                step   = step._1;
              }
              break;

            case SYNC:
              status = STEP_RESULT;
              step   = runSync(util.left, util.right, step._1);
              break;

            case ASYNC:
              status = PENDING;
              step   = runAsync(util.left, step._1, function (result) {
                return function () {
                  if (runTick !== localRunTick) {
                    return;
                  }
                  runTick++;
                  Scheduler.enqueue(function () {
                    status = STEP_RESULT;
                    step   = result;
                    run(runTick);
                  });
                };
              });
              return;

            case THROW:
              status = RETURN;
              fail   = util.left(step._1);
              step   = null;
              break;

            // Enqueue the Catch so that we can call the error handler later on
            // in case of an exception.
            case CATCH:
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead    = null;
              btail    = null;
              status   = CONTINUE;
              step     = step._1;
              break;

            // Enqueue the Bracket so that we can call the appropriate handlers
            // after resource acquisition.
            case BRACKET:
              bracketCount++;
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead  = null;
              btail  = null;
              status = CONTINUE;
              step   = step._1;
              break;

            case FORK:
              status = STEP_BIND;
              tmp    = Fiber(util, supervisor, step._2);
              if (supervisor) {
                supervisor.register(tmp);
              }
              if (step._1) {
                tmp.run();
              }
              step = tmp;
              break;

            case SEQ:
              status = CONTINUE;
              step   = sequential(util, supervisor, step._1);
              break;
            }
            break;

          case RETURN:
            bhead = null;
            btail = null;
            // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.
            if (attempts === null) {
              status = COMPLETED;
              step   = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp      = attempts._3;
              attempt  = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
              // We cannot recover from an interrupt. Otherwise we should
              // continue stepping, or run the exception handler if an exception
              // was raised.
              case CATCH:
                // We should compare the interrupt status as well because we
                // only want it to apply if there has been an interrupt since
                // enqueuing the catch.
                if (interrupt && interrupt !== tmp) {
                  status = RETURN;
                } else if (fail) {
                  status = CONTINUE;
                  step   = attempt._2(util.fromLeft(fail));
                  fail   = null;
                }
                break;

              // We cannot resume from an interrupt or exception.
              case RESUME:
                // As with Catch, we only want to ignore in the case of an
                // interrupt since enqueing the item.
                if (interrupt && interrupt !== tmp || fail) {
                  status = RETURN;
                } else {
                  bhead  = attempt._1;
                  btail  = attempt._2;
                  status = STEP_BIND;
                  step   = util.fromRight(step);
                }
                break;

              // If we have a bracket, we should enqueue the handlers,
              // and continue with the success branch only if the fiber has
              // not been interrupted. If the bracket acquisition failed, we
              // should not run either.
              case BRACKET:
                bracketCount--;
                if (fail === null) {
                  result   = util.fromRight(step);
                  // We need to enqueue the Release with the same interrupt
                  // status as the Bracket that is initiating it.
                  attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
                  // We should only coninue as long as the interrupt status has not changed or
                  // we are currently within a non-interruptable finalizer.
                  if (interrupt === tmp || bracketCount > 0) {
                    status = CONTINUE;
                    step   = attempt._3(result);
                  }
                }
                break;

              // Enqueue the appropriate handler. We increase the bracket count
              // because it should not be cancelled.
              case RELEASE:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step), attempts, interrupt);
                status   = CONTINUE;
                // It has only been killed if the interrupt status has changed
                // since we enqueued the item.
                if (interrupt && interrupt !== tmp) {
                  step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                } else if (fail) {
                  step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                } else {
                  step = attempt._1.completed(util.fromRight(step))(attempt._2);
                }
                break;

              case FINALIZER:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step), attempts, interrupt);
                status   = CONTINUE;
                step     = attempt._1;
                break;

              case FINALIZED:
                bracketCount--;
                status = RETURN;
                step   = attempt._1;
                break;
              }
            }
            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }
            joins = null;
            // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.
            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0);
            // If we have an unhandled exception, and no other fiber has joined
            // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }
            return;
          case SUSPENDED:
            status = CONTINUE;
            break;
          case PENDING: return;
          }
        }
      }

      function onComplete(join) {
        return function () {
          if (status === COMPLETED) {
            rethrow = rethrow && join.rethrow;
            join.handler(step)();
            return function () {};
          }

          var jid    = joinId++;
          joins      = joins || {};
          joins[jid] = join;

          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }

      function kill(error, cb) {
        return function () {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function () {};
          }

          var canceler = onComplete({
            rethrow: false,
            handler: function (/* unused */) {
              return cb(util.right(void 0));
            }
          })();

          switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status    = COMPLETED;
            step      = interrupt;
            run(runTick);
            break;
          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }
              status   = RETURN;
              step     = null;
              fail     = null;
              run(++runTick);
            }
            break;
          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              status = RETURN;
              step   = null;
              fail   = null;
            }
          }

          return canceler;
        };
      }

      function join(cb) {
        return function () {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run(runTick);
          }
          return canceler;
        };
      }

      return {
        kill: kill,
        join: join,
        onComplete: onComplete,
        isSuspended: function () {
          return status === SUSPENDED;
        },
        run: function () {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function () {
                run(runTick);
              });
            } else {
              run(runTick);
            }
          }
        }
      };
    }

    function runPar(util, supervisor, par, cb) {
      // Table of all forked fibers.
      var fiberId   = 0;
      var fibers    = {};

      // Table of currently running cancelers, as a product of `Alt` behavior.
      var killId    = 0;
      var kills     = {};

      // Error used for early cancelation on Alt branches.
      var early     = new Error("[ParAff] Early exit");

      // Error used to kill the entire tree.
      var interrupt = null;

      // The root pointer of the tree.
      var root      = EMPTY;

      // Walks a tree, invoking all the cancelers. Returns the table of pending
      // cancellation fibers.
      function kill(error, par, cb) {
        var step  = par;
        var head  = null;
        var tail  = null;
        var count = 0;
        var kills = {};
        var tmp, kid;

        loop: while (true) {
          tmp = null;

          switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;
                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            }
            // Terminal case.
            if (head === null) {
              break loop;
            }
            // Go down the right side of the tree.
            step = head._2;
            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }
            break;
          case MAP:
            step = step._2;
            break;
          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = step;
            step = step._1;
            break;
          }
        }

        if (count === 0) {
          cb(util.right(void 0))();
        } else {
          // Run the cancelation effects. We alias `count` because it's mutable.
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills[kid] = kills[kid]();
          }
        }

        return kills;
      }

      // When a fiber resolves, we need to bubble back up the tree with the
      // result, computing the applicative nodes.
      function join(result, head, tail) {
        var fail, step, lhs, rhs, tmp, kid;

        if (util.isLeft(result)) {
          fail = result;
          step = null;
        } else {
          step = result;
          fail = null;
        }

        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;

          // We should never continue if the entire tree has been interrupted.
          if (interrupt !== null) {
            return;
          }

          // We've made it all the way to the root of the tree, which means
          // the tree has fully evaluated.
          if (head === null) {
            cb(fail || step)();
            return;
          }

          // The tree has already been computed, so we shouldn't try to do it
          // again. This should never happen.
          // TODO: Remove this?
          if (head._3 !== EMPTY) {
            return;
          }

          switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step    = head._3;
            } else {
              head._3 = fail;
            }
            break;
          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3;
            // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.
            if (fail) {
              head._3 = fail;
              tmp     = true;
              kid     = killId++;

              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }
            break;
          case ALT:
            lhs = head._1._3;
            rhs = head._2._3;
            // We can only proceed if both have resolved or we have a success
            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            }
            // If both sides resolve with an error, we should continue with the
            // first error
            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail    = step === lhs ? rhs : lhs;
              step    = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp     = true;
              kid     = killId++;
              // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.
              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }
            break;
          }

          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
        }
      }

      function resolve(fiber) {
        return function (result) {
          return function () {
            delete fibers[fiber._1];
            fiber._3 = result;
            join(result, fiber._2._1, fiber._2._2);
          };
        };
      }

      // Walks the applicative tree, substituting non-applicative nodes with
      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
      // as a mutable slot for memoization. In an unresolved state, the `_3`
      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
      // the left side first, because both operations are left-associative. As
      // we `RETURN` from those branches, we then walk the right side.
      function run() {
        var status = CONTINUE;
        var step   = par;
        var head   = null;
        var tail   = null;
        var tmp, fid;

        loop: while (true) {
          tmp = null;
          fid = null;

          switch (status) {
          case CONTINUE:
            switch (step.tag) {
            case MAP:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(MAP, step._1, EMPTY, EMPTY);
              step = step._2;
              break;
            case APPLY:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(APPLY, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            case ALT:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(ALT, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            default:
              // When we hit a leaf value, we suspend the stack in the `FORKED`.
              // When the fiber resolves, it can bubble back up the tree.
              fid    = fiberId++;
              status = RETURN;
              tmp    = step;
              step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
              tmp    = Fiber(util, supervisor, tmp);
              tmp.onComplete({
                rethrow: false,
                handler: resolve(step)
              })();
              fibers[fid] = tmp;
              if (supervisor) {
                supervisor.register(tmp);
              }
            }
            break;
          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            }
            // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.
            if (head._1 === EMPTY) {
              head._1 = step;
              status  = CONTINUE;
              step    = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step    = head;
              if (tail === null) {
                head  = null;
              } else {
                head  = tail._1;
                tail  = tail._2;
              }
            }
          }
        }

        // Keep a reference to the tree root so it can be cancelled.
        root = step;

        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }

      // Cancels the entire tree. If there are already subtrees being canceled,
      // we need to first cancel those joins. We will then add fresh joins for
      // all pending branches including those that were in the process of being
      // canceled.
      function cancel(error, cb) {
        interrupt = util.left(error);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }

        kills = null;
        var newKills = kill(error, root, cb);

        return function (killError) {
          return new Aff(ASYNC, function (killCb) {
            return function () {
              for (var kid in newKills) {
                if (newKills.hasOwnProperty(kid)) {
                  newKills[kid]();
                }
              }
              return nonCanceler;
            };
          });
        };
      }

      run();

      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            return cancel(killError, killCb);
          };
        });
      };
    }

    function sequential(util, supervisor, par) {
      return new Aff(ASYNC, function (cb) {
        return function () {
          return runPar(util, supervisor, par, cb);
        };
      });
    }

    Aff.EMPTY       = EMPTY;
    Aff.Pure        = AffCtr(PURE);
    Aff.Throw       = AffCtr(THROW);
    Aff.Catch       = AffCtr(CATCH);
    Aff.Sync        = AffCtr(SYNC);
    Aff.Async       = AffCtr(ASYNC);
    Aff.Bind        = AffCtr(BIND);
    Aff.Bracket     = AffCtr(BRACKET);
    Aff.Fork        = AffCtr(FORK);
    Aff.Seq         = AffCtr(SEQ);
    Aff.ParMap      = AffCtr(MAP);
    Aff.ParApply    = AffCtr(APPLY);
    Aff.ParAlt      = AffCtr(ALT);
    Aff.Fiber       = Fiber;
    Aff.Supervisor  = Supervisor;
    Aff.Scheduler   = Scheduler;
    Aff.nonCanceler = nonCanceler;

    return Aff;
  }();

  exports._pure = Aff.Pure;

  exports._throwError = Aff.Throw;

  exports._catchError = function (aff) {
    return function (k) {
      return Aff.Catch(aff, k);
    };
  };

  exports._map = function (f) {
    return function (aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function (value) {
          return Aff.Pure(f(value));
        });
      }
    };
  };

  exports._bind = function (aff) {
    return function (k) {
      return Aff.Bind(aff, k);
    };
  };

  exports._fork = function (immediate) {
    return function (aff) {
      return Aff.Fork(immediate, aff);
    };
  };

  exports._liftEff = Aff.Sync;

  exports._parAffMap = function (f) {
    return function (aff) {
      return Aff.ParMap(f, aff);
    };
  };

  exports._parAffApply = function (aff1) {
    return function (aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  };

  exports.makeAff = Aff.Async;

  exports._makeFiber = function (util, aff) {
    return function () {
      return Aff.Fiber(util, null, aff);
    };
  };

  exports._delay = function () {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }

    function clearDelay(n, t) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t);
      } else {
        return clearTimeout(t);
      }
    }

    return function (right, ms) {
      return Aff.Async(function (cb) {
        return function () {
          var timer = setDelay(ms, cb(right()));
          return function () {
            return Aff.Sync(function () {
              return right(clearDelay(ms, timer));
            });
          };
        };
      });
    };
  }();

  exports._sequential = Aff.Seq;
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
    "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  var $$throw = function ($1) {
      return $foreign.throwException($foreign.error($1));
  };
  exports["throw"] = $$throw;
  exports["error"] = $foreign.error;
  exports["throwException"] = $foreign.throwException;
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
    "use strict";

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Function.Uncurried"];
  var Data_Unit = PS["Data.Unit"];
  exports["runFn4"] = $foreign.runFn4;
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Aff"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Canceler = function (x) {
      return x;
  };
  var suspendAff = $foreign._fork(false);
  var functorParAff = new Data_Functor.Functor($foreign._parAffMap);
  var functorAff = new Data_Functor.Functor($foreign._map);
  var forkAff = $foreign._fork(true);
  var ffiUtil = (function () {
      var unsafeFromRight = function (v) {
          if (v instanceof Data_Either.Right) {
              return v.value0;
          };
          if (v instanceof Data_Either.Left) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
          };
          throw new Error("Failed pattern match at Control.Monad.Aff line 398, column 21 - line 400, column 31: " + [ v.constructor.name ]);
      };
      var unsafeFromLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return v.value0;
          };
          if (v instanceof Data_Either.Right) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
          };
          throw new Error("Failed pattern match at Control.Monad.Aff line 393, column 20 - line 397, column 3: " + [ v.constructor.name ]);
      };
      var isLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return true;
          };
          if (v instanceof Data_Either.Right) {
              return false;
          };
          throw new Error("Failed pattern match at Control.Monad.Aff line 388, column 12 - line 390, column 20: " + [ v.constructor.name ]);
      };
      return {
          isLeft: isLeft,
          fromLeft: unsafeFromLeft,
          fromRight: unsafeFromRight,
          left: Data_Either.Left.create,
          right: Data_Either.Right.create
      };
  })();
  var makeFiber = function (aff) {
      return $foreign._makeFiber(ffiUtil, aff);
  };
  var launchAff = function (aff) {
      return function __do() {
          var v = makeFiber(aff)();
          v.run();
          return v;
      };
  };
  var launchAff_ = function ($49) {
      return Data_Functor["void"](Control_Monad_Eff.functorEff)(launchAff($49));
  };                                 
  var delay = function (v) {
      return $foreign._delay(Data_Either.Right.create, v);
  };
  var applyParAff = new Control_Apply.Apply(function () {
      return functorParAff;
  }, $foreign._parAffApply);
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, $foreign._bind);
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, Control_Monad.ap(monadAff));
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, $foreign._pure);
  var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
      return monadAff;
  }, $foreign._liftEff);
  var effCanceler = function ($50) {
      return Canceler(Data_Function["const"](Control_Monad_Eff_Class.liftEff(monadEffAff)($50)));
  };
  var joinFiber = function (v) {
      return $foreign.makeAff(function (k) {
          return Data_Functor.map(Control_Monad_Eff.functorEff)(effCanceler)(v.join(k));
      });
  };
  var functorFiber = new Data_Functor.Functor(function (f) {
      return function (t) {
          return Control_Monad_Eff_Unsafe.unsafePerformEff(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));
      };
  });
  var killFiber = function (e) {
      return function (v) {
          return Control_Bind.bind(bindAff)(Control_Monad_Eff_Class.liftEff(monadEffAff)(v.isSuspended))(function (v1) {
              if (v1) {
                  return Control_Monad_Eff_Class.liftEff(monadEffAff)(Data_Functor["void"](Control_Monad_Eff.functorEff)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))));
              };
              return $foreign.makeAff(function (k) {
                  return Data_Functor.map(Control_Monad_Eff.functorEff)(effCanceler)(v.kill(e, k));
              });
          });
      };
  };
  var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
      return monadAff;
  }, $foreign._throwError);
  var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
      return monadThrowAff;
  }, $foreign._catchError);                                     
  var runAff = function (k) {
      return function (aff) {
          return launchAff(Control_Bind.bindFlipped(bindAff)(function ($52) {
              return Control_Monad_Eff_Class.liftEff(monadEffAff)(k($52));
          })(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
      };
  };
  var runAff_ = function (k) {
      return function (aff) {
          return Data_Functor["void"](Control_Monad_Eff.functorEff)(runAff(k)(aff));
      };
  };
  var parallelAff = new Control_Parallel_Class.Parallel(function () {
      return applicativeParAff;
  }, function () {
      return monadAff;
  }, Unsafe_Coerce.unsafeCoerce, $foreign._sequential);
  var applicativeParAff = new Control_Applicative.Applicative(function () {
      return applyParAff;
  }, function ($54) {
      return Control_Parallel_Class.parallel(parallelAff)(Control_Applicative.pure(applicativeAff)($54));
  });
  var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadAff;
  }, function (k) {
      var go = function (a) {
          return Control_Bind.bind(bindAff)(k(a))(function (v) {
              if (v instanceof Control_Monad_Rec_Class.Done) {
                  return Control_Applicative.pure(applicativeAff)(v.value0);
              };
              if (v instanceof Control_Monad_Rec_Class.Loop) {
                  return go(v.value0);
              };
              throw new Error("Failed pattern match at Control.Monad.Aff line 100, column 7 - line 102, column 22: " + [ v.constructor.name ]);
          });
      };
      return go;
  });
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
  exports["Canceler"] = Canceler;
  exports["launchAff"] = launchAff;
  exports["launchAff_"] = launchAff_;
  exports["runAff"] = runAff;
  exports["runAff_"] = runAff_;
  exports["forkAff"] = forkAff;
  exports["suspendAff"] = suspendAff;
  exports["delay"] = delay;
  exports["killFiber"] = killFiber;
  exports["joinFiber"] = joinFiber;
  exports["nonCanceler"] = nonCanceler;
  exports["effCanceler"] = effCanceler;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadRecAff"] = monadRecAff;
  exports["monadThrowAff"] = monadThrowAff;
  exports["monadErrorAff"] = monadErrorAff;
  exports["monadEffAff"] = monadEffAff;
  exports["functorParAff"] = functorParAff;
  exports["applyParAff"] = applyParAff;
  exports["applicativeParAff"] = applicativeParAff;
  exports["parallelAff"] = parallelAff;
  exports["functorFiber"] = functorFiber;
  exports["makeAff"] = $foreign.makeAff;
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  /* globals exports, setTimeout */
  /* jshint -W097 */

  "use strict";

  var AVar = function () {
    function MutableQueue () {
      this.head = null;
      this.last = null;
      this.size = 0;
    }

    function MutableCell (queue, value) {
      this.queue = queue;
      this.value = value;
      this.next  = null;
      this.prev  = null;
    }

    function AVar (value) {
      this.draining = false;
      this.error    = null;
      this.value    = value;
      this.takes    = new MutableQueue();
      this.reads    = new MutableQueue();
      this.puts     = new MutableQueue();
    }

    var EMPTY = {};

    function putLast (queue, value) {
      var cell = new MutableCell(queue, value);
      switch (queue.size) {
      case 0:
        queue.head = cell;
        break;
      case 1:
        cell.prev = queue.head;
        queue.head.next = cell;
        queue.last = cell;
        break;
      default:
        cell.prev = queue.last;
        queue.last.next = cell;
        queue.last = cell;
      }
      queue.size++;
      return cell;
    }

    function takeLast (queue) {
      var cell;
      switch (queue.size) {
      case 0:
        return null;
      case 1:
        cell = queue.head;
        queue.head = null;
        break;
      case 2:
        cell = queue.last;
        queue.head.next = null;
        queue.last = null;
        break;
      default:
        cell = queue.last;
        queue.last = cell.prev;
        queue.last.next = null;
      }
      cell.prev = null;
      cell.queue = null;
      queue.size--;
      return cell.value;
    }

    function takeHead (queue) {
      var cell;
      switch (queue.size) {
      case 0:
        return null;
      case 1:
        cell = queue.head;
        queue.head = null;
        break;
      case 2:
        cell = queue.head;
        queue.last.prev = null;
        queue.head = queue.last;
        queue.last = null;
        break;
      default:
        cell = queue.head;
        queue.head = cell.next;
        queue.head.prev = null;
      }
      cell.next = null;
      cell.queue = null;
      queue.size--;
      return cell.value;
    }

    function deleteCell (cell) {
      if (cell.queue === null) {
        return;
      }
      if (cell.queue.last === cell) {
        takeLast(cell.queue);
        return;
      }
      if (cell.queue.head === cell) {
        takeHead(cell.queue);
        return;
      }
      if (cell.prev) {
        cell.prev.next = cell.next;
      }
      if (cell.next) {
        cell.next.prev = cell.prev;
      }
      cell.queue.size--;
      cell.queue = null;
      cell.value = null;
      cell.next  = null;
      cell.prev  = null;
    }

    function drainVar (util, avar) {
      if (avar.draining) {
        return;
      }

      var ps = avar.puts;
      var ts = avar.takes;
      var rs = avar.reads;
      var p, r, t, value, rsize;

      avar.draining = true;

      /* jshint -W084 */
      while (1) {
        p = null;
        r = null;
        t = null;
        value = avar.value;
        rsize = rs.size;

        if (avar.error !== null) {
          value = util.left(avar.error);
          while (p = takeHead(ps)) {
            runEff(p.cb(value));
          }
          while (r = takeHead(rs)) {
            runEff(r(value));
          }
          while (t = takeHead(ts)) {
            runEff(t(value));
          }
          break;
        }

        // Process the next put. We do not immediately invoke the callback
        // because we want to preserve ordering. If there are takes/reads
        // we want to run those first.
        if (value === EMPTY && (p = takeHead(ps))) {
          avar.value = value = p.value;
        }

        if (value !== EMPTY) {
          // We go ahead and queue up the next take for the same reasons as
          // above. Invoking the read callbacks can affect the mutable queue.
          t = takeHead(ts);
          // We only want to process the reads queued up before running these
          // callbacks so we guard on rsize.
          while (rsize-- && (r = takeHead(rs))) {
            runEff(r(util.right(value)));
          }
          if (t !== null) {
            avar.value = EMPTY;
            runEff(t(util.right(value)));
          }
        }

        if (p !== null) {
          runEff(p.cb(util.right(void 0)));
        }

        // Callbacks could have queued up more items so we need to guard on the
        // actual mutable properties.
        if (avar.value === EMPTY && ps.size === 0 || avar.value !== EMPTY && ts.size === 0) {
          break;
        }
      }
      /* jshint +W084 */

      avar.draining = false;
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    AVar.EMPTY      = EMPTY;
    AVar.putLast    = putLast;
    AVar.takeLast   = takeLast;
    AVar.takeHead   = takeHead;
    AVar.deleteCell = deleteCell;
    AVar.drainVar   = drainVar;

    return AVar;
  }();

  exports.makeEmptyVar = function () {
    return new AVar(AVar.EMPTY);
  };

  exports._killVar = function (util, error, avar) {
    return function () {
      if (avar.error === null) {
        avar.error = error;
        avar.value = AVar.EMPTY;
        AVar.drainVar(util, avar);
      }
    };
  };

  exports._putVar = function (util, value, avar, cb) {
    return function () {
      var cell = AVar.putLast(avar.puts, { cb: cb, value: value });
      AVar.drainVar(util, avar);
      return function () {
        AVar.deleteCell(cell);
      };
    };
  };

  exports._takeVar = function (util, avar, cb) {
    return function () {
      var cell = AVar.putLast(avar.takes, cb);
      AVar.drainVar(util, avar);
      return function () {
        AVar.deleteCell(cell);
      };
    };
  };
})(PS["Control.Monad.Eff.AVar"] = PS["Control.Monad.Eff.AVar"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.AVar"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];        
  var Killed = (function () {
      function Killed(value0) {
          this.value0 = value0;
      };
      Killed.create = function (value0) {
          return new Killed(value0);
      };
      return Killed;
  })();
  var Filled = (function () {
      function Filled(value0) {
          this.value0 = value0;
      };
      Filled.create = function (value0) {
          return new Filled(value0);
      };
      return Filled;
  })();
  var Empty = (function () {
      function Empty() {

      };
      Empty.value = new Empty();
      return Empty;
  })();
  var ffiUtil = {
      left: Data_Either.Left.create,
      right: Data_Either.Right.create,
      nothing: Data_Maybe.Nothing.value,
      just: Data_Maybe.Just.create,
      killed: Killed.create,
      filled: Filled.create,
      empty: Empty.value
  };
  var killVar = function (err) {
      return function (avar) {
          return $foreign._killVar(ffiUtil, err, avar);
      };
  };
  var putVar = function (value) {
      return function (avar) {
          return function (cb) {
              return $foreign._putVar(ffiUtil, value, avar, cb);
          };
      };
  };
  var takeVar = function (avar) {
      return function (cb) {
          return $foreign._takeVar(ffiUtil, avar, cb);
      };
  };
  exports["Killed"] = Killed;
  exports["Filled"] = Filled;
  exports["Empty"] = Empty;
  exports["takeVar"] = takeVar;
  exports["putVar"] = putVar;
  exports["killVar"] = killVar;
  exports["makeEmptyVar"] = $foreign.makeEmptyVar;
})(PS["Control.Monad.Eff.AVar"] = PS["Control.Monad.Eff.AVar"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_AVar = PS["Control.Monad.Eff.AVar"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];
  var takeVar = function (avar) {
      return Control_Monad_Aff.makeAff(function (k) {
          return function __do() {
              var v = Control_Monad_Eff_AVar.takeVar(avar)(k)();
              return Control_Monad_Aff.effCanceler(v);
          };
      });
  };
  var putVar = function (value) {
      return function (avar) {
          return Control_Monad_Aff.makeAff(function (k) {
              return function __do() {
                  var v = Control_Monad_Eff_AVar.putVar(value)(avar)(k)();
                  return Control_Monad_Aff.effCanceler(v);
              };
          });
      };
  };
  var makeEmptyVar = Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_AVar.makeEmptyVar);
  var killVar = function (error) {
      return function ($11) {
          return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_AVar.killVar(error)($11));
      };
  };
  exports["makeEmptyVar"] = makeEmptyVar;
  exports["takeVar"] = takeVar;
  exports["putVar"] = putVar;
  exports["killVar"] = killVar;
})(PS["Control.Monad.Aff.AVar"] = PS["Control.Monad.Aff.AVar"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Cont_Trans = PS["Control.Monad.Cont.Trans"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_List_Trans = PS["Control.Monad.List.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Control_Monad_RWS_Trans = PS["Control.Monad.RWS.Trans"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Monoid = PS["Data.Monoid"];
  var Prelude = PS["Prelude"];        
  var MonadAff = function (MonadEff0, liftAff) {
      this.MonadEff0 = MonadEff0;
      this.liftAff = liftAff;
  };
  var monadAffAff = new MonadAff(function () {
      return Control_Monad_Aff.monadEffAff;
  }, Control_Category.id(Control_Category.categoryFn));
  var liftAff = function (dict) {
      return dict.liftAff;
  };
  exports["liftAff"] = liftAff;
  exports["MonadAff"] = MonadAff;
  exports["monadAffAff"] = monadAffAff;
})(PS["Control.Monad.Aff.Class"] = PS["Control.Monad.Aff.Class"] || {});
(function(exports) {
    "use strict";

  exports.mkEffFn1 = function mkEffFn1(fn) {
    return function(x) {
      return fn(x)();
    };
  };

  exports.runEffFn2 = function runEffFn2(fn) {
    return function(a) {
      return function(b) {
        return function() {
          return fn(a, b);
        };
      };
    };
  };

  exports.runEffFn3 = function runEffFn3(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return function() {
            return fn(a, b, c);
          };
        };
      };
    };
  };
})(PS["Control.Monad.Eff.Uncurried"] = PS["Control.Monad.Eff.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Uncurried"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["mkEffFn1"] = $foreign.mkEffFn1;
  exports["runEffFn2"] = $foreign.runEffFn2;
  exports["runEffFn3"] = $foreign.runEffFn3;
})(PS["Control.Monad.Eff.Uncurried"] = PS["Control.Monad.Eff.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Prelude = PS["Prelude"];
  var fromEffFnAff = function (v) {
      return Control_Monad_Aff.makeAff(function (k) {
          return function __do() {
              var v1 = Control_Monad_Eff_Uncurried.runEffFn2(v)(Control_Monad_Eff_Uncurried.mkEffFn1(function ($4) {
                  return k(Data_Either.Left.create($4));
              }))(Control_Monad_Eff_Uncurried.mkEffFn1(function ($5) {
                  return k(Data_Either.Right.create($5));
              }))();
              return function (e) {
                  return Control_Monad_Aff.makeAff(function (k2) {
                      return function __do() {
                          Control_Monad_Eff_Uncurried.runEffFn3(v1)(e)(Control_Monad_Eff_Uncurried.mkEffFn1(function ($6) {
                              return k2(Data_Either.Left.create($6));
                          }))(Control_Monad_Eff_Uncurried.mkEffFn1(function ($7) {
                              return k2(Data_Either.Right.create($7));
                          }))();
                          return Control_Monad_Aff.nonCanceler;
                      };
                  });
              };
          };
      });
  };
  exports["fromEffFnAff"] = fromEffFnAff;
})(PS["Control.Monad.Aff.Compat"] = PS["Control.Monad.Aff.Compat"] || {});
(function(exports) {
    "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };

  exports.warn = function (s) {
    return function () {
      console.warn(s);
      return {};
    };
  };
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var logShow = function (dictShow) {
      return function (a) {
          return $foreign.log(Data_Show.show(dictShow)(a));
      };
  };
  exports["logShow"] = logShow;
  exports["log"] = $foreign.log;
  exports["warn"] = $foreign.warn;
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Prelude = PS["Prelude"];
  var logShow = function (dictShow) {
      return function ($6) {
          return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Console.logShow(dictShow)($6));
      };
  };
  var log = function ($7) {
      return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Console.log($7));
  };
  exports["log"] = log;
  exports["logShow"] = logShow;
})(PS["Control.Monad.Aff.Console"] = PS["Control.Monad.Aff.Console"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var unsafeCoerceAff = Unsafe_Coerce.unsafeCoerce;
  exports["unsafeCoerceAff"] = unsafeCoerceAff;
})(PS["Control.Monad.Aff.Unsafe"] = PS["Control.Monad.Aff.Unsafe"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.setTimeout = function (ms) {
    return function (fn) {
      return function () {
        return setTimeout(fn, ms);
      };
    };
  };
})(PS["Control.Monad.Eff.Timer"] = PS["Control.Monad.Eff.Timer"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Timer"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];
  exports["setTimeout"] = $foreign.setTimeout;
})(PS["Control.Monad.Eff.Timer"] = PS["Control.Monad.Eff.Timer"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Prelude = PS["Prelude"];
  var MonadFork = function (Functor1, Monad0, fork, join, suspend) {
      this.Functor1 = Functor1;
      this.Monad0 = Monad0;
      this.fork = fork;
      this.join = join;
      this.suspend = suspend;
  };
  var suspend = function (dict) {
      return dict.suspend;
  };
  var monadForkAff = new MonadFork(function () {
      return Control_Monad_Aff.functorFiber;
  }, function () {
      return Control_Monad_Aff.monadAff;
  }, Control_Monad_Aff.forkAff, Control_Monad_Aff.joinFiber, Control_Monad_Aff.suspendAff);
  var join = function (dict) {
      return dict.join;
  };
  var fork = function (dict) {
      return dict.fork;
  };
  exports["fork"] = fork;
  exports["join"] = join;
  exports["suspend"] = suspend;
  exports["MonadFork"] = MonadFork;
  exports["monadForkAff"] = monadForkAff;
})(PS["Control.Monad.Fork.Class"] = PS["Control.Monad.Fork.Class"] || {});
(function(exports) {
    "use strict";

  exports.mapWithIndexArray = function (f) {
    return function (xs) {
      var l = xs.length;
      var result = Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(i)(xs[i]);
      }
      return result;
    };
  };
})(PS["Data.FunctorWithIndex"] = PS["Data.FunctorWithIndex"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.FunctorWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var FunctorWithIndex = function (Functor0, mapWithIndex) {
      this.Functor0 = Functor0;
      this.mapWithIndex = mapWithIndex;
  };
  var mapWithIndex = function (dict) {
      return dict.mapWithIndex;
  }; 
  var functorWithIndexArray = new FunctorWithIndex(function () {
      return Data_Functor.functorArray;
  }, $foreign.mapWithIndexArray);
  exports["FunctorWithIndex"] = FunctorWithIndex;
  exports["mapWithIndex"] = mapWithIndex;
  exports["functorWithIndexArray"] = functorWithIndexArray;
})(PS["Data.FunctorWithIndex"] = PS["Data.FunctorWithIndex"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var FoldableWithIndex = function (Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
      this.Foldable0 = Foldable0;
      this.foldMapWithIndex = foldMapWithIndex;
      this.foldlWithIndex = foldlWithIndex;
      this.foldrWithIndex = foldrWithIndex;
  };
  var foldrWithIndex = function (dict) {
      return dict.foldrWithIndex;
  };
  var foldlWithIndex = function (dict) {
      return dict.foldlWithIndex;
  };
  var foldMapWithIndex = function (dict) {
      return dict.foldMapWithIndex;
  };
  exports["FoldableWithIndex"] = FoldableWithIndex;
  exports["foldrWithIndex"] = foldrWithIndex;
  exports["foldlWithIndex"] = foldlWithIndex;
  exports["foldMapWithIndex"] = foldMapWithIndex;
})(PS["Data.FoldableWithIndex"] = PS["Data.FoldableWithIndex"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Traversable_Accum = PS["Data.Traversable.Accum"];
  var Data_Traversable_Accum_Internal = PS["Data.Traversable.Accum.Internal"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var TraversableWithIndex = function (FoldableWithIndex1, FunctorWithIndex0, Traversable2, traverseWithIndex) {
      this.FoldableWithIndex1 = FoldableWithIndex1;
      this.FunctorWithIndex0 = FunctorWithIndex0;
      this.Traversable2 = Traversable2;
      this.traverseWithIndex = traverseWithIndex;
  };
  var traverseWithIndex = function (dict) {
      return dict.traverseWithIndex;
  };
  exports["TraversableWithIndex"] = TraversableWithIndex;
  exports["traverseWithIndex"] = traverseWithIndex;
})(PS["Data.TraversableWithIndex"] = PS["Data.TraversableWithIndex"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Prelude = PS["Prelude"];        
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  var showNonEmpty = function (dictShow) {
      return function (dictShow1) {
          return new Data_Show.Show(function (v) {
              return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
          });
      };
  };
  var functorNonEmpty = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return new NonEmpty(f(v.value0), Data_Functor.map(dictFunctor)(f)(v.value1));
          };
      });
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
  exports["showNonEmpty"] = showNonEmpty;
  exports["functorNonEmpty"] = functorNonEmpty;
})(PS["Data.NonEmpty"] = PS["Data.NonEmpty"] || {});
(function(exports) {
    "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Unfoldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var Unfoldable = function (unfoldr) {
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable($foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];        
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($158) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($158));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types line 81, column 12 - line 83, column 30: " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
          return function ($159) {
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev($159));
          };
      };
  });
  var functorList = new Data_Functor.Functor(function (f) {
      return Data_Foldable.foldr(foldableList)(function (x) {
          return function (acc) {
              return new Cons(f(x), acc);
          };
      })(Nil.value);
  });
  var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var showList = function (dictShow) {
      return new Data_Show.Show(function (v) {
          if (v instanceof Nil) {
              return "Nil";
          };
          return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
      });
  };
  var showNonEmptyList = function (dictShow) {
      return new Data_Show.Show(function (v) {
          return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
      });
  }; 
  var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
      return function (b) {
          var go = function ($copy_source) {
              return function ($copy_memo) {
                  var $tco_var_source = $copy_source;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(source, memo) {
                      var v = f(source);
                      if (v instanceof Data_Maybe.Nothing) {
                          $tco_done = true;
                          return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                      };
                      if (v instanceof Data_Maybe.Just) {
                          $tco_var_source = v.value0.value1;
                          $copy_memo = new Cons(v.value0.value0, memo);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List.Types line 105, column 22 - line 107, column 52: " + [ v.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_source, $copy_memo);
                  };
                  return $tco_result;
              };
          };
          return go(b)(Nil.value);
      };
  });
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types line 120, column 1 - line 120, column 33: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applyNonEmptyList = new Control_Apply.Apply(function () {
      return functorNonEmptyList;
  }, function (v) {
      return function (v1) {
          return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
      return applyNonEmptyList;
  }, function ($168) {
      return NonEmptyList(Data_NonEmpty.singleton(plusList)($168));
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["showList"] = showList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["unfoldableList"] = unfoldableList;
  exports["applyList"] = applyList;
  exports["applicativeList"] = applicativeList;
  exports["altList"] = altList;
  exports["plusList"] = plusList;
  exports["showNonEmptyList"] = showNonEmptyList;
  exports["functorNonEmptyList"] = functorNonEmptyList;
  exports["applyNonEmptyList"] = applyNonEmptyList;
  exports["applicativeNonEmptyList"] = applicativeNonEmptyList;
})(PS["Data.List.Types"] = PS["Data.List.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var reverse = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List line 368, column 3 - line 368, column 19: " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var $$null = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };
  var manyRec = function (dictMonadRec) {
      return function (dictAlternative) {
          return function (p) {
              var go = function (acc) {
                  return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (v) {
                      return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v1) {
                          return new Data_List_Types.Cons(v1, acc);
                      })(function (v1) {
                          return reverse(acc);
                      })(v));
                  });
              };
              return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
          };
      };
  };
  exports["manyRec"] = manyRec;
  exports["null"] = $$null;
  exports["reverse"] = reverse;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];        
  var CatQueue = (function () {
      function CatQueue(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatQueue.create = function (value0) {
          return function (value1) {
              return new CatQueue(value0, value1);
          };
      };
      return CatQueue;
  })();
  var uncons = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
          };
          if (v.value0 instanceof Data_List_Types.Nil) {
              $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
              return;
          };
          if (v.value0 instanceof Data_List_Types.Cons) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
          };
          throw new Error("Failed pattern match at Data.CatQueue line 50, column 1 - line 50, column 63: " + [ v.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var snoc = function (v) {
      return function (a) {
          return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
      };
  };
  var $$null = function (v) {
      if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };
  var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
  exports["CatQueue"] = CatQueue;
  exports["empty"] = empty;
  exports["null"] = $$null;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
})(PS["Data.CatQueue"] = PS["Data.CatQueue"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_CatQueue = PS["Data.CatQueue"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_NaturalTransformation = PS["Data.NaturalTransformation"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];        
  var CatNil = (function () {
      function CatNil() {

      };
      CatNil.value = new CatNil();
      return CatNil;
  })();
  var CatCons = (function () {
      function CatCons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatCons.create = function (value0) {
          return function (value1) {
              return new CatCons(value0, value1);
          };
      };
      return CatCons;
  })();
  var link = function (v) {
      return function (cat) {
          if (v instanceof CatNil) {
              return cat;
          };
          if (v instanceof CatCons) {
              return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(cat));
          };
          throw new Error("Failed pattern match at Data.CatList line 110, column 1 - line 110, column 54: " + [ v.constructor.name, cat.constructor.name ]);
      };
  };
  var foldr = function (k) {
      return function (b) {
          return function (q) {
              var foldl = function ($copy_v) {
                  return function ($copy_c) {
                      return function ($copy_v1) {
                          var $tco_var_v = $copy_v;
                          var $tco_var_c = $copy_c;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v, c, v1) {
                              if (v1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return c;
                              };
                              if (v1 instanceof Data_List_Types.Cons) {
                                  $tco_var_v = v;
                                  $tco_var_c = v(c)(v1.value0);
                                  $copy_v1 = v1.value1;
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.CatList line 125, column 3 - line 125, column 59: " + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
                          };
                          return $tco_result;
                      };
                  };
              };
              var go = function ($copy_xs) {
                  return function ($copy_ys) {
                      var $tco_var_xs = $copy_xs;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(xs, ys) {
                          var v = Data_CatQueue.uncons(xs);
                          if (v instanceof Data_Maybe.Nothing) {
                              $tco_done = true;
                              return foldl(function (x) {
                                  return function (i) {
                                      return i(x);
                                  };
                              })(b)(ys);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              $tco_var_xs = v.value0.value1;
                              $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
                              return;
                          };
                          throw new Error("Failed pattern match at Data.CatList line 121, column 14 - line 123, column 67: " + [ v.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_xs, $copy_ys);
                      };
                      return $tco_result;
                  };
              };
              return go(q)(Data_List_Types.Nil.value);
          };
      };
  };
  var uncons = function (v) {
      if (v instanceof CatNil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof CatCons) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {
              var $41 = Data_CatQueue["null"](v.value1);
              if ($41) {
                  return CatNil.value;
              };
              return foldr(link)(CatNil.value)(v.value1);
          })()));
      };
      throw new Error("Failed pattern match at Data.CatList line 101, column 1 - line 101, column 61: " + [ v.constructor.name ]);
  }; 
  var empty = CatNil.value;
  var append = function (v) {
      return function (v1) {
          if (v1 instanceof CatNil) {
              return v;
          };
          if (v instanceof CatNil) {
              return v1;
          };
          return link(v)(v1);
      };
  }; 
  var semigroupCatList = new Data_Semigroup.Semigroup(append);
  var snoc = function (cat) {
      return function (a) {
          return append(cat)(new CatCons(a, Data_CatQueue.empty));
      };
  };
  exports["CatNil"] = CatNil;
  exports["CatCons"] = CatCons;
  exports["empty"] = empty;
  exports["append"] = append;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
  exports["semigroupCatList"] = semigroupCatList;
})(PS["Data.CatList"] = PS["Data.CatList"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_CatList = PS["Data.CatList"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Free = (function () {
      function Free(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Free.create = function (value0) {
          return function (value1) {
              return new Free(value0, value1);
          };
      };
      return Free;
  })();
  var Return = (function () {
      function Return(value0) {
          this.value0 = value0;
      };
      Return.create = function (value0) {
          return new Return(value0);
      };
      return Return;
  })();
  var Bind = (function () {
      function Bind(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bind.create = function (value0) {
          return function (value1) {
              return new Bind(value0, value1);
          };
      };
      return Bind;
  })();
  var toView = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          var runExpF = function (v2) {
              return v2;
          };
          var concatF = function (v2) {
              return function (r) {
                  return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
              };
          };
          if (v.value0 instanceof Return) {
              var v2 = Data_CatList.uncons(v.value1);
              if (v2 instanceof Data_Maybe.Nothing) {
                  $tco_done = true;
                  return new Return(v.value0.value0);
              };
              if (v2 instanceof Data_Maybe.Just) {
                  $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
                  return;
              };
              throw new Error("Failed pattern match at Control.Monad.Free line 215, column 7 - line 219, column 64: " + [ v2.constructor.name ]);
          };
          if (v.value0 instanceof Bind) {
              $tco_done = true;
              return new Bind(v.value0.value0, function (a) {
                  return concatF(v.value0.value1(a))(v.value1);
              });
          };
          throw new Error("Failed pattern match at Control.Monad.Free line 213, column 3 - line 221, column 56: " + [ v.value0.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var fromView = function (f) {
      return new Free(f, Data_CatList.empty);
  };
  var freeMonad = new Control_Monad.Monad(function () {
      return freeApplicative;
  }, function () {
      return freeBind;
  });
  var freeFunctor = new Data_Functor.Functor(function (k) {
      return function (f) {
          return Control_Bind.bindFlipped(freeBind)(function ($118) {
              return Control_Applicative.pure(freeApplicative)(k($118));
          })(f);
      };
  });
  var freeBind = new Control_Bind.Bind(function () {
      return freeApply;
  }, function (v) {
      return function (k) {
          return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
      };
  });
  var freeApply = new Control_Apply.Apply(function () {
      return freeFunctor;
  }, Control_Monad.ap(freeMonad));
  var freeApplicative = new Control_Applicative.Applicative(function () {
      return freeApply;
  }, function ($119) {
      return fromView(Return.create($119));
  });
  var liftF = function (f) {
      return fromView(new Bind(f, function ($120) {
          return Control_Applicative.pure(freeApplicative)($120);
      }));
  };
  var foldFree = function (dictMonadRec) {
      return function (k) {
          var go = function (f) {
              var v = toView(f);
              if (v instanceof Return) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(v.value0));
              };
              if (v instanceof Bind) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(function ($127) {
                      return Control_Monad_Rec_Class.Loop.create(v.value1($127));
                  })(k(v.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Free line 146, column 10 - line 148, column 37: " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  exports["liftF"] = liftF;
  exports["foldFree"] = foldFree;
  exports["freeFunctor"] = freeFunctor;
  exports["freeBind"] = freeBind;
  exports["freeApplicative"] = freeApplicative;
  exports["freeApply"] = freeApply;
  exports["freeMonad"] = freeMonad;
})(PS["Control.Monad.Free"] = PS["Control.Monad.Free"] || {});
(function(exports) {
    "use strict";

  exports.currentTarget = function (e) {
    return e.currentTarget;
  };

  exports.preventDefault = function (e) {
    return function () {
      return e.preventDefault();
    };
  };
})(PS["DOM.Event.Event"] = PS["DOM.Event.Event"] || {});
(function(exports) {
    "use strict";

  exports.toForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
    "use strict";

  // module Data.Int

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* globals exports */
  "use strict";                  

  exports.decodeURI = decodeURI;
  exports.encodeURI = encodeURI;
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Global"];
  exports["decodeURI"] = $foreign["decodeURI"];
  exports["encodeURI"] = $foreign["encodeURI"];
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Int"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_DivisionRing = PS["Data.DivisionRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Field = PS["Data.Field"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Global = PS["Global"];
  var $$Math = PS["Math"];
  var Prelude = PS["Prelude"];      
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["fromNumber"] = fromNumber;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var singleton = function ($160) {
      return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($160));
  };
  exports["singleton"] = singleton;
})(PS["Data.List.NonEmpty"] = PS["Data.List.NonEmpty"] || {});
(function(exports) {
    "use strict";

  exports._charAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
        };
      };
    };
  };

  exports.singleton = function (c) {
    return c;
  };

  exports.fromCharArray = function (a) {
    return a.join("");
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports._lastIndexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.lastIndexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.length = function (s) {
    return s.length;
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.toLower = function (s) {
    return s.toLowerCase();
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.String"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Prelude = PS["Prelude"];
  var Pattern = function (x) {
      return x;
  }; 
  var $$null = function (s) {
      return s === "";
  };                                                                                                  
  var lastIndexOf = $foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);  
  var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var contains = function (pat) {
      return function ($48) {
          return Data_Maybe.isJust(indexOf(pat)($48));
      };
  };                                                                                      
  var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["Pattern"] = Pattern;
  exports["charAt"] = charAt;
  exports["contains"] = contains;
  exports["indexOf"] = indexOf;
  exports["lastIndexOf"] = lastIndexOf;
  exports["null"] = $$null;
  exports["fromCharArray"] = $foreign.fromCharArray;
  exports["length"] = $foreign.length;
  exports["singleton"] = $foreign.singleton;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
  exports["split"] = $foreign.split;
  exports["toLower"] = $foreign.toLower;
  exports["joinWith"] = $foreign.joinWith;
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Foreign"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Int = PS["Data.Int"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Prelude = PS["Prelude"];        
  var ForeignError = (function () {
      function ForeignError(value0) {
          this.value0 = value0;
      };
      ForeignError.create = function (value0) {
          return new ForeignError(value0);
      };
      return ForeignError;
  })();
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var JSONError = (function () {
      function JSONError(value0) {
          this.value0 = value0;
      };
      JSONError.create = function (value0) {
          return new JSONError(value0);
      };
      return JSONError;
  })();
  var showForeignError = new Data_Show.Show(function (v) {
      if (v instanceof ForeignError) {
          return "(ForeignError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
      };
      if (v instanceof ErrorAtIndex) {
          return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
      };
      if (v instanceof ErrorAtProperty) {
          return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
      };
      if (v instanceof JSONError) {
          return "(JSONError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
      };
      if (v instanceof TypeMismatch) {
          return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
      };
      throw new Error("Failed pattern match at Data.Foreign line 64, column 1 - line 64, column 47: " + [ v.constructor.name ]);
  });
  var fail = function ($121) {
      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($121));
  };
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Data.Foreign line 104, column 1 - line 104, column 55: " + [ tag.constructor.name, value.constructor.name ]);
      };
  };
  var readString = unsafeReadTagged("String");
  exports["ForeignError"] = ForeignError;
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtIndex"] = ErrorAtIndex;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["JSONError"] = JSONError;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["readString"] = readString;
  exports["fail"] = fail;
  exports["showForeignError"] = showForeignError;
  exports["toForeign"] = $foreign.toForeign;
  exports["typeOf"] = $foreign.typeOf;
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.Event.Types"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];           
  var keyboardEventToEvent = Unsafe_Coerce.unsafeCoerce;
  var focusEventToEvent = Unsafe_Coerce.unsafeCoerce;
  exports["focusEventToEvent"] = focusEventToEvent;
  exports["keyboardEventToEvent"] = keyboardEventToEvent;
})(PS["DOM.Event.Types"] = PS["DOM.Event.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_Util_FFI = PS["DOM.Util.FFI"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                           
  var elementToNode = Unsafe_Coerce.unsafeCoerce;
  exports["elementToNode"] = elementToNode;
})(PS["DOM.Node.Types"] = PS["DOM.Node.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.Event.Event"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_Event_EventPhase = PS["DOM.Event.EventPhase"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];
  exports["currentTarget"] = $foreign.currentTarget;
  exports["preventDefault"] = $foreign.preventDefault;
})(PS["DOM.Event.Event"] = PS["DOM.Event.Event"] || {});
(function(exports) {
    "use strict";

  exports.eventListener = function (fn) {
    return function (event) {
      return fn(event)();
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            target.addEventListener(type, listener, useCapture);
            return {};
          };
        };
      };
    };
  };

  exports.removeEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            target.removeEventListener(type, listener, useCapture);
            return {};
          };
        };
      };
    };
  };
})(PS["DOM.Event.EventTarget"] = PS["DOM.Event.EventTarget"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.Event.EventTarget"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var DOM = PS["DOM"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var Prelude = PS["Prelude"];
  exports["eventListener"] = $foreign.eventListener;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
})(PS["DOM.Event.EventTarget"] = PS["DOM.Event.EventTarget"] || {});
(function(exports) {
    "use strict";

  exports.code = function (e) {
    return e.code;
  };
})(PS["DOM.Event.KeyboardEvent"] = PS["DOM.Event.KeyboardEvent"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.Event.KeyboardEvent"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Prelude = PS["Prelude"];
  exports["code"] = $foreign.code;
})(PS["DOM.Event.KeyboardEvent"] = PS["DOM.Event.KeyboardEvent"] || {});
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
    "use strict";

  exports._readHTMLElement = function (failure) {
    return function (success) {
      return function (value) {
        var tag = Object.prototype.toString.call(value);
        if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
          return success(value);
        } else {
          return failure(tag);
        }
      };
    };
  };
})(PS["DOM.HTML.Types"] = PS["DOM.HTML.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.HTML.Types"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var windowToEventTarget = Unsafe_Coerce.unsafeCoerce;                        
  var readHTMLElement = $foreign._readHTMLElement(function ($0) {
      return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Left.create(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Data_Foreign.TypeMismatch.create("HTMLElement")($0))));
  })(function ($1) {
      return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Right.create($1));
  });                                                                    
  var htmlElementToNode = Unsafe_Coerce.unsafeCoerce;   
  var htmlDocumentToParentNode = Unsafe_Coerce.unsafeCoerce; 
  var htmlDocumentToDocument = Unsafe_Coerce.unsafeCoerce;
  exports["windowToEventTarget"] = windowToEventTarget;
  exports["htmlDocumentToDocument"] = htmlDocumentToDocument;
  exports["htmlDocumentToParentNode"] = htmlDocumentToParentNode;
  exports["htmlElementToNode"] = htmlElementToNode;
  exports["readHTMLElement"] = readHTMLElement;
})(PS["DOM.HTML.Types"] = PS["DOM.HTML.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.HTML"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["window"] = $foreign.window;
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
    "use strict";

  exports._readyState = function (doc) {
    return function () {
      return doc.readyState;
    };
  };
})(PS["DOM.HTML.Document"] = PS["DOM.HTML.Document"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var Loading = (function () {
      function Loading() {

      };
      Loading.value = new Loading();
      return Loading;
  })();
  var Interactive = (function () {
      function Interactive() {

      };
      Interactive.value = new Interactive();
      return Interactive;
  })();
  var Complete = (function () {
      function Complete() {

      };
      Complete.value = new Complete();
      return Complete;
  })();
  var parseReadyState = function (v) {
      if (v === "loading") {
          return new Data_Maybe.Just(Loading.value);
      };
      if (v === "interactive") {
          return new Data_Maybe.Just(Interactive.value);
      };
      if (v === "complete") {
          return new Data_Maybe.Just(Complete.value);
      };
      return Data_Maybe.Nothing.value;
  };
  exports["Loading"] = Loading;
  exports["Interactive"] = Interactive;
  exports["Complete"] = Complete;
  exports["parseReadyState"] = parseReadyState;
})(PS["DOM.HTML.Document.ReadyState"] = PS["DOM.HTML.Document.ReadyState"] || {});
(function(exports) {
    "use strict";

  exports["null"] = null;

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
  exports["toNullable"] = toNullable;
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.HTML.Document"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_HTML_Document_ReadyState = PS["DOM.HTML.Document.ReadyState"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var readyState = function ($1) {
      return Data_Functor.map(Control_Monad_Eff.functorEff)(function ($2) {
          return Data_Maybe.fromJust()(DOM_HTML_Document_ReadyState.parseReadyState($2));
      })($foreign._readyState($1));
  };
  exports["readyState"] = readyState;
})(PS["DOM.HTML.Document"] = PS["DOM.HTML.Document"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var submit = "submit";
  var mouseup = "mouseup";
  var mouseover = "mouseover";  
  var mousedown = "mousedown";  
  var load = "load";        
  var keydown = "keydown";
  var input = "input";    
  var focus = "focus";      
  var click = "click";  
  var blur = "blur";
  exports["blur"] = blur;
  exports["click"] = click;
  exports["focus"] = focus;
  exports["input"] = input;
  exports["keydown"] = keydown;
  exports["load"] = load;
  exports["mousedown"] = mousedown;
  exports["mouseover"] = mouseover;
  exports["mouseup"] = mouseup;
  exports["submit"] = submit;
})(PS["DOM.HTML.Event.EventTypes"] = PS["DOM.HTML.Event.EventTypes"] || {});
(function(exports) {
    "use strict";

  exports.focus = function (elt) {
    return function () {
      return elt.focus();
    };
  };

  exports.blur = function (elt) {
    return function () {
      return elt.blur();
    };
  };
})(PS["DOM.HTML.HTMLElement"] = PS["DOM.HTML.HTMLElement"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.HTML.HTMLElement"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  exports["focus"] = $foreign.focus;
  exports["blur"] = $foreign.blur;
})(PS["DOM.HTML.HTMLElement"] = PS["DOM.HTML.HTMLElement"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var ButtonButton = (function () {
      function ButtonButton() {

      };
      ButtonButton.value = new ButtonButton();
      return ButtonButton;
  })();
  var ButtonSubmit = (function () {
      function ButtonSubmit() {

      };
      ButtonSubmit.value = new ButtonSubmit();
      return ButtonSubmit;
  })();
  var ButtonReset = (function () {
      function ButtonReset() {

      };
      ButtonReset.value = new ButtonReset();
      return ButtonReset;
  })();
  var renderButtonType = function (v) {
      if (v instanceof ButtonButton) {
          return "button";
      };
      if (v instanceof ButtonSubmit) {
          return "submit";
      };
      if (v instanceof ButtonReset) {
          return "reset";
      };
      throw new Error("Failed pattern match at DOM.HTML.Indexed.ButtonType line 9, column 20 - line 12, column 18: " + [ v.constructor.name ]);
  };
  exports["ButtonButton"] = ButtonButton;
  exports["ButtonSubmit"] = ButtonSubmit;
  exports["ButtonReset"] = ButtonReset;
  exports["renderButtonType"] = renderButtonType;
})(PS["DOM.HTML.Indexed.ButtonType"] = PS["DOM.HTML.Indexed.ButtonType"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var InputButton = (function () {
      function InputButton() {

      };
      InputButton.value = new InputButton();
      return InputButton;
  })();
  var InputCheckbox = (function () {
      function InputCheckbox() {

      };
      InputCheckbox.value = new InputCheckbox();
      return InputCheckbox;
  })();
  var InputColor = (function () {
      function InputColor() {

      };
      InputColor.value = new InputColor();
      return InputColor;
  })();
  var InputDate = (function () {
      function InputDate() {

      };
      InputDate.value = new InputDate();
      return InputDate;
  })();
  var InputDatetimeLocal = (function () {
      function InputDatetimeLocal() {

      };
      InputDatetimeLocal.value = new InputDatetimeLocal();
      return InputDatetimeLocal;
  })();
  var InputEmail = (function () {
      function InputEmail() {

      };
      InputEmail.value = new InputEmail();
      return InputEmail;
  })();
  var InputFile = (function () {
      function InputFile() {

      };
      InputFile.value = new InputFile();
      return InputFile;
  })();
  var InputHidden = (function () {
      function InputHidden() {

      };
      InputHidden.value = new InputHidden();
      return InputHidden;
  })();
  var InputImage = (function () {
      function InputImage() {

      };
      InputImage.value = new InputImage();
      return InputImage;
  })();
  var InputMonth = (function () {
      function InputMonth() {

      };
      InputMonth.value = new InputMonth();
      return InputMonth;
  })();
  var InputNumber = (function () {
      function InputNumber() {

      };
      InputNumber.value = new InputNumber();
      return InputNumber;
  })();
  var InputPassword = (function () {
      function InputPassword() {

      };
      InputPassword.value = new InputPassword();
      return InputPassword;
  })();
  var InputRadio = (function () {
      function InputRadio() {

      };
      InputRadio.value = new InputRadio();
      return InputRadio;
  })();
  var InputRange = (function () {
      function InputRange() {

      };
      InputRange.value = new InputRange();
      return InputRange;
  })();
  var InputReset = (function () {
      function InputReset() {

      };
      InputReset.value = new InputReset();
      return InputReset;
  })();
  var InputSearch = (function () {
      function InputSearch() {

      };
      InputSearch.value = new InputSearch();
      return InputSearch;
  })();
  var InputSubmit = (function () {
      function InputSubmit() {

      };
      InputSubmit.value = new InputSubmit();
      return InputSubmit;
  })();
  var InputTel = (function () {
      function InputTel() {

      };
      InputTel.value = new InputTel();
      return InputTel;
  })();
  var InputText = (function () {
      function InputText() {

      };
      InputText.value = new InputText();
      return InputText;
  })();
  var InputTime = (function () {
      function InputTime() {

      };
      InputTime.value = new InputTime();
      return InputTime;
  })();
  var InputUrl = (function () {
      function InputUrl() {

      };
      InputUrl.value = new InputUrl();
      return InputUrl;
  })();
  var InputWeek = (function () {
      function InputWeek() {

      };
      InputWeek.value = new InputWeek();
      return InputWeek;
  })();
  var renderInputType = function (v) {
      if (v instanceof InputButton) {
          return "button";
      };
      if (v instanceof InputCheckbox) {
          return "checkbox";
      };
      if (v instanceof InputColor) {
          return "color";
      };
      if (v instanceof InputDate) {
          return "date";
      };
      if (v instanceof InputDatetimeLocal) {
          return "datetime-local";
      };
      if (v instanceof InputEmail) {
          return "email";
      };
      if (v instanceof InputFile) {
          return "file";
      };
      if (v instanceof InputHidden) {
          return "hidden";
      };
      if (v instanceof InputImage) {
          return "image";
      };
      if (v instanceof InputMonth) {
          return "month";
      };
      if (v instanceof InputNumber) {
          return "number";
      };
      if (v instanceof InputPassword) {
          return "password";
      };
      if (v instanceof InputRadio) {
          return "radio";
      };
      if (v instanceof InputRange) {
          return "range";
      };
      if (v instanceof InputReset) {
          return "reset";
      };
      if (v instanceof InputSearch) {
          return "search";
      };
      if (v instanceof InputSubmit) {
          return "submit";
      };
      if (v instanceof InputTel) {
          return "tel";
      };
      if (v instanceof InputText) {
          return "text";
      };
      if (v instanceof InputTime) {
          return "time";
      };
      if (v instanceof InputUrl) {
          return "url";
      };
      if (v instanceof InputWeek) {
          return "week";
      };
      throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType line 28, column 19 - line 50, column 16: " + [ v.constructor.name ]);
  };
  exports["InputButton"] = InputButton;
  exports["InputCheckbox"] = InputCheckbox;
  exports["InputColor"] = InputColor;
  exports["InputDate"] = InputDate;
  exports["InputDatetimeLocal"] = InputDatetimeLocal;
  exports["InputEmail"] = InputEmail;
  exports["InputFile"] = InputFile;
  exports["InputHidden"] = InputHidden;
  exports["InputImage"] = InputImage;
  exports["InputMonth"] = InputMonth;
  exports["InputNumber"] = InputNumber;
  exports["InputPassword"] = InputPassword;
  exports["InputRadio"] = InputRadio;
  exports["InputRange"] = InputRange;
  exports["InputReset"] = InputReset;
  exports["InputSearch"] = InputSearch;
  exports["InputSubmit"] = InputSubmit;
  exports["InputTel"] = InputTel;
  exports["InputText"] = InputText;
  exports["InputTime"] = InputTime;
  exports["InputUrl"] = InputUrl;
  exports["InputWeek"] = InputWeek;
  exports["renderInputType"] = renderInputType;
})(PS["DOM.HTML.Indexed.InputType"] = PS["DOM.HTML.Indexed.InputType"] || {});
(function(exports) {
    "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.HTML.Window"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_WebStorage_Types = PS["DOM.WebStorage.Types"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];
  exports["document"] = $foreign.document;
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
    "use strict";

  var getEffProp = function (name) {
    return function (node) {
      return function () {
        return node[name];
      };
    };
  };                                                   

  exports._parentNode = getEffProp("parentNode");          

  exports._nextSibling = getEffProp("nextSibling");

  exports.insertBefore = function (node1) {
    return function (node2) {
      return function (parent) {
        return function () {
          return parent.insertBefore(node1, node2);
        };
      };
    };
  };

  exports.appendChild = function (node) {
    return function (parent) {
      return function () {
        return parent.appendChild(node);
      };
    };
  };

  exports.removeChild = function (node) {
    return function (parent) {
      return function () {
        return parent.removeChild(node);
      };
    };
  };
})(PS["DOM.Node.Node"] = PS["DOM.Node.Node"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.Node.Node"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_Node_NodeType = PS["DOM.Node.NodeType"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var parentNode = function ($2) {
      return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._parentNode($2));
  };
  var nextSibling = function ($6) {
      return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._nextSibling($6));
  };
  exports["parentNode"] = parentNode;
  exports["nextSibling"] = nextSibling;
  exports["insertBefore"] = $foreign.insertBefore;
  exports["appendChild"] = $foreign.appendChild;
  exports["removeChild"] = $foreign.removeChild;
})(PS["DOM.Node.Node"] = PS["DOM.Node.Node"] || {});
(function(exports) {
    "use strict";                                             

  exports._querySelector = function (selector) {
    return function (node) {
      return function () {
        return node.querySelector(selector);
      };
    };
  };
})(PS["DOM.Node.ParentNode"] = PS["DOM.Node.ParentNode"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.Node.ParentNode"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];
  var querySelector = function (qs) {
      return function ($3) {
          return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._querySelector(qs)($3));
      };
  };
  exports["querySelector"] = querySelector;
})(PS["DOM.Node.ParentNode"] = PS["DOM.Node.ParentNode"] || {});
(function(exports) {
    "use strict";

  function id(x) {
    return x;
  } 

  var objToString = Object.prototype.toString;

  function isArray(a) {
    return objToString.call(a) === "[object Array]";
  }

  exports._foldJson = function (isNull, isBool, isNum, isStr, isArr, isObj, j) {
    if (j == null) return isNull(null);
    else if (typeof j === "boolean") return isBool(j);
    else if (typeof j === "number") return isNum(j);
    else if (typeof j === "string") return isStr(j);
    else if (objToString.call(j) === "[object Array]")
      return isArr(j);
    else return isObj(j);
  };
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
    "use strict";

  exports._copyEff = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f;
  };

  exports._fmapStrMap = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m[k] = f(m0[k]);
      }
    }
    return m;
  };

  exports._mapWithKey = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m[k] = f(k)(m0[k]);
      }
    }
    return m;
  };

  exports._foldM = function (bind) {
    return function (f) {
      return function (mz) {
        return function (m) {
          var acc = mz;
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            if (hasOwnProperty.call(m, k)) {
              acc = bind(acc)(g(k));
            }
          }
          return acc;
        };
      };
    };
  };

  exports.all = function (f) {
    return function (m) {
      for (var k in m) {
        if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;
      }
      return true;
    };
  };

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }

  exports.toArrayWithKey = toArrayWithKey;
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
    "use strict";       

  exports.fromFoldableImpl = (function () {
    // jshint maxparams: 2
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.snoc = function (l) {
    return function (e) {
      var l1 = l.slice();
      l1.push(e);
      return l1;
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  exports._deleteAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 1);
          return just(l1);
        };
      };
    };
  };

  exports.concat = function (xss) {
    if (xss.length <= 10000) {
      // This method is faster, but it crashes on big arrays.
      // So we use it when can and fallback to simple variant otherwise.
      return Array.prototype.concat.apply([], xss);
    }

    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortImpl = function (f) {
    return function (l) {
      // jshint maxparams: 2
      return l.slice().sort(function (x, y) {
        return f(x)(y);
      });
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Array"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Array_ST_Iterator = PS["Data.Array.ST.Iterator"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x,
              tail: xs
          });
      };
  });
  var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
      return function (xs) {
          return new Data_Maybe.Just(xs);
      };
  });
  var sortBy = function (comp) {
      return function (xs) {
          var comp$prime = function (x) {
              return function (y) {
                  var v = comp(x)(y);
                  if (v instanceof Data_Ordering.GT) {
                      return 1;
                  };
                  if (v instanceof Data_Ordering.EQ) {
                      return 0;
                  };
                  if (v instanceof Data_Ordering.LT) {
                      return -1 | 0;
                  };
                  throw new Error("Failed pattern match at Data.Array line 698, column 15 - line 703, column 1: " + [ v.constructor.name ]);
              };
          };
          return $foreign.sortImpl(comp$prime)(xs);
      };
  };
  var sort = function (dictOrd) {
      return function (xs) {
          return sortBy(Data_Ord.compare(dictOrd))(xs);
      };
  };
  var singleton = function (a) {
      return [ a ];
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  var nubBy = function (eq) {
      return function (xs) {
          var v = uncons(xs);
          if (v instanceof Data_Maybe.Just) {
              return $foreign.cons(v.value0.head)(nubBy(eq)($foreign.filter(function (y) {
                  return !eq(v.value0.head)(y);
              })(v.value0.tail)));
          };
          if (v instanceof Data_Maybe.Nothing) {
              return [  ];
          };
          throw new Error("Failed pattern match at Data.Array line 888, column 3 - line 890, column 18: " + [ v.constructor.name ]);
      };
  };
  var nub = function (dictEq) {
      return nubBy(Data_Eq.eq(dictEq));
  };                                                                                  
  var init = function (xs) {
      if ($$null(xs)) {
          return Data_Maybe.Nothing.value;
      };
      if (Data_Boolean.otherwise) {
          return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
      };
      throw new Error("Failed pattern match at Data.Array line 319, column 1 - line 319, column 45: " + [ xs.constructor.name ]);
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1 | 0);
  };
  var unsnoc = function (xs) {
      return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return function (v1) {
              return {
                  init: v,
                  last: v1
              };
          };
      })(init(xs)))(last(xs));
  };
  var head = function (xs) {
      return index(xs)(0);
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteBy = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2.length === 0) {
                  return [  ];
              };
              return Data_Maybe.maybe(v2)(function (i) {
                  return Data_Maybe.fromJust()(deleteAt(i)(v2));
              })(findIndex(v(v1))(v2));
          };
      };
  };
  var $$delete = function (dictEq) {
      return deleteBy(Data_Eq.eq(dictEq));
  };
  var difference = function (dictEq) {
      return Data_Foldable.foldr(Data_Foldable.foldableArray)($$delete(dictEq));
  };
  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["head"] = head;
  exports["last"] = last;
  exports["tail"] = tail;
  exports["init"] = init;
  exports["uncons"] = uncons;
  exports["unsnoc"] = unsnoc;
  exports["index"] = index;
  exports["findIndex"] = findIndex;
  exports["deleteAt"] = deleteAt;
  exports["sort"] = sort;
  exports["sortBy"] = sortBy;
  exports["nub"] = nub;
  exports["nubBy"] = nubBy;
  exports["deleteBy"] = deleteBy;
  exports["difference"] = difference;
  exports["length"] = $foreign.length;
  exports["cons"] = $foreign.cons;
  exports["snoc"] = $foreign.snoc;
  exports["filter"] = $foreign.filter;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
    "use strict";

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (m) {
    return function (k) {
      return function (v) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };

  exports["delete"] = function (m) {
    return function (k) {
      return function () {
        delete m[k];
        return m;
      };
    };
  };
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.StrMap.ST"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
  exports["delete"] = $foreign["delete"];
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.StrMap"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap_ST = PS["Data.StrMap.ST"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];        
  var values = $foreign.toArrayWithKey(function (v) {
      return function (v1) {
          return v1;
      };
  });                                                            
  var thawST = $foreign._copyEff;
  var pureST = function (f) {
      return Control_Monad_Eff.runPure($foreign.runST(f));
  };
  var singleton = function (k) {
      return function (v) {
          return pureST(function __do() {
              var v1 = Data_StrMap_ST["new"]();
              return Data_StrMap_ST.poke(v1)(k)(v)();
          });
      };
  };
  var mutate = function (f) {
      return function (m) {
          return pureST(function __do() {
              var v = thawST(m)();
              var v1 = f(v)();
              return v;
          });
      };
  };                                                                                                 
  var mapWithKey = function (f) {
      return function (m) {
          return $foreign._mapWithKey(m, f);
      };
  };
  var lookup = Data_Function_Uncurried.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var isSubmap = function (dictEq) {
      return function (m1) {
          return function (m2) {
              var f = function (k) {
                  return function (v) {
                      return $foreign._lookup(false, Data_Eq.eq(dictEq)(v), k, m2);
                  };
              };
              return $foreign.all(f)(m1);
          };
      };
  }; 
  var insert = function (k) {
      return function (v) {
          return mutate(function (s) {
              return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(s)(k)(v));
          });
      };
  };
  var functorStrMap = new Data_Functor.Functor(function (f) {
      return function (m) {
          return $foreign._fmapStrMap(m, f);
      };
  });
  var functorWithIndexStrMap = new Data_FunctorWithIndex.FunctorWithIndex(function () {
      return functorStrMap;
  }, mapWithKey);
  var fromFoldable = function (dictFoldable) {
      return function (l) {
          return pureST(function __do() {
              var v = Data_StrMap_ST["new"]();
              Control_Monad_Eff.foreachE(Data_Array.fromFoldable(dictFoldable)(l))(function (v1) {
                  return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(v)(v1.value0)(v1.value1));
              })();
              return v;
          });
      };
  };
  var fold = $foreign._foldM(Data_Function.applyFlipped);
  var foldMap = function (dictMonoid) {
      return function (f) {
          return fold(function (acc) {
              return function (k) {
                  return function (v) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
                  };
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  };
  var foldableStrMap = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return foldMap(dictMonoid)(Data_Function["const"](f));
      };
  }, function (f) {
      return fold(function (z) {
          return function (v) {
              return f(z);
          };
      });
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
          };
      };
  });
  var foldableWithIndexStrMap = new Data_FoldableWithIndex.FoldableWithIndex(function () {
      return foldableStrMap;
  }, function (dictMonoid) {
      return foldMap(dictMonoid);
  }, function (f) {
      return fold(Data_Function.flip(f));
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));
          };
      };
  });
  var traversableWithIndexStrMap = new Data_TraversableWithIndex.TraversableWithIndex(function () {
      return foldableWithIndexStrMap;
  }, function () {
      return functorWithIndexStrMap;
  }, function () {
      return traversableStrMap;
  }, function (dictApplicative) {
      return function (f) {
          return function (ms) {
              return fold(function (acc) {
                  return function (k) {
                      return function (v) {
                          return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Function.flip(insert(k)))(acc))(f(k)(v));
                      };
                  };
              })(Control_Applicative.pure(dictApplicative)($foreign.empty))(ms);
          };
      };
  });
  var traversableStrMap = new Data_Traversable.Traversable(function () {
      return foldableStrMap;
  }, function () {
      return functorStrMap;
  }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableStrMap)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
  }, function (dictApplicative) {
      return function ($48) {
          return Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexStrMap)(dictApplicative)(Data_Function["const"]($48));
      };
  });
  var eqStrMap = function (dictEq) {
      return new Data_Eq.Eq(function (m1) {
          return function (m2) {
              return isSubmap(dictEq)(m1)(m2) && isSubmap(dictEq)(m2)(m1);
          };
      });
  }; 
  var $$delete = function (k) {
      return mutate(function (s) {
          return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST["delete"](s)(k));
      });
  };
  var alter = function (f) {
      return function (k) {
          return function (m) {
              var v = f(lookup(k)(m));
              if (v instanceof Data_Maybe.Nothing) {
                  return $$delete(k)(m);
              };
              if (v instanceof Data_Maybe.Just) {
                  return insert(k)(v.value0)(m);
              };
              throw new Error("Failed pattern match at Data.StrMap line 213, column 15 - line 215, column 25: " + [ v.constructor.name ]);
          };
      };
  };
  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["fromFoldable"] = fromFoldable;
  exports["alter"] = alter;
  exports["mapWithKey"] = mapWithKey;
  exports["values"] = values;
  exports["isSubmap"] = isSubmap;
  exports["fold"] = fold;
  exports["foldMap"] = foldMap;
  exports["thawST"] = thawST;
  exports["pureST"] = pureST;
  exports["functorStrMap"] = functorStrMap;
  exports["functorWithIndexStrMap"] = functorWithIndexStrMap;
  exports["foldableStrMap"] = foldableStrMap;
  exports["foldableWithIndexStrMap"] = foldableWithIndexStrMap;
  exports["traversableStrMap"] = traversableStrMap;
  exports["traversableWithIndexStrMap"] = traversableWithIndexStrMap;
  exports["eqStrMap"] = eqStrMap;
  exports["empty"] = $foreign.empty;
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Argonaut.Core"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var verbJsonType = function (def) {
      return function (f) {
          return function (fold) {
              return fold(def)(f);
          };
      };
  };
  var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var foldJsonString = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                        
  var foldJsonObject = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, j);
          };
      };
  };                                        
  var toObject = toJsonType(foldJsonObject);
  var foldJsonNumber = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                    
  var foldJsonBoolean = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                          
  var foldJsonArray = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), j);
          };
      };
  };                                      
  var toArray = toJsonType(foldJsonArray);
  exports["foldJsonBoolean"] = foldJsonBoolean;
  exports["foldJsonNumber"] = foldJsonNumber;
  exports["foldJsonString"] = foldJsonString;
  exports["foldJsonArray"] = foldJsonArray;
  exports["foldJsonObject"] = foldJsonObject;
  exports["toArray"] = toArray;
  exports["toObject"] = toObject;
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
    "use strict";

  exports.defer = function () {

    function Defer(thunk) {
      if (this instanceof Defer) {
        this.thunk = thunk;
        return this;
      } else {
        return new Defer(thunk);
      }
    }

    Defer.prototype.force = function () {
      var value = this.thunk();
      this.thunk = null;
      this.force = function () {
        return value;
      };
      return value;
    };

    return Defer;

  }();

  exports.force = function (l) {
    return l.force();
  };
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Lazy"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Field = PS["Data.Field"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var functorLazy = new Data_Functor.Functor(function (f) {
      return function (l) {
          return $foreign.defer(function (v) {
              return f($foreign.force(l));
          });
      };
  });
  exports["functorLazy"] = functorLazy;
  exports["defer"] = $foreign.defer;
  exports["force"] = $foreign.force;
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_Lazy = PS["Data.Lazy"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];        
  var List = function (x) {
      return x;
  };
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var nil = List(Data_Lazy.defer(function (v) {
      return Nil.value;
  }));             
  var newtypeList = new Data_Newtype.Newtype(function (n) {
      return n;
  }, List);
  var step = function ($184) {
      return Data_Lazy.force(Data_Newtype.unwrap(newtypeList)($184));
  };      
  var lazyList = new Control_Lazy.Lazy(function (f) {
      return List(Data_Lazy.defer(function ($185) {
          return step(f($185));
      }));
  });
  var cons = function (x) {
      return function (xs) {
          return List(Data_Lazy.defer(function (v) {
              return new Cons(x, xs);
          }));
      };
  };
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (b) {
              return function (a) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(b)(f(a));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (op) {
      var go = function ($copy_b) {
          return function ($copy_xs) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, xs) {
                  var v = step(xs);
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = op(b)(v.value0);
                      $copy_xs = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Lazy.Types line 122, column 7 - line 124, column 40: " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_xs);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (op) {
      return function (z) {
          return function (xs) {
              var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(cons))(nil);
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(op))(z)(rev(xs));
          };
      };
  });
  var unfoldableList = new Data_Unfoldable.Unfoldable((function () {
      var go = function (f) {
          return function (b) {
              return Control_Lazy.defer(lazyList)(function (v) {
                  var v1 = f(b);
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return nil;
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return cons(v1.value0.value0)(go(f)(v1.value0.value1));
                  };
                  throw new Error("Failed pattern match at Data.List.Lazy.Types line 146, column 28 - line 148, column 39: " + [ v1.constructor.name ]);
              });
          };
      };
      return go;
  })());
  exports["List"] = List;
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["step"] = step;
  exports["nil"] = nil;
  exports["cons"] = cons;
  exports["newtypeList"] = newtypeList;
  exports["lazyList"] = lazyList;
  exports["foldableList"] = foldableList;
  exports["unfoldableList"] = unfoldableList;
})(PS["Data.List.Lazy.Types"] = PS["Data.List.Lazy.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Lazy = PS["Data.Lazy"];
  var Data_List_Lazy_Types = PS["Data.List.Lazy.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];
  var filter = function (p) {
      var go = function ($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
              if (v instanceof Data_List_Lazy_Types.Nil) {
                  $tco_done = true;
                  return Data_List_Lazy_Types.Nil.value;
              };
              if (v instanceof Data_List_Lazy_Types.Cons) {
                  if (p(v.value0)) {
                      $tco_done = true;
                      return new Data_List_Lazy_Types.Cons(v.value0, filter(p)(v.value1));
                  };
                  if (Data_Boolean.otherwise) {
                      $copy_v = Data_List_Lazy_Types.step(v.value1);
                      return;
                  };
              };
              throw new Error("Failed pattern match at Data.List.Lazy line 427, column 3 - line 427, column 15: " + [ v.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return function ($252) {
          return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($252)));
      };
  };
  exports["filter"] = filter;
})(PS["Data.List.Lazy"] = PS["Data.List.Lazy"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Lazy = PS["Data.List.Lazy"];
  var Data_List_Lazy_Types = PS["Data.List.Lazy.Types"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var values = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map line 590, column 1 - line 590, column 40: " + [ v.constructor.name ]);
  };
  var singleton = function (k) {
      return function (v) {
          return new Two(Leaf.value, k, v, Leaf.value);
      };
  };                                                                
  var toUnfoldable = function (dictUnfoldable) {
      return function (m) {
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof Leaf) {
                          $copy_v = v.value1;
                          return;
                      };
                      if (v.value0 instanceof Two) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(v.value0.value3, v.value1))));
                      };
                      if (v.value0 instanceof Three) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(v.value0.value6, v.value1))))));
                      };
                      throw new Error("Failed pattern match at Data.Map line 561, column 18 - line 566, column 77: " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map line 560, column 3 - line 560, column 19: " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
      };
  };
  var lookup = function (dictOrd) {
      return function (k) {
          var comp = Data_Ord.compare(dictOrd);
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Leaf) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Two) {
                      var v2 = comp(k)(v.value1);
                      if (v2 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      if (v2 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  if (v instanceof Three) {
                      var v3 = comp(k)(v.value1);
                      if (v3 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      var v4 = comp(k)(v.value4);
                      if (v4 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value5);
                      };
                      if (v3 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      if (v4 instanceof Data_Ordering.GT) {
                          $copy_v = v.value6;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map line 195, column 5 - line 195, column 22: " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return go;
      };
  };
  var member = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
          };
      };
  };
  var keys = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map line 584, column 1 - line 584, column 38: " + [ v.constructor.name ]);
  };
  var functorMap = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Leaf) {
              return Leaf.value;
          };
          if (v1 instanceof Two) {
              return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
          };
          if (v1 instanceof Three) {
              return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
          };
          throw new Error("Failed pattern match at Data.Map line 91, column 1 - line 91, column 39: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map line 413, column 3 - line 418, column 88: " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map line 410, column 1 - line 410, column 80: " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map line 449, column 5 - line 454, column 108: " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map line 446, column 3 - line 446, column 56: " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map line 429, column 3 - line 429, column 55: " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var pop = function (dictOrd) {
      return function (k) {
          var up = function (ctxs) {
              return function (tree) {
                  if (ctxs instanceof Data_List_Types.Nil) {
                      return tree;
                  };
                  if (ctxs instanceof Data_List_Types.Cons) {
                      var __unused = function (dictPartial1) {
                          return function ($dollar57) {
                              return $dollar57;
                          };
                      };
                      return __unused()((function () {
                          if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                              return up(ctxs.value1)(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                              return up(ctxs.value1)(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          throw new Error("Failed pattern match at Data.Map line 499, column 9 - line 516, column 136: " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                      })());
                  };
                  throw new Error("Failed pattern match at Data.Map line 496, column 5 - line 516, column 136: " + [ ctxs.constructor.name ]);
              };
          };
          var removeMaxNode = function (ctx) {
              return function (m) {
                  var __unused = function (dictPartial1) {
                      return function ($dollar59) {
                          return $dollar59;
                      };
                  };
                  return __unused()((function () {
                      if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                          return up(ctx)(Leaf.value);
                      };
                      if (m instanceof Two) {
                          return removeMaxNode(new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx))(m.value3);
                      };
                      if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                          return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                      };
                      if (m instanceof Three) {
                          return removeMaxNode(new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx))(m.value6);
                      };
                      throw new Error("Failed pattern match at Data.Map line 528, column 5 - line 532, column 107: " + [ m.constructor.name ]);
                  })());
              };
          };
          var maxNode = function (m) {
              var __unused = function (dictPartial1) {
                  return function ($dollar61) {
                      return $dollar61;
                  };
              };
              return __unused()((function () {
                  if (m instanceof Two && m.value3 instanceof Leaf) {
                      return {
                          key: m.value1,
                          value: m.value2
                      };
                  };
                  if (m instanceof Two) {
                      return maxNode(m.value3);
                  };
                  if (m instanceof Three && m.value6 instanceof Leaf) {
                      return {
                          key: m.value4,
                          value: m.value5
                      };
                  };
                  if (m instanceof Three) {
                      return maxNode(m.value6);
                  };
                  throw new Error("Failed pattern match at Data.Map line 519, column 33 - line 523, column 45: " + [ m.constructor.name ]);
              })());
          };
          var comp = Data_Ord.compare(dictOrd);
          var down = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Nothing.value;
                      };
                      if (m instanceof Two) {
                          var v = comp(k)(m.value1);
                          if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three) {
                          var leaves = (function () {
                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                  return true;
                              };
                              return false;
                          })();
                          var v = comp(k)(m.value4);
                          var v3 = comp(k)(m.value1);
                          if (leaves && v3 instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                          };
                          if (leaves && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                          };
                          if (v3 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value3);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                          };
                          if (v3 instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value3;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map line 469, column 34 - line 492, column 80: " + [ m.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          return down(Data_List_Types.Nil.value);
      };
  };
  var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (m) {
              return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  });
  var empty = Leaf.value;
  var fromFoldable = function (dictOrd) {
      return function (dictFoldable) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (v) {
                  return insert(dictOrd)(v.value0)(v.value1)(m);
              };
          })(empty);
      };
  };
  var filterWithKey = function (dictOrd) {
      return function (predicate) {
          return function ($750) {
              return fromFoldable(dictOrd)(Data_List_Lazy_Types.foldableList)(Data_List_Lazy.filter(Data_Tuple.uncurry(predicate))(toUnfoldable(Data_List_Lazy_Types.unfoldableList)($750)));
          };
      };
  };
  var filter = function (dictOrd) {
      return function (predicate) {
          return filterWithKey(dictOrd)(Data_Function["const"](predicate));
      };
  };
  var $$delete = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
          };
      };
  }; 
  var alter = function (dictOrd) {
      return function (f) {
          return function (k) {
              return function (m) {
                  var v = f(lookup(dictOrd)(k)(m));
                  if (v instanceof Data_Maybe.Nothing) {
                      return $$delete(dictOrd)(k)(m);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return insert(dictOrd)(k)(v.value0)(m);
                  };
                  throw new Error("Failed pattern match at Data.Map line 537, column 15 - line 539, column 25: " + [ v.constructor.name ]);
              };
          };
      };
  };
  var unionWith = function (dictOrd) {
      return function (f) {
          return function (m1) {
              return function (m2) {
                  var go = function (m) {
                      return function (v) {
                          return alter(dictOrd)(function ($753) {
                              return Data_Maybe.Just.create(Data_Maybe.maybe(v.value1)(f(v.value1))($753));
                          })(v.value0)(m);
                      };
                  };
                  return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(toUnfoldable(Data_List_Types.unfoldableList)(m1));
              };
          };
      };
  };
  var union = function (dictOrd) {
      return unionWith(dictOrd)(Data_Function["const"]);
  };
  var semigroupMap = function (dictOrd) {
      return new Data_Semigroup.Semigroup(union(dictOrd));
  };
  exports["empty"] = empty;
  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["fromFoldable"] = fromFoldable;
  exports["toUnfoldable"] = toUnfoldable;
  exports["delete"] = $$delete;
  exports["pop"] = pop;
  exports["member"] = member;
  exports["alter"] = alter;
  exports["keys"] = keys;
  exports["values"] = values;
  exports["union"] = union;
  exports["unionWith"] = unionWith;
  exports["filterWithKey"] = filterWithKey;
  exports["filter"] = filter;
  exports["semigroupMap"] = semigroupMap;
  exports["functorMap"] = functorMap;
  exports["foldableMap"] = foldableMap;
})(PS["Data.Map"] = PS["Data.Map"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_String = PS["Data.String"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var DecodeJson = function (decodeJson) {
      this.decodeJson = decodeJson;
  }; 
  var decodeJsonString = new DecodeJson(Data_Argonaut_Core.foldJsonString(new Data_Either.Left("Value is not a String"))(Data_Either.Right.create));
  var decodeJsonNumber = new DecodeJson(Data_Argonaut_Core.foldJsonNumber(new Data_Either.Left("Value is not a Number"))(Data_Either.Right.create));                               
  var decodeJsonJson = new DecodeJson(Data_Either.Right.create);
  var decodeJsonBoolean = new DecodeJson(Data_Argonaut_Core.foldJsonBoolean(new Data_Either.Left("Value is not a Boolean"))(Data_Either.Right.create));
  var decodeJson = function (dict) {
      return dict.decodeJson;
  }; 
  var decodeJsonInt = new DecodeJson(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($32) {
      return Data_Maybe.maybe(new Data_Either.Left("Value is not an integer"))(Data_Either.Right.create)(Data_Int.fromNumber($32));
  })(decodeJson(decodeJsonNumber)));
  var decodeJObject = function ($33) {
      return Data_Maybe.maybe(new Data_Either.Left("Value is not an Object"))(Data_Either.Right.create)(Data_Argonaut_Core.toObject($33));
  };
  var decodeStrMap = function (dictDecodeJson) {
      return new DecodeJson(function ($34) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
              return "Couldn't decode StrMap: " + v;
          })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_StrMap.traversableStrMap)(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(decodeJObject)($34));
      });
  };
  var decodeJArray = function ($35) {
      return Data_Maybe.maybe(new Data_Either.Left("Value is not an Array"))(Data_Either.Right.create)(Data_Argonaut_Core.toArray($35));
  };
  var decodeArray = function (dictDecodeJson) {
      return new DecodeJson(function ($38) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
              return "Couldn't decode Array: " + v;
          })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(decodeJArray)($38));
      });
  };
  exports["DecodeJson"] = DecodeJson;
  exports["decodeJson"] = decodeJson;
  exports["decodeJsonBoolean"] = decodeJsonBoolean;
  exports["decodeJsonNumber"] = decodeJsonNumber;
  exports["decodeJsonInt"] = decodeJsonInt;
  exports["decodeJsonString"] = decodeJsonString;
  exports["decodeJsonJson"] = decodeJsonJson;
  exports["decodeStrMap"] = decodeStrMap;
  exports["decodeArray"] = decodeArray;
})(PS["Data.Argonaut.Decode.Class"] = PS["Data.Argonaut.Decode.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Prelude = PS["Prelude"];
  var getField = function (dictDecodeJson) {
      return function (o) {
          return function (s) {
              return Data_Maybe.maybe(Data_Either.Left.create("Expected field " + Data_Show.show(Data_Show.showString)(s)))(Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson))(Data_StrMap.lookup(s)(o));
          };
      };
  };
  exports["getField"] = getField;
})(PS["Data.Argonaut.Decode.Combinators"] = PS["Data.Argonaut.Decode.Combinators"] || {});
(function(exports) {
    "use strict";

  exports._jsonParser = function (fail, succ, s) {
    try {
      return succ(JSON.parse(s));
    }
    catch (e) {
      return fail(e.message);
    }
  };
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Argonaut.Parser"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Either = PS["Data.Either"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];        
  var jsonParser = function (j) {
      return $foreign._jsonParser(Data_Either.Left.create, Data_Either.Right.create, j);
  };
  exports["jsonParser"] = jsonParser;
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function(exports) {
    "use strict";

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Char"] = PS["Data.Char"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Char"];
  exports["fromCharCode"] = $foreign.fromCharCode;
})(PS["Data.Char"] = PS["Data.Char"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];        
  var CoyonedaF = (function () {
      function CoyonedaF(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CoyonedaF.create = function (value0) {
          return function (value1) {
              return new CoyonedaF(value0, value1);
          };
      };
      return CoyonedaF;
  })();
  var Coyoneda = function (x) {
      return x;
  };
  var unCoyoneda = function (f) {
      return function (v) {
          return Data_Exists.runExists(function (v1) {
              return f(v1.value0)(v1.value1);
          })(v);
      };
  };
  var coyoneda = function (k) {
      return function (fi) {
          return Coyoneda(Data_Exists.mkExists(new CoyonedaF(k, fi)));
      };
  };
  exports["Coyoneda"] = Coyoneda;
  exports["coyoneda"] = coyoneda;
  exports["unCoyoneda"] = unCoyoneda;
})(PS["Data.Coyoneda"] = PS["Data.Coyoneda"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Either = PS["Data.Either"];
  var Data_Void = PS["Data.Void"];
  var in4 = function (v) {
      return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))));
  };
  var in3 = function (v) {
      return new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)));
  };
  var in2 = function (v) {
      return new Data_Either.Right(new Data_Either.Left(v));
  };
  var in1 = Data_Either.Left.create;
  var at4 = function (b) {
      return function (f) {
          return function (y) {
              if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Left))) {
                  return f(y.value0.value0.value0.value0);
              };
              return b;
          };
      };
  };
  var at3 = function (b) {
      return function (f) {
          return function (y) {
              if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Left)) {
                  return f(y.value0.value0.value0);
              };
              return b;
          };
      };
  };
  var at2 = function (b) {
      return function (f) {
          return function (y) {
              if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Left) {
                  return f(y.value0.value0);
              };
              return b;
          };
      };
  };
  var at1 = function (b) {
      return function (f) {
          return function (y) {
              if (y instanceof Data_Either.Left) {
                  return f(y.value0);
              };
              return b;
          };
      };
  };
  exports["in1"] = in1;
  exports["in2"] = in2;
  exports["in3"] = in3;
  exports["in4"] = in4;
  exports["at1"] = at1;
  exports["at2"] = at2;
  exports["at3"] = at3;
  exports["at4"] = at4;
})(PS["Data.Either.Nested"] = PS["Data.Either.Nested"] || {});
(function(exports) {
    "use strict";

  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Foreign.Index"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Prelude = PS["Prelude"];
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(Data_Foreign.fail(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
      };
  };
  var readProp = unsafeReadProp;
  exports["readProp"] = readProp;
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var right = function (ga) {
      return new Data_Either.Right(ga);
  };            
  var left = function (fa) {
      return new Data_Either.Left(fa);
  };
  exports["left"] = left;
  exports["right"] = right;
})(PS["Data.Functor.Coproduct"] = PS["Data.Functor.Coproduct"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Const = PS["Data.Const"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor_Coproduct = PS["Data.Functor.Coproduct"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Void = PS["Data.Void"];
  var Prelude = PS["Prelude"];
  var in4 = function (v) {
      return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))));
  };
  var in3 = function (v) {
      return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)));
  };
  var in2 = function (v) {
      return Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v));
  };
  var in1 = Data_Functor_Coproduct.left;
  var at4 = function (b) {
      return function (f) {
          return function (y) {
              if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Left))) {
                  return f(y.value0.value0.value0.value0);
              };
              return b;
          };
      };
  };
  var at3 = function (b) {
      return function (f) {
          return function (y) {
              if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Left)) {
                  return f(y.value0.value0.value0);
              };
              return b;
          };
      };
  };
  var at2 = function (b) {
      return function (f) {
          return function (y) {
              if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Left) {
                  return f(y.value0.value0);
              };
              return b;
          };
      };
  };
  var at1 = function (b) {
      return function (f) {
          return function (y) {
              if (y instanceof Data_Either.Left) {
                  return f(y.value0);
              };
              return b;
          };
      };
  };
  exports["in1"] = in1;
  exports["in2"] = in2;
  exports["in3"] = in3;
  exports["in4"] = in4;
  exports["at1"] = at1;
  exports["at2"] = at2;
  exports["at3"] = at3;
  exports["at4"] = at4;
})(PS["Data.Functor.Coproduct.Nested"] = PS["Data.Functor.Coproduct.Nested"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Maybe = PS["Data.Maybe"];        
  var Inl = (function () {
      function Inl(value0) {
          this.value0 = value0;
      };
      Inl.create = function (value0) {
          return new Inl(value0);
      };
      return Inl;
  })();
  var Inr = (function () {
      function Inr(value0) {
          this.value0 = value0;
      };
      Inr.create = function (value0) {
          return new Inr(value0);
      };
      return Inr;
  })();
  var Product = (function () {
      function Product(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Product.create = function (value0) {
          return function (value1) {
              return new Product(value0, value1);
          };
      };
      return Product;
  })();
  var NoArguments = (function () {
      function NoArguments() {

      };
      NoArguments.value = new NoArguments();
      return NoArguments;
  })();
  var Generic = function (from, to) {
      this.from = from;
      this.to = to;
  };
  var to = function (dict) {
      return dict.to;
  }; 
  var from = function (dict) {
      return dict.from;
  };
  exports["Generic"] = Generic;
  exports["to"] = to;
  exports["from"] = from;
  exports["NoArguments"] = NoArguments;
  exports["Inl"] = Inl;
  exports["Inr"] = Inr;
  exports["Product"] = Product;
})(PS["Data.Generic.Rep"] = PS["Data.Generic.Rep"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Prelude = PS["Prelude"];        
  var GenericEq = function (genericEq$prime) {
      this["genericEq'"] = genericEq$prime;
  }; 
  var genericEqNoArguments = new GenericEq(function (v) {
      return function (v1) {
          return true;
      };
  });
  var genericEqField = function (dictEq) {
      return new GenericEq(function (v) {
          return function (v1) {
              return Data_Eq.eq(dictEq)(v)(v1);
          };
      });
  };
  var genericEqArgument = function (dictEq) {
      return new GenericEq(function (v) {
          return function (v1) {
              return Data_Eq.eq(dictEq)(v)(v1);
          };
      });
  };
  var genericEq$prime = function (dict) {
      return dict["genericEq'"];
  };
  var genericEqConstructor = function (dictGenericEq) {
      return new GenericEq(function (v) {
          return function (v1) {
              return genericEq$prime(dictGenericEq)(v)(v1);
          };
      });
  };
  var genericEqProduct = function (dictGenericEq) {
      return function (dictGenericEq1) {
          return new GenericEq(function (v) {
              return function (v1) {
                  return genericEq$prime(dictGenericEq)(v.value0)(v1.value0) && genericEq$prime(dictGenericEq1)(v.value1)(v1.value1);
              };
          });
      };
  };
  var genericEqRec = function (dictGenericEq) {
      return new GenericEq(function (v) {
          return function (v1) {
              return genericEq$prime(dictGenericEq)(v)(v1);
          };
      });
  };
  var genericEqSum = function (dictGenericEq) {
      return function (dictGenericEq1) {
          return new GenericEq(function (v) {
              return function (v1) {
                  if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inl) {
                      return genericEq$prime(dictGenericEq)(v.value0)(v1.value0);
                  };
                  if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inr) {
                      return genericEq$prime(dictGenericEq1)(v.value0)(v1.value0);
                  };
                  return false;
              };
          });
      };
  };
  var genericEq = function (dictGeneric) {
      return function (dictGenericEq) {
          return function (x) {
              return function (y) {
                  return genericEq$prime(dictGenericEq)(Data_Generic_Rep.from(dictGeneric)(x))(Data_Generic_Rep.from(dictGeneric)(y));
              };
          };
      };
  };
  exports["GenericEq"] = GenericEq;
  exports["genericEq"] = genericEq;
  exports["genericEqNoArguments"] = genericEqNoArguments;
  exports["genericEqSum"] = genericEqSum;
  exports["genericEqProduct"] = genericEqProduct;
  exports["genericEqConstructor"] = genericEqConstructor;
  exports["genericEqArgument"] = genericEqArgument;
  exports["genericEqRec"] = genericEqRec;
  exports["genericEqField"] = genericEqField;
})(PS["Data.Generic.Rep.Eq"] = PS["Data.Generic.Rep.Eq"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Prelude = PS["Prelude"];        
  var GenericOrd = function (genericCompare$prime) {
      this["genericCompare'"] = genericCompare$prime;
  }; 
  var genericOrdNoArguments = new GenericOrd(function (v) {
      return function (v1) {
          return Data_Ordering.EQ.value;
      };
  });
  var genericOrdArgument = function (dictOrd) {
      return new GenericOrd(function (v) {
          return function (v1) {
              return Data_Ord.compare(dictOrd)(v)(v1);
          };
      });
  };
  var genericCompare$prime = function (dict) {
      return dict["genericCompare'"];
  };
  var genericOrdConstructor = function (dictGenericOrd) {
      return new GenericOrd(function (v) {
          return function (v1) {
              return genericCompare$prime(dictGenericOrd)(v)(v1);
          };
      });
  };
  var genericOrdProduct = function (dictGenericOrd) {
      return function (dictGenericOrd1) {
          return new GenericOrd(function (v) {
              return function (v1) {
                  var v2 = genericCompare$prime(dictGenericOrd)(v.value0)(v1.value0);
                  if (v2 instanceof Data_Ordering.EQ) {
                      return genericCompare$prime(dictGenericOrd1)(v.value1)(v1.value1);
                  };
                  return v2;
              };
          });
      };
  };
  var genericOrdSum = function (dictGenericOrd) {
      return function (dictGenericOrd1) {
          return new GenericOrd(function (v) {
              return function (v1) {
                  if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inl) {
                      return genericCompare$prime(dictGenericOrd)(v.value0)(v1.value0);
                  };
                  if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inr) {
                      return genericCompare$prime(dictGenericOrd1)(v.value0)(v1.value0);
                  };
                  if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inr) {
                      return Data_Ordering.LT.value;
                  };
                  if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inl) {
                      return Data_Ordering.GT.value;
                  };
                  throw new Error("Failed pattern match at Data.Generic.Rep.Ord line 19, column 1 - line 19, column 79: " + [ v.constructor.name, v1.constructor.name ]);
              };
          });
      };
  };
  var genericCompare = function (dictGeneric) {
      return function (dictGenericOrd) {
          return function (x) {
              return function (y) {
                  return genericCompare$prime(dictGenericOrd)(Data_Generic_Rep.from(dictGeneric)(x))(Data_Generic_Rep.from(dictGeneric)(y));
              };
          };
      };
  };
  exports["GenericOrd"] = GenericOrd;
  exports["genericCompare"] = genericCompare;
  exports["genericOrdNoArguments"] = genericOrdNoArguments;
  exports["genericOrdSum"] = genericOrdSum;
  exports["genericOrdProduct"] = genericOrdProduct;
  exports["genericOrdConstructor"] = genericOrdConstructor;
  exports["genericOrdArgument"] = genericOrdArgument;
})(PS["Data.Generic.Rep.Ord"] = PS["Data.Generic.Rep.Ord"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Field = PS["Data.Field"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var Ratio = (function () {
      function Ratio(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Ratio.create = function (value0) {
          return function (value1) {
              return new Ratio(value0, value1);
          };
      };
      return Ratio;
  })();
  var reduce = function (dictOrd) {
      return function (dictEuclideanRing) {
          return function (n) {
              return function (d) {
                  var g = Data_EuclideanRing.gcd(dictOrd.Eq0())(dictEuclideanRing)(n)(d);
                  var d$prime = Data_EuclideanRing.div(dictEuclideanRing)(d)(g);
                  return new Ratio(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(Data_EuclideanRing.div(dictEuclideanRing)(n)(g))(Data_Ord.signum(dictOrd)((dictEuclideanRing.CommutativeRing0()).Ring0())(d$prime)), Data_Ord.abs(dictOrd)((dictEuclideanRing.CommutativeRing0()).Ring0())(d$prime));
              };
          };
      };
  };
  var semiringRatio = function (dictOrd) {
      return function (dictEuclideanRing) {
          return new Data_Semiring.Semiring(function (v) {
              return function (v1) {
                  return reduce(dictOrd)(dictEuclideanRing)(Data_Semiring.add(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value0)(v1.value1))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value0)))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value1));
              };
          }, function (v) {
              return function (v1) {
                  return reduce(dictOrd)(dictEuclideanRing)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value0)(v1.value0))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value1));
              };
          }, new Ratio(Data_Semiring.one(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()), Data_Semiring.one(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())), new Ratio(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()), Data_Semiring.one(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())));
      };
  };
  var ringRatio = function (dictOrd) {
      return function (dictEuclideanRing) {
          return new Data_Ring.Ring(function () {
              return semiringRatio(dictOrd)(dictEuclideanRing);
          }, function (v) {
              return function (v1) {
                  return reduce(dictOrd)(dictEuclideanRing)(Data_Ring.sub((dictEuclideanRing.CommutativeRing0()).Ring0())(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value0)(v1.value1))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value0)))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value1));
              };
          });
      };
  };
  var eqRatio = function (dictEq) {
      return new Data_Eq.Eq(function (v) {
          return function (v1) {
              return Data_Eq.eq(dictEq)(v.value0)(v1.value0) && Data_Eq.eq(dictEq)(v.value1)(v1.value1);
          };
      });
  };
  var ordRatio = function (dictOrd) {
      return function (dictEuclideanRing) {
          return new Data_Ord.Ord(function () {
              return eqRatio(dictOrd.Eq0());
          }, function (x) {
              return function (y) {
                  var v = Data_Ring.sub(ringRatio(dictOrd)(dictEuclideanRing))(x)(y);
                  var $69 = Data_Eq.eq(dictOrd.Eq0())(v.value0)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                  if ($69) {
                      return Data_Ordering.EQ.value;
                  };
                  var v1 = Data_Ord.greaterThan(dictOrd)(v.value1)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                  var v2 = Data_Ord.greaterThan(dictOrd)(v.value0)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                  if (v2 && v1) {
                      return Data_Ordering.GT.value;
                  };
                  if (!v2 && !v1) {
                      return Data_Ordering.GT.value;
                  };
                  return Data_Ordering.LT.value;
              };
          });
      };
  };
  exports["reduce"] = reduce;
  exports["eqRatio"] = eqRatio;
  exports["ordRatio"] = ordRatio;
  exports["semiringRatio"] = semiringRatio;
  exports["ringRatio"] = ringRatio;
})(PS["Data.Ratio"] = PS["Data.Ratio"] || {});
(function(exports) {
    "use strict";

  function _codePointAt (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          var codePointArray = Array.from(s);
          var isWithinRange  = i >= 0 && i < codePointArray.length;

          return isWithinRange ? just(codePointArray[i].codePointAt(0)) : nothing;
        };
      };
    };
  }

  function _codePointAtP (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.codePointAt(i)) : nothing;
        };
      };
    };
  }

  function endsWith (searchString) {
    return function (s) {
      return s.endsWith(searchString);
    };
  }

  function endsWithP (searchString) {
    return function (position) {
      return function (s) {
        return s.endsWith(searchString, position);
      };
    };
  }

  function escapeRegex (str) {
    return str.replace(/[.*+?^${}()|[\]\-\\]/g, "\\$&");
  }

  function fromCharArray (array) {
    return array.join("");
  }

  function includes (searchString) {
    return function (str) {
      return str.includes(searchString);
    };
  }

  function includesP (needle) {
    return function (position) {
      return function (haystack) {
        // For negative `position` values, we search from the beginning of the
        // string. This is in accordance with the native
        // `String.prototype.include` function.
        var pos = Math.max(0, position);

        // Converting to arrays takes care of any surrogate code points
        var needleA    = Array.from(needle);
        var haystackA  = Array.from(haystack).slice(pos);
        var needleALen = needleA.length;

        var maxIndex = haystackA.length + 1 - needleALen;
        var found    = false;
        var i;

        // Naive implementation, at some point we should check whether Boyer-Moore
        // or Knuth-Morris-Pratt are worthwhile
        for (i = 0; i < maxIndex; i++) {
          if (needleA.every(function (e, j) { return e === haystackA[i+j]; })) {
            found = true;
            break;
          }
        }

        return found;
      };
    };
  }

  function length (str) {
    return Array.from(str).length;
  }

  function lines (str) {
    // See http://www.unicode.org/reports/tr18/#RL1.6
    return str.split(/\r\n|[\n\v\f\r\u0085\u2028\u2029]/);
  }

  function normalize (str) {
    return str.normalize();
  }

  function _normalizeP (normalizationForm) {
    return function (str) {
      return str.normalize(normalizationForm);
    };
  }

  function _repeat (just) {
    return function (nothing) {
      return function (n) {
        return function (str) {
          var result;

          try {
            result = just(str.repeat(n));
          }
          catch (error) {
            result = nothing;
          }

          return result;
        };
      };
    };
  }

  function startsWith (searchString) {
    return function (s) {
      return s.startsWith(searchString);
    };
  }

  function startsWithP (searchString) {
    return function (position) {
      return function (s) {
        return s.startsWith(searchString, position);
      };
    };
  }

  function stripChars (chars) {
    return function (s) {
      return s.replace(RegExp("[" + escapeRegex(chars) + "]", "g"), "");
    };
  }

  function stripDiacritics (str) {
    return str.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
  }

  function toCharArray (str) {
    return Array.from(str);
  }

  function unsafeCodePointAt (i) {
    return function (s) {
      var codePointArray = Array.from(s);
      var isWithinRange = i >= 0 && i < codePointArray.length;

      if (isWithinRange) {
        return codePointArray[i].codePointAt(0);
      }
      else {
        throw new Error("Data.String.Utils.unsafeCodePointAt: Invalid index");
      }
    };
  }

  function unsafeCodePointAtP (i) {
    return function (s) {
      if (i >= 0 && i < s.length) {
        return s.codePointAt(i);
      }
      else {
        throw new Error("Data.String.Utils.unsafeCodePointAt': Invalid index");
      }
    };
  }

  function unsafeRepeat (n) {
    return function (str) {
      try {
        return str.repeat(n);
      }
      catch (error) {
        throw new Error("Data.String.Utils.unsafeRepeat: Invalid count");
      }
    };
  }

  function words (s) {
    return s.split(/\s+/);
  }                                      
  exports.escapeRegex        = escapeRegex;
  exports.fromCharArray      = fromCharArray;
  exports.length             = length;         
  exports.toCharArray        = toCharArray; 
  exports.words              = words;
})(PS["Data.String.Utils"] = PS["Data.String.Utils"] || {});
(function(exports) {
    "use strict";

  exports["regex'"] = function (left) {
    return function (right) {
      return function (s1) {
        return function (s2) {
          try {
            return right(new RegExp(s1, s2));
          } catch (e) {
            return left(e.message);
          }
        };
      };
    };
  };

  exports.replace = function (r) {
    return function (s1) {
      return function (s2) {
        return s2.replace(r, s1);
      };
    };
  };
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Prelude = PS["Prelude"];        
  var RegexFlags = (function () {
      function RegexFlags(value0) {
          this.value0 = value0;
      };
      RegexFlags.create = function (value0) {
          return new RegexFlags(value0);
      };
      return RegexFlags;
  })();
  var noFlags = new RegexFlags({
      global: false,
      ignoreCase: false,
      multiline: false,
      sticky: false,
      unicode: false
  });
  var global = new RegexFlags({
      global: true,
      ignoreCase: false,
      multiline: false,
      sticky: false,
      unicode: false
  });
  exports["RegexFlags"] = RegexFlags;
  exports["noFlags"] = noFlags;
  exports["global"] = global;
})(PS["Data.String.Regex.Flags"] = PS["Data.String.Regex.Flags"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.String.Regex"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Prelude = PS["Prelude"];                                                    
  var renderFlags = function (v) {
      return (function () {
          if (v.value0.global) {
              return "g";
          };
          return "";
      })() + ((function () {
          if (v.value0.ignoreCase) {
              return "i";
          };
          return "";
      })() + ((function () {
          if (v.value0.multiline) {
              return "m";
          };
          return "";
      })() + ((function () {
          if (v.value0.sticky) {
              return "y";
          };
          return "";
      })() + (function () {
          if (v.value0.unicode) {
              return "u";
          };
          return "";
      })())));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign["regex'"](Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
      };
  };
  exports["regex"] = regex;
  exports["renderFlags"] = renderFlags;
  exports["replace"] = $foreign.replace;
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.String.Utils"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var replaceAll = (function () {
      var mkRegex = function (str) {
          return Data_Either.fromRight()(Data_String_Regex.regex($foreign.escapeRegex(str))(Data_String_Regex_Flags.global));
      };
      return function ($3) {
          return Data_String_Regex.replace(mkRegex($3));
      };
  })();
  exports["replaceAll"] = replaceAll;
  exports["fromCharArray"] = $foreign.fromCharArray;
  exports["length"] = $foreign.length;
  exports["toCharArray"] = $foreign.toCharArray;
  exports["words"] = $foreign.words;
})(PS["Data.String.Utils"] = PS["Data.String.Utils"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Eq = PS["Data.Generic.Rep.Eq"];
  var Data_Generic_Rep_Ord = PS["Data.Generic.Rep.Ord"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ratio = PS["Data.Ratio"];
  var Data_Rational = PS["Data.Rational"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_String = PS["Data.String"];
  var Data_String_Utils = PS["Data.String.Utils"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Test_QuickCheck_Arbitrary = PS["Test.QuickCheck.Arbitrary"];
  var Test_QuickCheck_Gen = PS["Test.QuickCheck.Gen"];        
  var Full = (function () {
      function Full() {

      };
      Full.value = new Full();
      return Full;
  })();
  var Word = (function () {
      function Word() {

      };
      Word.value = new Word();
      return Word;
  })();
  var Char = (function () {
      function Char() {

      };
      Char.value = new Char();
      return Char;
  })();
  var Start = (function () {
      function Start() {

      };
      Start.value = new Start();
      return Start;
  })();
  var Prefix = (function () {
      function Prefix() {

      };
      Prefix.value = new Prefix();
      return Prefix;
  })();
  var Mid = (function () {
      function Mid() {

      };
      Mid.value = new Mid();
      return Mid;
  })();
  var Suffix = (function () {
      function Suffix() {

      };
      Suffix.value = new Suffix();
      return Suffix;
  })();
  var End = (function () {
      function End() {

      };
      End.value = new End();
      return End;
  })();
  var Distance = (function () {
      function Distance(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      Distance.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new Distance(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return Distance;
  })();
  var None = (function () {
      function None() {

      };
      None.value = new None();
      return None;
  })();
  var Fuzzy = function (x) {
      return x;
  };
  var FuzzyStr = function (x) {
      return x;
  };
  var semigroupDistance = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          if (v instanceof None) {
              return v1;
          };
          if (v1 instanceof None) {
              return v;
          };
          if (v instanceof Distance && v1 instanceof Distance) {
              return new Distance(v.value0 + v1.value0 | 0, v.value1 + v1.value1 | 0, v.value2 + v1.value2 | 0, v.value3 + v1.value3 | 0, v.value4 + v1.value4 | 0, v.value5 + v1.value5 | 0);
          };
          throw new Error("Failed pattern match at Data.Fuzzy line 78, column 1 - line 78, column 49: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var scoreScope = Data_Semigroup.append(semigroupDistance)(new Distance(1, 0, 0, 0, 0, 0));
  var scoreDistance = function (v) {
      return function (d) {
          if (v instanceof Start) {
              return new Distance(0, 0, 0, d, 0, 0);
          };
          if (v instanceof Prefix) {
              return new Distance(0, 0, d, 0, 0, 0);
          };
          if (v instanceof Mid) {
              return new Distance(0, d, 0, 0, 0, 0);
          };
          if (v instanceof Suffix) {
              return new Distance(0, 0, 0, 0, d, 0);
          };
          if (v instanceof End) {
              return new Distance(0, 0, 0, 0, 0, d);
          };
          throw new Error("Failed pattern match at Data.Fuzzy line 368, column 1 - line 368, column 40: " + [ v.constructor.name, d.constructor.name ]);
      };
  };
  var newtypeFuzzyStr = new Data_Newtype.Newtype(function (n) {
      return n;
  }, FuzzyStr);
  var newtypeFuzzy = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Fuzzy);
  var monoidDistance = new Data_Monoid.Monoid(function () {
      return semigroupDistance;
  }, None.value);
  var lastIndexOf$prime = function ($190) {
      return Data_String.lastIndexOf(Data_String.Pattern($190));
  };
  var indexOf$prime = function ($191) {
      return Data_String.indexOf(Data_String.Pattern($191));
  };
  var scoreWord = function (pos) {
      return function (distance) {
          return function (str) {
              var before = Data_String.take(distance)(str);
              var wordStart = Data_String_Utils.length(before) - (Data_Maybe.fromMaybe(-1 | 0)(lastIndexOf$prime(" ")(before)) + 1 | 0) | 0;
              var after = Data_String_Utils.length(str);
              var wordEnd = Data_Maybe.fromMaybe(1 * after | 0)(indexOf$prime(" ")(str));
              if (pos instanceof Start) {
                  return scoreDistance(Prefix.value)(wordStart);
              };
              if (pos instanceof End) {
                  return scoreDistance(Suffix.value)(wordEnd);
              };
              return Data_Monoid.mempty(monoidDistance);
          };
      };
  };
  var genericScope = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof Full) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof Word) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof Char) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
      };
      throw new Error("Failed pattern match at Data.Fuzzy line 158, column 8 - line 158, column 48: " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return Full.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return Word.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
          return Char.value;
      };
      throw new Error("Failed pattern match at Data.Fuzzy line 158, column 8 - line 158, column 48: " + [ x.constructor.name ]);
  });
  var genericFuzzy = new Data_Generic_Rep.Generic(function (x) {
      return new Data_Generic_Rep.Product(x.distance, new Data_Generic_Rep.Product(x.original, new Data_Generic_Rep.Product(x.ratio, x.segments)));
  }, function (x) {
      return {
          distance: x.value0,
          original: x.value1.value0,
          ratio: x.value1.value1.value0,
          segments: x.value1.value1.value1
      };
  });
  var genericDistance = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof Distance) {
          return new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, new Data_Generic_Rep.Product(x.value2, new Data_Generic_Rep.Product(x.value3, new Data_Generic_Rep.Product(x.value4, x.value5))))));
      };
      if (x instanceof None) {
          return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
      };
      throw new Error("Failed pattern match at Data.Fuzzy line 73, column 8 - line 73, column 54: " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return new Distance(x.value0.value0, x.value0.value1.value0, x.value0.value1.value1.value0, x.value0.value1.value1.value1.value0, x.value0.value1.value1.value1.value1.value0, x.value0.value1.value1.value1.value1.value1);
      };
      if (x instanceof Data_Generic_Rep.Inr) {
          return None.value;
      };
      throw new Error("Failed pattern match at Data.Fuzzy line 73, column 8 - line 73, column 54: " + [ x.constructor.name ]);
  });   
  var eqScope = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericScope)(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments)))));
  var matchStr = function (v) {
      return function (v1) {
          return function (str) {
              if (v1 === "") {
                  return {
                      original: str,
                      segments: [ new Data_Either.Left(str) ],
                      distance: None.value,
                      ratio: Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(1)(1)
                  };
              };
              var initialAcc = {
                  substr: str,
                  pos: Start.value,
                  fuzzy: {
                      original: str,
                      segments: Data_Monoid.mempty(Data_Monoid.monoidArray),
                      distance: Data_Monoid.mempty(monoidDistance),
                      ratio: Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(1)(1)
                  }
              };
              var chars = Data_String_Utils.length(Data_String_Utils.replaceAll(" ")("")(v1));
              var matchStr$prime = function (scope) {
                  return function (v2) {
                      return function (pat) {
                          var v3 = (function () {
                              if (v) {
                                  return new Data_Tuple.Tuple(Data_String.toLower(pat), Data_String.toLower(v2.substr));
                              };
                              return new Data_Tuple.Tuple(pat, v2.substr);
                          })();
                          var nextRight = function (d) {
                              return Data_Either.Right.create(Data_String.take(Data_String_Utils.length(pat))(Data_String.drop(d)(v2.substr)));
                          };
                          var nextLeft = function (d) {
                              if (d === 0) {
                                  return Data_Monoid.mempty(Data_Monoid.monoidArray);
                              };
                              return [ Data_Either.Left.create(Data_String.take(d)(v2.substr)) ];
                          };
                          var nextSegment = function (d) {
                              var v4 = new Data_Tuple.Tuple(d, Data_Array.unsnoc(v2.fuzzy.segments));
                              if (v4.value0 === 0 && v4.value1 instanceof Data_Maybe.Just) {
                                  return Data_Array.snoc(v4.value1.value0.init)(Data_Semigroup.append(Data_Either.semigroupEither(Data_Semigroup.semigroupString))(v4.value1.value0.last)(nextRight(d)));
                              };
                              return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v2.fuzzy.segments)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(nextLeft(d))([ nextRight(d) ]));
                          };
                          var nextDistance = function (d) {
                              var v4 = new Data_Tuple.Tuple(scope, v2.pos);
                              if (v4.value0 instanceof Word && v4.value1 instanceof Mid) {
                                  return Data_Semigroup.append(semigroupDistance)(v2.fuzzy.distance)(scoreDistance(Start.value)(d));
                              };
                              return Data_Semigroup.append(semigroupDistance)(v2.fuzzy.distance)(Data_Semigroup.append(semigroupDistance)(scoreDistance(v2.pos)(d))(scoreWord(v2.pos)(d)(v3.value1)));
                          };
                          var nextAcc = function (p) {
                              return {
                                  substr: v2.substr,
                                  pos: p,
                                  fuzzy: {
                                      original: v2.fuzzy.original,
                                      segments: v2.fuzzy.segments,
                                      distance: scoreScope(v2.fuzzy.distance),
                                      ratio: (function () {
                                          var $150 = Data_Eq.eq(eqScope)(scope)(Char.value);
                                          if ($150) {
                                              return Data_Ring.sub(Data_Ratio.ringRatio(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt))(v2.fuzzy.ratio)(Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(1)(chars));
                                          };
                                          return v2.fuzzy.ratio;
                                      })()
                                  }
                              };
                          };
                          var v4 = indexOf$prime(v3.value0)(v3.value1);
                          if (v4 instanceof Data_Maybe.Just) {
                              return {
                                  substr: Data_String.drop(v4.value0 + Data_String_Utils.length(pat) | 0)(v2.substr),
                                  pos: Mid.value,
                                  fuzzy: {
                                      original: v2.fuzzy.original,
                                      segments: nextSegment(v4.value0),
                                      distance: nextDistance(v4.value0),
                                      ratio: v2.fuzzy.ratio
                                  }
                              };
                          };
                          if (v4 instanceof Data_Maybe.Nothing) {
                              if (scope instanceof Full) {
                                  return Data_Foldable.foldl(Data_Foldable.foldableArray)(matchStr$prime(Word.value))(nextAcc(Start.value))(Data_String_Utils.words(pat));
                              };
                              if (scope instanceof Word) {
                                  return Data_Foldable.foldl(Data_Foldable.foldableArray)(matchStr$prime(Char.value))(nextAcc(Start.value))(Data_String_Utils.toCharArray(pat));
                              };
                              if (scope instanceof Char) {
                                  return nextAcc(v2.pos);
                              };
                              throw new Error("Failed pattern match at Data.Fuzzy line 247, column 11 - line 250, column 32: " + [ scope.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Fuzzy line 235, column 7 - line 250, column 32: " + [ v4.constructor.name ]);
                      };
                  };
              };
              var after = function (v2) {
                  var nextSegment = (function () {
                      if (v2.substr === "") {
                          return v2.fuzzy.segments;
                      };
                      return Data_Array.snoc(v2.fuzzy.segments)(new Data_Either.Left(v2.substr));
                  })();
                  var nextDistance = (function () {
                      if (Data_Eq.eq(Data_Ratio.eqRatio(Data_Eq.eqInt))(v2.fuzzy.ratio)(Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(0)(1))) {
                          return v2.fuzzy.distance;
                      };
                      if (Data_Boolean.otherwise) {
                          return Data_Semigroup.append(semigroupDistance)(v2.fuzzy.distance)(Data_Semigroup.append(semigroupDistance)(scoreDistance(End.value)(Data_String_Utils.length(v2.substr)))(scoreWord(End.value)(0)(v2.substr)));
                      };
                      throw new Error("Failed pattern match at Data.Fuzzy line 296, column 11 - line 296, column 35: " + [  ]);
                  })();
                  return {
                      original: v2.fuzzy.original,
                      segments: nextSegment,
                      distance: nextDistance,
                      ratio: v2.fuzzy.ratio
                  };
              };
              return after(Data_Foldable.foldl(Data_Foldable.foldableArray)(matchStr$prime(Full.value))(initialAcc)([ v1 ]));
          };
      };
  }
  var eqDistance = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericDistance)(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))))))))(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))));
  var eqFuzzy = function (dictEq) {
      return new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericFuzzy)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqRec(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqField(eqDistance))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqField(dictEq))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqField(Data_Ratio.eqRatio(Data_Eq.eqInt)))(Data_Generic_Rep_Eq.genericEqField(Data_StrMap.eqStrMap(Data_Eq.eqArray(Data_Either.eqEither(Data_Eq.eqString)(Data_Eq.eqString)))))))))));
  }
  var ordDistance = new Data_Ord.Ord(function () {
      return eqDistance;
  }, Data_Generic_Rep_Ord.genericCompare(genericDistance)(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))))))))(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments))));
  var match = function (v) {
      return function (extract) {
          return function (v1) {
              return function (val) {
                  if (v1 === "") {
                      return {
                          original: val,
                          segments: Data_Functor.map(Data_StrMap.functorStrMap)(function ($192) {
                              return Control_Applicative.pure(Control_Applicative.applicativeArray)(Data_Either.Left.create($192));
                          })(extract(val)),
                          distance: Data_Monoid.mempty(monoidDistance),
                          ratio: Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(1)(1)
                      };
                  };
                  var minDistance = function (d) {
                      return function (v2) {
                          return Data_Ord.min(ordDistance)(d)(v2.distance);
                      };
                  };
                  var maxRatio = function (r) {
                      return function (v2) {
                          return Data_Ord.max(Data_Ratio.ordRatio(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt))(r)(v2.ratio);
                      };
                  };
                  var matches = Data_Functor.map(Data_StrMap.functorStrMap)(matchStr(v)(v1))(extract(val));
                  var fuzzies = Data_StrMap.values(matches);
                  return {
                      original: val,
                      segments: Data_Functor.map(Data_StrMap.functorStrMap)(function ($193) {
                          return (function (v2) {
                              return v2.segments;
                          })(Data_Newtype.unwrap(newtypeFuzzyStr)($193));
                      })(matches),
                      distance: Data_Foldable.foldl(Data_Foldable.foldableArray)(minDistance)(Data_Monoid.mempty(monoidDistance))(fuzzies),
                      ratio: Data_Foldable.foldl(Data_Foldable.foldableArray)(maxRatio)(Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(0)(1))(fuzzies)
                  };
              };
          };
      };
  };
  var ordFuzzy = function (dictEq) {
      return new Data_Ord.Ord(function () {
          return eqFuzzy(dictEq);
      }, function (v) {
          return function (v1) {
              return Data_Ord.compare(ordDistance)(v.distance)(v1.distance);
          };
      });
  };
  exports["Distance"] = Distance;
  exports["None"] = None;
  exports["FuzzyStr"] = FuzzyStr;
  exports["Fuzzy"] = Fuzzy;
  exports["matchStr"] = matchStr;
  exports["match"] = match;
  exports["genericDistance"] = genericDistance;
  exports["eqDistance"] = eqDistance;
  exports["ordDistance"] = ordDistance;
  exports["semigroupDistance"] = semigroupDistance;
  exports["monoidDistance"] = monoidDistance;
  exports["newtypeFuzzyStr"] = newtypeFuzzyStr;
  exports["genericFuzzy"] = genericFuzzy;
  exports["newtypeFuzzy"] = newtypeFuzzy;
  exports["eqFuzzy"] = eqFuzzy;
  exports["ordFuzzy"] = ordFuzzy;
})(PS["Data.Fuzzy"] = PS["Data.Fuzzy"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var OPTIONS = (function () {
      function OPTIONS() {

      };
      OPTIONS.value = new OPTIONS();
      return OPTIONS;
  })();
  var GET = (function () {
      function GET() {

      };
      GET.value = new GET();
      return GET;
  })();
  var HEAD = (function () {
      function HEAD() {

      };
      HEAD.value = new HEAD();
      return HEAD;
  })();
  var POST = (function () {
      function POST() {

      };
      POST.value = new POST();
      return POST;
  })();
  var PUT = (function () {
      function PUT() {

      };
      PUT.value = new PUT();
      return PUT;
  })();
  var DELETE = (function () {
      function DELETE() {

      };
      DELETE.value = new DELETE();
      return DELETE;
  })();
  var TRACE = (function () {
      function TRACE() {

      };
      TRACE.value = new TRACE();
      return TRACE;
  })();
  var CONNECT = (function () {
      function CONNECT() {

      };
      CONNECT.value = new CONNECT();
      return CONNECT;
  })();
  var PROPFIND = (function () {
      function PROPFIND() {

      };
      PROPFIND.value = new PROPFIND();
      return PROPFIND;
  })();
  var PROPPATCH = (function () {
      function PROPPATCH() {

      };
      PROPPATCH.value = new PROPPATCH();
      return PROPPATCH;
  })();
  var MKCOL = (function () {
      function MKCOL() {

      };
      MKCOL.value = new MKCOL();
      return MKCOL;
  })();
  var COPY = (function () {
      function COPY() {

      };
      COPY.value = new COPY();
      return COPY;
  })();
  var MOVE = (function () {
      function MOVE() {

      };
      MOVE.value = new MOVE();
      return MOVE;
  })();
  var LOCK = (function () {
      function LOCK() {

      };
      LOCK.value = new LOCK();
      return LOCK;
  })();
  var UNLOCK = (function () {
      function UNLOCK() {

      };
      UNLOCK.value = new UNLOCK();
      return UNLOCK;
  })();
  var PATCH = (function () {
      function PATCH() {

      };
      PATCH.value = new PATCH();
      return PATCH;
  })();
  var unCustomMethod = function (v) {
      return v;
  };
  var showMethod = new Data_Show.Show(function (v) {
      if (v instanceof OPTIONS) {
          return "OPTIONS";
      };
      if (v instanceof GET) {
          return "GET";
      };
      if (v instanceof HEAD) {
          return "HEAD";
      };
      if (v instanceof POST) {
          return "POST";
      };
      if (v instanceof PUT) {
          return "PUT";
      };
      if (v instanceof DELETE) {
          return "DELETE";
      };
      if (v instanceof TRACE) {
          return "TRACE";
      };
      if (v instanceof CONNECT) {
          return "CONNECT";
      };
      if (v instanceof PROPFIND) {
          return "PROPFIND";
      };
      if (v instanceof PROPPATCH) {
          return "PROPPATCH";
      };
      if (v instanceof MKCOL) {
          return "MKCOL";
      };
      if (v instanceof COPY) {
          return "COPY";
      };
      if (v instanceof MOVE) {
          return "MOVE";
      };
      if (v instanceof LOCK) {
          return "LOCK";
      };
      if (v instanceof UNLOCK) {
          return "UNLOCK";
      };
      if (v instanceof PATCH) {
          return "PATCH";
      };
      throw new Error("Failed pattern match at Data.HTTP.Method line 42, column 1 - line 42, column 35: " + [ v.constructor.name ]);
  });
  var print = Data_Either.either(Data_Show.show(showMethod))(unCustomMethod);
  exports["OPTIONS"] = OPTIONS;
  exports["GET"] = GET;
  exports["HEAD"] = HEAD;
  exports["POST"] = POST;
  exports["PUT"] = PUT;
  exports["DELETE"] = DELETE;
  exports["TRACE"] = TRACE;
  exports["CONNECT"] = CONNECT;
  exports["PROPFIND"] = PROPFIND;
  exports["PROPPATCH"] = PROPPATCH;
  exports["MKCOL"] = MKCOL;
  exports["COPY"] = COPY;
  exports["MOVE"] = MOVE;
  exports["LOCK"] = LOCK;
  exports["UNLOCK"] = UNLOCK;
  exports["PATCH"] = PATCH;
  exports["unCustomMethod"] = unCustomMethod;
  exports["print"] = print;
  exports["showMethod"] = showMethod;
})(PS["Data.HTTP.Method"] = PS["Data.HTTP.Method"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Prelude = PS["Prelude"];        
  var Choice = function (Profunctor0, left, right) {
      this.Profunctor0 = Profunctor0;
      this.left = left;
      this.right = right;
  };
  var right = function (dict) {
      return dict.right;
  };
  var left = function (dict) {
      return dict.left;
  };
  exports["left"] = left;
  exports["right"] = right;
  exports["Choice"] = Choice;
})(PS["Data.Profunctor.Choice"] = PS["Data.Profunctor.Choice"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Const = PS["Data.Const"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Lens_Internal_Wander = PS["Data.Lens.Internal.Wander"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Cochoice = PS["Data.Profunctor.Cochoice"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var Forget = function (x) {
      return x;
  };
  var profunctorForget = new Data_Profunctor.Profunctor(function (f) {
      return function (v) {
          return function (v1) {
              return function ($27) {
                  return v1(f($27));
              };
          };
      };
  });
  var newtypeForget = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Forget);
  var choiceForget = function (dictMonoid) {
      return new Data_Profunctor_Choice.Choice(function () {
          return profunctorForget;
      }, function (v) {
          return Data_Either.either(v)(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)));
      }, function (v) {
          return Data_Either.either(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)))(v);
      });
  };
  exports["Forget"] = Forget;
  exports["newtypeForget"] = newtypeForget;
  exports["profunctorForget"] = profunctorForget;
  exports["choiceForget"] = choiceForget;
})(PS["Data.Lens.Internal.Forget"] = PS["Data.Lens.Internal.Forget"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Indexed = PS["Data.Lens.Internal.Indexed"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var foldMapOf = Data_Newtype.under(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.Forget);
  var preview = function (p) {
      return function ($64) {
          return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(foldMapOf(p)(function ($65) {
              return Data_Maybe_First.First(Data_Maybe.Just.create($65));
          })($64));
      };
  };
  exports["preview"] = preview;
  exports["foldMapOf"] = foldMapOf;
})(PS["Data.Lens.Fold"] = PS["Data.Lens.Fold"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Closed = PS["Data.Profunctor.Closed"];
  var Data_Profunctor_Costrong = PS["Data.Profunctor.Costrong"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var Tagged = function (x) {
      return x;
  };
  var taggedProfunctor = new Data_Profunctor.Profunctor(function (v) {
      return function (g) {
          return function (v1) {
              return g(v1);
          };
      };
  });
  var taggedChoice = new Data_Profunctor_Choice.Choice(function () {
      return taggedProfunctor;
  }, function (v) {
      return new Data_Either.Left(v);
  }, function (v) {
      return new Data_Either.Right(v);
  });
  var newtypeTagged = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Tagged);
  exports["Tagged"] = Tagged;
  exports["newtypeTagged"] = newtypeTagged;
  exports["taggedProfunctor"] = taggedProfunctor;
  exports["taggedChoice"] = taggedChoice;
})(PS["Data.Lens.Internal.Tagged"] = PS["Data.Lens.Internal.Tagged"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Lens_Internal_Market = PS["Data.Lens.Internal.Market"];
  var Data_Lens_Internal_Tagged = PS["Data.Lens.Internal.Tagged"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Prelude = PS["Prelude"];
  var review = Data_Newtype.under(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.Tagged);
  var prism = function (to) {
      return function (fro) {
          return function (dictChoice) {
              return function (pab) {
                  return Data_Profunctor.dimap(dictChoice.Profunctor0())(fro)(Data_Either.either(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)(Data_Profunctor.rmap(dictChoice.Profunctor0())(to)(pab)));
              };
          };
      };
  };
  var prism$prime = function (to) {
      return function (fro) {
          return function (dictChoice) {
              return prism(to)(function (s) {
                  return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(fro(s));
              })(dictChoice);
          };
      };
  };
  exports["prism"] = prism;
  exports["prism'"] = prism$prime;
  exports["review"] = review;
})(PS["Data.Lens.Prism"] = PS["Data.Lens.Prism"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var MediaType = function (x) {
      return x;
  }; 
  var newtypeMediaType = new Data_Newtype.Newtype(function (n) {
      return n;
  }, MediaType);
  exports["MediaType"] = MediaType;
  exports["newtypeMediaType"] = newtypeMediaType;
})(PS["Data.MediaType"] = PS["Data.MediaType"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_MediaType = PS["Data.MediaType"];           
  var applicationJSON = "application/json";
  exports["applicationJSON"] = applicationJSON;
})(PS["Data.MediaType.Common"] = PS["Data.MediaType.Common"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];        
  var Invalid = (function () {
      function Invalid(value0) {
          this.value0 = value0;
      };
      Invalid.create = function (value0) {
          return new Invalid(value0);
      };
      return Invalid;
  })();
  var Valid = (function () {
      function Valid(value0) {
          this.value0 = value0;
      };
      Valid.create = function (value0) {
          return new Valid(value0);
      };
      return Valid;
  })();
  var unV = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Invalid) {
                  return v(v2.value0);
              };
              if (v2 instanceof Valid) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Validation.Semigroup line 40, column 1 - line 40, column 77: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var invalid = Invalid.create;
  var functorV = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Invalid) {
              return new Invalid(v1.value0);
          };
          if (v1 instanceof Valid) {
              return new Valid(v(v1.value0));
          };
          throw new Error("Failed pattern match at Data.Validation.Semigroup line 61, column 1 - line 61, column 37: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bifunctorV = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Invalid) {
                  return new Invalid(v(v2.value0));
              };
              if (v2 instanceof Valid) {
                  return new Valid(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Validation.Semigroup line 65, column 1 - line 65, column 35: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyV = function (dictSemigroup) {
      return new Control_Apply.Apply(function () {
          return functorV;
      }, function (v) {
          return function (v1) {
              if (v instanceof Invalid && v1 instanceof Invalid) {
                  return new Invalid(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
              };
              if (v instanceof Invalid) {
                  return new Invalid(v.value0);
              };
              if (v1 instanceof Invalid) {
                  return new Invalid(v1.value0);
              };
              if (v instanceof Valid && v1 instanceof Valid) {
                  return new Valid(v.value0(v1.value0));
              };
              throw new Error("Failed pattern match at Data.Validation.Semigroup line 69, column 1 - line 69, column 52: " + [ v.constructor.name, v1.constructor.name ]);
          };
      });
  };
  var applicativeV = function (dictSemigroup) {
      return new Control_Applicative.Applicative(function () {
          return applyV(dictSemigroup);
      }, Valid.create);
  };
  exports["unV"] = unV;
  exports["invalid"] = invalid;
  exports["functorV"] = functorV;
  exports["bifunctorV"] = bifunctorV;
  exports["applyV"] = applyV;
  exports["applicativeV"] = applicativeV;
})(PS["Data.Validation.Semigroup"] = PS["Data.Validation.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];        
  var OrdBox = (function () {
      function OrdBox(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      OrdBox.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new OrdBox(value0, value1, value2);
              };
          };
      };
      return OrdBox;
  })();
  var unOrdBox = function (v) {
      return v.value2;
  };
  var mkOrdBox = function (dictOrd) {
      return OrdBox.create(Data_Eq.eq(dictOrd.Eq0()))(Data_Ord.compare(dictOrd));
  };
  var eqOrdBox = new Data_Eq.Eq(function (v) {
      return function (v1) {
          return v.value0(v.value2)(v1.value2);
      };
  });
  var ordOrdBox = new Data_Ord.Ord(function () {
      return eqOrdBox;
  }, function (v) {
      return function (v1) {
          return v.value1(v.value2)(v1.value2);
      };
  });
  exports["mkOrdBox"] = mkOrdBox;
  exports["unOrdBox"] = unOrdBox;
  exports["eqOrdBox"] = eqOrdBox;
  exports["ordOrdBox"] = ordOrdBox;
})(PS["Halogen.Data.OrdBox"] = PS["Halogen.Data.OrdBox"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];
  var RefUpdate = (function () {
      function RefUpdate(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      RefUpdate.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new RefUpdate(value0, value1, value2);
              };
          };
      };
      return RefUpdate;
  })();
  var Query = (function () {
      function Query(value0) {
          this.value0 = value0;
      };
      Query.create = function (value0) {
          return new Query(value0);
      };
      return Query;
  })();                             
  var bifunctorInputF = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              if (v instanceof RefUpdate) {
                  return new RefUpdate(v.value0, v.value1, f(v.value2));
              };
              if (v instanceof Query) {
                  return new Query(g(v.value0));
              };
              throw new Error("Failed pattern match at Halogen.Query.InputF line 21, column 15 - line 23, column 27: " + [ v.constructor.name ]);
          };
      };
  });
  var functorInputF = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorInputF));
  exports["RefUpdate"] = RefUpdate;
  exports["Query"] = Query;
  exports["bifunctorInputF"] = bifunctorInputF;
  exports["functorInputF"] = functorInputF;
})(PS["Halogen.Query.InputF"] = PS["Halogen.Query.InputF"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Prelude = PS["Prelude"];        
  var Step = (function () {
      function Step(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Step.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Step(value0, value1, value2);
              };
          };
      };
      return Step;
  })();
  var step = function (v) {
      return v.value1;
  };
  var halt = function (v) {
      return v.value2;
  };
  var extract = function (v) {
      return v.value0;
  };
  exports["Step"] = Step;
  exports["extract"] = extract;
  exports["step"] = step;
  exports["halt"] = halt;
})(PS["Halogen.VDom.Machine"] = PS["Halogen.VDom.Machine"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var ElemSpec = (function () {
      function ElemSpec(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      ElemSpec.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new ElemSpec(value0, value1, value2);
              };
          };
      };
      return ElemSpec;
  })();
  var Text = (function () {
      function Text(value0) {
          this.value0 = value0;
      };
      Text.create = function (value0) {
          return new Text(value0);
      };
      return Text;
  })();
  var Elem = (function () {
      function Elem(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Elem.create = function (value0) {
          return function (value1) {
              return new Elem(value0, value1);
          };
      };
      return Elem;
  })();
  var Keyed = (function () {
      function Keyed(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Keyed.create = function (value0) {
          return function (value1) {
              return new Keyed(value0, value1);
          };
      };
      return Keyed;
  })();
  var Widget = (function () {
      function Widget(value0) {
          this.value0 = value0;
      };
      Widget.create = function (value0) {
          return new Widget(value0);
      };
      return Widget;
  })();
  var Grafted = (function () {
      function Grafted(value0) {
          this.value0 = value0;
      };
      Grafted.create = function (value0) {
          return new Grafted(value0);
      };
      return Grafted;
  })();
  var Graft = (function () {
      function Graft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Graft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Graft(value0, value1, value2);
              };
          };
      };
      return Graft;
  })();
  var unGraft = function (f) {
      return function ($124) {
          return f($124);
      };
  };           
  var graft = Unsafe_Coerce.unsafeCoerce;
  var functorElemSpec = new Data_Functor.Functor(function (f) {
      return function (v) {
          return new ElemSpec(v.value0, v.value1, f(v.value2));
      };
  });                                
  var eqElemName = Data_Eq.eqString;
  var bifunctorGraft = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return unGraft(function (v) {
              return graft(new Graft(function ($126) {
                  return f(v.value0($126));
              }, function ($127) {
                  return g(v.value1($127));
              }, v.value2));
          });
      };
  });
  var bifunctorVDom = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              if (v instanceof Text) {
                  return new Text(v.value0);
              };
              if (v instanceof Grafted) {
                  return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(f)(g)(v.value0));
              };
              return new Grafted(graft(new Graft(f, g, v)));
          };
      };
  });
  var runGraft = unGraft(function (v) {
      var go = function (v2) {
          if (v2 instanceof Text) {
              return new Text(v2.value0);
          };
          if (v2 instanceof Elem) {
              return new Elem(Data_Functor.map(functorElemSpec)(v.value0)(v2.value0), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value1));
          };
          if (v2 instanceof Keyed) {
              return new Keyed(Data_Functor.map(functorElemSpec)(v.value0)(v2.value0), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value1));
          };
          if (v2 instanceof Widget) {
              return new Widget(v.value1(v2.value0));
          };
          if (v2 instanceof Grafted) {
              return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.Types line 75, column 7 - line 75, column 27: " + [ v2.constructor.name ]);
      };
      return go(v.value2);
  });
  exports["Text"] = Text;
  exports["Elem"] = Elem;
  exports["Keyed"] = Keyed;
  exports["Widget"] = Widget;
  exports["Grafted"] = Grafted;
  exports["Graft"] = Graft;
  exports["graft"] = graft;
  exports["unGraft"] = unGraft;
  exports["runGraft"] = runGraft;
  exports["ElemSpec"] = ElemSpec;
  exports["bifunctorVDom"] = bifunctorVDom;
  exports["bifunctorGraft"] = bifunctorGraft;
  exports["functorElemSpec"] = functorElemSpec;
  exports["eqElemName"] = eqElemName;
})(PS["Halogen.VDom.Types"] = PS["Halogen.VDom.Types"] || {});
(function(exports) {
    "use strict";

  exports.unsafeGetAny = function (key, obj) {
    return obj[key];
  };

  exports.unsafeHasAny = function (key, obj) {
    return obj.hasOwnProperty(key);
  };

  exports.unsafeSetAny = function (key, val, obj) {
    return function () {
      obj[key] = val;
    };
  };

  exports.forE = function (a, f) {
    return function () {
      var b = [];
      for (var i = 0; i < a.length; i++) {
        b.push(f(i, a[i])());
      }
      return b;
    };
  };

  exports.forInE = function (o, f) {
    return function () {
      var ks = Object.keys(o);
      for (var i = 0; i < ks.length; i++) {
        var k = ks[i];
        f(k, o[k])();
      }
    };
  };

  exports.diffWithIxE = function (a1, a2, f1, f2, f3) {
    return function () {
      var a3 = [];
      var l1 = a1.length;
      var l2 = a2.length;
      var i  = 0;
      while (1) {
        if (i < l1) {
          if (i < l2) {
            a3.push(f1(i, a1[i], a2[i])());
          } else {
            f2(i, a1[i])();
          }
        } else if (i < l2) {
          a3.push(f3(i, a2[i])());
        } else {
          break;
        }
        i++;
      }
      return a3;
    };
  };

  exports.strMapWithIxE = function (as, fk, f) {
    return function () {
      var o = {};
      for (var i = 0; i < as.length; i++) {
        var a = as[i];
        var k = fk(a);
        o[k] = f(k, i, a)();
      }
      return o;
    };
  };

  exports.diffWithKeyAndIxE = function (o1, as, fk, f1, f2, f3) {
    return function () {
      var o2 = {};
      for (var i = 0; i < as.length; i++) {
        var a = as[i];
        var k = fk(a);
        if (o1.hasOwnProperty(k)) {
          o2[k] = f1(k, i, o1[k], a)();
        } else {
          o2[k] = f3(k, i, a)();
        }
      }
      for (var k in o1) {
        if (k in o2) {
          continue;
        }
        f2(k, o1[k])();
      }
      return o2;
    };
  };

  exports.refEq = function (a, b) {
    return a === b;
  };

  exports.createTextNode = function (s, doc) {
    return function () {
      return doc.createTextNode(s);
    };
  };

  exports.setTextContent = function (s, n) {
    return function () {
      n.textContent = s;
    };
  };

  exports.createElement = function (ns, name, doc) {
    return function () {
      if (ns != null) {
        return doc.createElementNS(ns, name);
      } else {
        return doc.createElement(name)
      }
    };
  };

  exports.insertChildIx = function (i, a, b) {
    return function () {
      var n = b.childNodes.item(i) || null;
      if (n !== a) {
        b.insertBefore(a, n);
      }
    };
  };

  exports.removeChild = function (a, b) {
    return function () {
      if (b && a.parentNode === b) {
        b.removeChild(a);
      }
    };
  };

  exports.unsafeParent = function (a) {
    return a.parentNode;
  };

  exports.setAttribute = function (ns, attr, val, el) {
    return function () {
      if (ns != null) {
        el.setAttributeNS(ns, attr, val);
      } else {
        el.setAttribute(attr, val);
      }
    };
  };

  exports.removeAttribute = function (ns, attr, el) {
    return function () {
      if (ns != null) {
        el.removeAttributeNS(ns, attr);
      } else {
        el.removeAttribute(attr);
      }
    };
  };

  exports.addEventListener = function (ev, listener, el) {
    return function () {
      el.addEventListener(ev, listener, false);
    };
  };

  exports.removeEventListener = function (ev, listener, el) {
    return function () {
      el.removeEventListener(ev, listener, false);
    };
  };

  exports.jsUndefined = void 0;
})(PS["Halogen.VDom.Util"] = PS["Halogen.VDom.Util"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Halogen.VDom.Util"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var DOM = PS["DOM"];
  var DOM_Event_EventTarget = PS["DOM.Event.EventTarget"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_StrMap_ST = PS["Data.StrMap.ST"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var unsafeLookup = $foreign.unsafeGetAny;
  var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;
  var pokeMutMap = $foreign.unsafeSetAny;
  var newMutMap = Data_StrMap_ST["new"];
  var effUnit = Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
  var effPure = Control_Applicative.pure(Control_Monad_Eff.applicativeEff);
  exports["effPure"] = effPure;
  exports["effUnit"] = effUnit;
  exports["newMutMap"] = newMutMap;
  exports["pokeMutMap"] = pokeMutMap;
  exports["unsafeFreeze"] = unsafeFreeze;
  exports["unsafeLookup"] = unsafeLookup;
  exports["unsafeGetAny"] = $foreign.unsafeGetAny;
  exports["unsafeHasAny"] = $foreign.unsafeHasAny;
  exports["unsafeSetAny"] = $foreign.unsafeSetAny;
  exports["forE"] = $foreign.forE;
  exports["forInE"] = $foreign.forInE;
  exports["diffWithIxE"] = $foreign.diffWithIxE;
  exports["diffWithKeyAndIxE"] = $foreign.diffWithKeyAndIxE;
  exports["strMapWithIxE"] = $foreign.strMapWithIxE;
  exports["refEq"] = $foreign.refEq;
  exports["createTextNode"] = $foreign.createTextNode;
  exports["setTextContent"] = $foreign.setTextContent;
  exports["createElement"] = $foreign.createElement;
  exports["insertChildIx"] = $foreign.insertChildIx;
  exports["removeChild"] = $foreign.removeChild;
  exports["unsafeParent"] = $foreign.unsafeParent;
  exports["setAttribute"] = $foreign.setAttribute;
  exports["removeAttribute"] = $foreign.removeAttribute;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
  exports["jsUndefined"] = $foreign.jsUndefined;
})(PS["Halogen.VDom.Util"] = PS["Halogen.VDom.Util"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var DOM = PS["DOM"];
  var DOM_Event_EventTarget = PS["DOM.Event.EventTarget"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen_VDom = PS["Halogen.VDom"];
  var Halogen_VDom_Machine = PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Halogen_VDom_Util = PS["Halogen.VDom.Util"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var Created = (function () {
      function Created(value0) {
          this.value0 = value0;
      };
      Created.create = function (value0) {
          return new Created(value0);
      };
      return Created;
  })();
  var Removed = (function () {
      function Removed(value0) {
          this.value0 = value0;
      };
      Removed.create = function (value0) {
          return new Removed(value0);
      };
      return Removed;
  })();
  var Attribute = (function () {
      function Attribute(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Attribute.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Attribute(value0, value1, value2);
              };
          };
      };
      return Attribute;
  })();
  var Property = (function () {
      function Property(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Property.create = function (value0) {
          return function (value1) {
              return new Property(value0, value1);
          };
      };
      return Property;
  })();
  var Handler = (function () {
      function Handler(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Handler.create = function (value0) {
          return function (value1) {
              return new Handler(value0, value1);
          };
      };
      return Handler;
  })();
  var Ref = (function () {
      function Ref(value0) {
          this.value0 = value0;
      };
      Ref.create = function (value0) {
          return new Ref(value0);
      };
      return Ref;
  })();
  var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;
  var setProperty = Halogen_VDom_Util.unsafeSetAny;
  var removeProperty = function (key, el) {
      var v = Data_Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));
      if (v === "string") {
          return Halogen_VDom_Util.unsafeSetAny(key, "", el);
      };
      if (key === "rowSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      if (key === "colSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);
  };
  var propToStrKey = function (v) {
      if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {
          return "attr/" + (v.value0.value0 + (":" + v.value1));
      };
      if (v instanceof Attribute) {
          return "attr/:" + v.value1;
      };
      if (v instanceof Property) {
          return "prop/" + v.value0;
      };
      if (v instanceof Handler) {
          return "handler/" + v.value0;
      };
      if (v instanceof Ref) {
          return "ref";
      };
      throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop line 179, column 16 - line 186, column 1: " + [ v.constructor.name ]);
  };
  var propFromString = Unsafe_Coerce.unsafeCoerce;
  var propFromNumber = Unsafe_Coerce.unsafeCoerce;
  var propFromInt = Unsafe_Coerce.unsafeCoerce;    
  var functorProp = new Data_Functor.Functor(function (f) {
      return function (v) {
          if (v instanceof Handler) {
              return new Handler(v.value0, Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value1));
          };
          if (v instanceof Ref) {
              return new Ref(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value0));
          };
          return v;
      };
  });
  var buildProp = function (emit) {
      return function (el) {
          var removeProp = function (prevEvents) {
              return function (v, v1) {
                  if (v1 instanceof Attribute) {
                      return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);
                  };
                  if (v1 instanceof Property) {
                      return removeProperty(v1.value0, el);
                  };
                  if (v1 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);
                      return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);
                  };
                  if (v1 instanceof Ref) {
                      return Halogen_VDom_Util.effUnit;
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop line 166, column 5 - line 176, column 21: " + [ v1.constructor.name ]);
              };
          };
          var mbEmit = Data_Maybe.maybe(Halogen_VDom_Util.effUnit)(emit);
          var done = function (ps) {
              var v = Data_StrMap.lookup("ref")(ps);
              if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) {
                  return mbEmit(v.value0.value0(new Removed(el)));
              };
              return Halogen_VDom_Util.effUnit;
          };
          var diffProp = function (prevEvents, events) {
              return function (v, v1, v11, v2) {
                  if (v11 instanceof Attribute && v2 instanceof Attribute) {
                      var v3 = v11.value2 !== v2.value2;
                      if (v3) {
                          return function __do() {
                              Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el)();
                              return v2;
                          };
                      };
                      return Halogen_VDom_Util.effPure(v2);
                  };
                  if (v11 instanceof Property && v2 instanceof Property) {
                      var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);
                      if (v4) {
                          return Halogen_VDom_Util.effPure(v2);
                      };
                      if (v2.value0 === "value") {
                          var elVal = unsafeGetProperty("value", el);
                          var v5 = !Halogen_VDom_Util.refEq(elVal, v2.value1);
                          if (v5) {
                              return function __do() {
                                  setProperty(v2.value0, v2.value1, el)();
                                  return v2;
                              };
                          };
                          return Halogen_VDom_Util.effPure(v2);
                      };
                      return function __do() {
                          setProperty(v2.value0, v2.value1, el)();
                          return v2;
                      };
                  };
                  if (v11 instanceof Handler && v2 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);
                      return function __do() {
                          Control_Monad_Eff_Ref.writeRef(Data_Tuple.snd(handler))(v2.value1)();
                          Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events)();
                          return v2;
                      };
                  };
                  return Halogen_VDom_Util.effPure(v2);
              };
          };
          var applyProp = function (events) {
              return function (v, v1, v2) {
                  if (v2 instanceof Attribute) {
                      return function __do() {
                          Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el)();
                          return v2;
                      };
                  };
                  if (v2 instanceof Property) {
                      return function __do() {
                          setProperty(v2.value0, v2.value1, el)();
                          return v2;
                      };
                  };
                  if (v2 instanceof Handler) {
                      var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);
                      if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {
                          return function __do() {
                              Control_Monad_Eff_Ref.writeRef(Data_Tuple.snd(v3))(v2.value1)();
                              return v2;
                          };
                      };
                      return function __do() {
                          var v4 = Control_Monad_Eff_Ref.newRef(v2.value1)();
                          var listener = DOM_Event_EventTarget.eventListener(function (ev) {
                              return function __do() {
                                  var v5 = Control_Monad_Eff_Ref.readRef(v4)();
                                  return mbEmit(v5(ev))();
                              };
                          });
                          Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(listener, v4), events)();
                          Halogen_VDom_Util.addEventListener(v2.value0, listener, el)();
                          return v2;
                      };
                  };
                  if (v2 instanceof Ref) {
                      return function __do() {
                          mbEmit(v2.value0(new Created(el)))();
                          return v2;
                      };
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop line 107, column 5 - line 130, column 15: " + [ v2.constructor.name ]);
              };
          };
          var patch = function (prevEvents, ps1) {
              return function (ps2) {
                  return function __do() {
                      var v = Halogen_VDom_Util.newMutMap();
                      var onThis = removeProp(prevEvents);
                      var onThese = diffProp(prevEvents, v);
                      var onThat = applyProp(v);
                      var v1 = Halogen_VDom_Util.diffWithKeyAndIxE(ps1, ps2, propToStrKey, onThese, onThis, onThat)();
                      return new Halogen_VDom_Machine.Step(Data_Unit.unit, patch(Halogen_VDom_Util.unsafeFreeze(v), v1), done(v1));
                  };
              };
          };
          var render = function (ps1) {
              return function __do() {
                  var v = Halogen_VDom_Util.newMutMap();
                  var v1 = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(v))();
                  return new Halogen_VDom_Machine.Step(Data_Unit.unit, patch(Halogen_VDom_Util.unsafeFreeze(v), v1), done(v1));
              };
          };
          return render;
      };
  };
  exports["Attribute"] = Attribute;
  exports["Property"] = Property;
  exports["Handler"] = Handler;
  exports["Ref"] = Ref;
  exports["Created"] = Created;
  exports["Removed"] = Removed;
  exports["propFromString"] = propFromString;
  exports["propFromInt"] = propFromInt;
  exports["propFromNumber"] = propFromNumber;
  exports["buildProp"] = buildProp;
  exports["functorProp"] = functorProp;
})(PS["Halogen.VDom.DOM.Prop"] = PS["Halogen.VDom.DOM.Prop"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_HTML_Indexed_ButtonType = PS["DOM.HTML.Indexed.ButtonType"];
  var DOM_HTML_Indexed_CrossOriginValue = PS["DOM.HTML.Indexed.CrossOriginValue"];
  var DOM_HTML_Indexed_DirValue = PS["DOM.HTML.Indexed.DirValue"];
  var DOM_HTML_Indexed_FormMethod = PS["DOM.HTML.Indexed.FormMethod"];
  var DOM_HTML_Indexed_InputType = PS["DOM.HTML.Indexed.InputType"];
  var DOM_HTML_Indexed_KindValue = PS["DOM.HTML.Indexed.KindValue"];
  var DOM_HTML_Indexed_MenuType = PS["DOM.HTML.Indexed.MenuType"];
  var DOM_HTML_Indexed_MenuitemType = PS["DOM.HTML.Indexed.MenuitemType"];
  var DOM_HTML_Indexed_OnOff = PS["DOM.HTML.Indexed.OnOff"];
  var DOM_HTML_Indexed_OrderedListType = PS["DOM.HTML.Indexed.OrderedListType"];
  var DOM_HTML_Indexed_PreloadValue = PS["DOM.HTML.Indexed.PreloadValue"];
  var DOM_HTML_Indexed_ScopeValue = PS["DOM.HTML.Indexed.ScopeValue"];
  var DOM_HTML_Indexed_StepValue = PS["DOM.HTML.Indexed.StepValue"];
  var DOM_HTML_Indexed_WrapValue = PS["DOM.HTML.Indexed.WrapValue"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_MediaType = PS["Data.MediaType"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Halogen_VDom = PS["Halogen.VDom"];
  var Halogen_VDom_DOM_Prop = PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var HTML = function (x) {
      return x;
  };
  var ClassName = function (x) {
      return x;
  };
  var IsProp = function (toPropValue) {
      this.toPropValue = toPropValue;
  }; 
  var toPropValue = function (dict) {
      return dict.toPropValue;
  };
  var text = function ($54) {
      return HTML(Halogen_VDom_Types.Text.create($54));
  };
  var stringIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromString);
  var slot = function ($56) {
      return HTML(Halogen_VDom_Types.Widget.create($56));
  };
  var prop = function (dictIsProp) {
      return function (v) {
          return function ($59) {
              return Halogen_VDom_DOM_Prop.Property.create(v)(toPropValue(dictIsProp)($59));
          };
      };
  }; 
  var numberIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromNumber);
  var newtypeClassName = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ClassName);
  var intIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromInt);
  var inputTypeIsProp = new IsProp(function ($67) {
      return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputType.renderInputType($67));
  });
  var handler = Halogen_VDom_DOM_Prop.Handler.create;
  var element = function (ns) {
      return function (name) {
          return function (props) {
              return function (children) {
                  return new Halogen_VDom_Types.Elem(new Halogen_VDom_Types.ElemSpec(ns, name, props), children);
              };
          };
      };
  }; 
  var buttonTypeIsProp = new IsProp(function ($71) {
      return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ButtonType.renderButtonType($71));
  });                                                                   
  var bifunctorHTML = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return Data_Bifunctor.bimap(Halogen_VDom_Types.bifunctorVDom)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_InputF.functorInputF)(g))))(f)(v);
          };
      };
  });                                                                            
  var attr = function (ns) {
      return function (v) {
          return Halogen_VDom_DOM_Prop.Attribute.create(ns)(v);
      };
  };
  exports["HTML"] = HTML;
  exports["slot"] = slot;
  exports["text"] = text;
  exports["element"] = element;
  exports["prop"] = prop;
  exports["attr"] = attr;
  exports["handler"] = handler;
  exports["IsProp"] = IsProp;
  exports["toPropValue"] = toPropValue;
  exports["ClassName"] = ClassName;
  exports["bifunctorHTML"] = bifunctorHTML;
  exports["stringIsProp"] = stringIsProp;
  exports["intIsProp"] = intIsProp;
  exports["numberIsProp"] = numberIsProp;
  exports["buttonTypeIsProp"] = buttonTypeIsProp;
  exports["inputTypeIsProp"] = inputTypeIsProp;
  exports["newtypeClassName"] = newtypeClassName;
})(PS["Halogen.HTML.Core"] = PS["Halogen.HTML.Core"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Monad_Aff_Class = PS["Control.Monad.Aff.Class"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Listening = (function () {
      function Listening() {

      };
      Listening.value = new Listening();
      return Listening;
  })();
  var Done = (function () {
      function Done() {

      };
      Done.value = new Done();
      return Done;
  })();
  var unEventSource = function (v) {
      return v;
  };
  var eqSubscribeStatus = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Listening && y instanceof Listening) {
              return true;
          };
          if (x instanceof Done && y instanceof Done) {
              return true;
          };
          return false;
      };
  });
  exports["Listening"] = Listening;
  exports["Done"] = Done;
  exports["unEventSource"] = unEventSource;
  exports["eqSubscribeStatus"] = eqSubscribeStatus;
})(PS["Halogen.Query.EventSource"] = PS["Halogen.Query.EventSource"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var ForkF = (function () {
      function ForkF(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ForkF.create = function (value0) {
          return function (value1) {
              return new ForkF(value0, value1);
          };
      };
      return ForkF;
  })();
  var unFork = Unsafe_Coerce.unsafeCoerce;
  var mkFork = Unsafe_Coerce.unsafeCoerce;
  var fork = function (fx) {
      return mkFork(new ForkF(fx, Control_Category.id(Control_Category.categoryFn)));
  };
  exports["ForkF"] = ForkF;
  exports["fork"] = fork;
  exports["mkFork"] = mkFork;
  exports["unFork"] = unFork;
})(PS["Halogen.Query.ForkF"] = PS["Halogen.Query.ForkF"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Applicative_Free = PS["Control.Applicative.Free"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Aff_Class = PS["Control.Monad.Aff.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Coyoneda = PS["Data.Coyoneda"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen_Query_EventSource = PS["Halogen.Query.EventSource"];
  var Halogen_Query_ForkF = PS["Halogen.Query.ForkF"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Prelude = PS["Prelude"];
  var HalogenM = function (x) {
      return x;
  };
  var State = (function () {
      function State(value0) {
          this.value0 = value0;
      };
      State.create = function (value0) {
          return new State(value0);
      };
      return State;
  })();
  var Subscribe = (function () {
      function Subscribe(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Subscribe.create = function (value0) {
          return function (value1) {
              return new Subscribe(value0, value1);
          };
      };
      return Subscribe;
  })();
  var Lift = (function () {
      function Lift(value0) {
          this.value0 = value0;
      };
      Lift.create = function (value0) {
          return new Lift(value0);
      };
      return Lift;
  })();
  var Halt = (function () {
      function Halt(value0) {
          this.value0 = value0;
      };
      Halt.create = function (value0) {
          return new Halt(value0);
      };
      return Halt;
  })();
  var GetSlots = (function () {
      function GetSlots(value0) {
          this.value0 = value0;
      };
      GetSlots.create = function (value0) {
          return new GetSlots(value0);
      };
      return GetSlots;
  })();
  var CheckSlot = (function () {
      function CheckSlot(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CheckSlot.create = function (value0) {
          return function (value1) {
              return new CheckSlot(value0, value1);
          };
      };
      return CheckSlot;
  })();
  var ChildQuery = (function () {
      function ChildQuery(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChildQuery.create = function (value0) {
          return function (value1) {
              return new ChildQuery(value0, value1);
          };
      };
      return ChildQuery;
  })();
  var Raise = (function () {
      function Raise(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Raise.create = function (value0) {
          return function (value1) {
              return new Raise(value0, value1);
          };
      };
      return Raise;
  })();
  var Par = (function () {
      function Par(value0) {
          this.value0 = value0;
      };
      Par.create = function (value0) {
          return new Par(value0);
      };
      return Par;
  })();
  var Fork = (function () {
      function Fork(value0) {
          this.value0 = value0;
      };
      Fork.create = function (value0) {
          return new Fork(value0);
      };
      return Fork;
  })();
  var GetRef = (function () {
      function GetRef(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      GetRef.create = function (value0) {
          return function (value1) {
              return new GetRef(value0, value1);
          };
      };
      return GetRef;
  })();
  var raise = function (o) {
      return HalogenM(Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit)));
  }; 
  var mkQuery = function (dictEq) {
      return function (p) {
          return function ($176) {
              return HalogenM(Control_Monad_Free.liftF(ChildQuery.create(p)(Data_Coyoneda.coyoneda(Control_Category.id(Control_Category.categoryFn))($176))));
          };
      };
  };
  var functorHalogenM = new Data_Functor.Functor(function (f) {
      return function (v) {
          return Data_Functor.map(Control_Monad_Free.freeFunctor)(f)(v);
      };
  });
  var fork = function (dictMonadAff) {
      return function (a) {
          return Data_Functor.map(functorHalogenM)(Data_Functor.map(Data_Functor.functorFn)(Control_Monad_Aff_Class.liftAff(dictMonadAff)))(Control_Monad_Free.liftF(Fork.create(Halogen_Query_ForkF.fork(a))));
      };
  };
  var checkSlot = function (p) {
      return HalogenM(Control_Monad_Free.liftF(new CheckSlot(p, Control_Category.id(Control_Category.categoryFn))));
  };
  var applyHalogenM = new Control_Apply.Apply(function () {
      return functorHalogenM;
  }, function (v) {
      return function (v1) {
          return Control_Apply.apply(Control_Monad_Free.freeApply)(v)(v1);
      };
  });
  var bindHalogenM = new Control_Bind.Bind(function () {
      return applyHalogenM;
  }, function (v) {
      return function (f) {
          return Control_Bind.bind(Control_Monad_Free.freeBind)(v)(function (x) {
              var v1 = f(x);
              return v1;
          });
      };
  });                                                       
  var applicativeHalogenM = new Control_Applicative.Applicative(function () {
      return applyHalogenM;
  }, function (a) {
      return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(a);
  });
  var monadHalogenM = new Control_Monad.Monad(function () {
      return applicativeHalogenM;
  }, function () {
      return bindHalogenM;
  });
  var monadEffHalogenM = function (dictMonadEff) {
      return new Control_Monad_Eff_Class.MonadEff(function () {
          return monadHalogenM;
      }, function (eff) {
          return HalogenM(Control_Monad_Free.liftF(Lift.create(Control_Monad_Eff_Class.liftEff(dictMonadEff)(eff))));
      });
  };
  var monadAffHalogenM = function (dictMonadAff) {
      return new Control_Monad_Aff_Class.MonadAff(function () {
          return monadEffHalogenM(dictMonadAff.MonadEff0());
      }, function (aff) {
          return HalogenM(Control_Monad_Free.liftF(Lift.create(Control_Monad_Aff_Class.liftAff(dictMonadAff)(aff))));
      });
  };
  var monadStateHalogenM = new Control_Monad_State_Class.MonadState(function () {
      return monadHalogenM;
  }, function ($180) {
      return HalogenM(Control_Monad_Free.liftF(State.create($180)));
  });
  exports["State"] = State;
  exports["Subscribe"] = Subscribe;
  exports["Lift"] = Lift;
  exports["Halt"] = Halt;
  exports["GetSlots"] = GetSlots;
  exports["CheckSlot"] = CheckSlot;
  exports["ChildQuery"] = ChildQuery;
  exports["Raise"] = Raise;
  exports["Par"] = Par;
  exports["Fork"] = Fork;
  exports["GetRef"] = GetRef;
  exports["HalogenM"] = HalogenM;
  exports["mkQuery"] = mkQuery;
  exports["checkSlot"] = checkSlot;
  exports["raise"] = raise;
  exports["fork"] = fork;
  exports["functorHalogenM"] = functorHalogenM;
  exports["applyHalogenM"] = applyHalogenM;
  exports["applicativeHalogenM"] = applicativeHalogenM;
  exports["bindHalogenM"] = bindHalogenM;
  exports["monadHalogenM"] = monadHalogenM;
  exports["monadEffHalogenM"] = monadEffHalogenM;
  exports["monadAffHalogenM"] = monadAffHalogenM;
  exports["monadStateHalogenM"] = monadStateHalogenM;
})(PS["Halogen.Query.HalogenM"] = PS["Halogen.Query.HalogenM"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Const = PS["Data.Const"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Halogen_Data_OrdBox = PS["Halogen.Data.OrdBox"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var ComponentSlot = (function () {
      function ComponentSlot(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ComponentSlot.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ComponentSlot(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ComponentSlot;
  })();
  var unComponentSlot = function (f) {
      return function (cs) {
          return f(cs.value0)(cs.value1)(cs.value2)(cs.value3)(cs.value4)(cs.value5);
      };
  };
  var unComponent = Unsafe_Coerce.unsafeCoerce;
  var mkComponentSlot = ComponentSlot.create;
  var mkComponent = Unsafe_Coerce.unsafeCoerce;
  var parentComponent = function (dictOrd) {
      return function (spec) {
          return mkComponent({
              initialState: spec.initialState,
              render: spec.render,
              "eval": spec["eval"],
              receiver: spec.receiver,
              initializer: Data_Maybe.Nothing.value,
              finalizer: Data_Maybe.Nothing.value,
              mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(dictOrd)
          });
      };
  };
  var lifecycleComponent = function (dictBifunctor) {
      return function (spec) {
          return mkComponent({
              initialState: spec.initialState,
              render: spec.render,
              "eval": spec["eval"],
              receiver: spec.receiver,
              initializer: spec.initializer,
              finalizer: spec.finalizer,
              mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(Data_Ord.ordVoid)
          });
      };
  }; 
  var component = function (dictBifunctor) {
      return function (spec) {
          return lifecycleComponent(dictBifunctor)({
              initialState: spec.initialState,
              render: spec.render,
              "eval": spec["eval"],
              receiver: spec.receiver,
              initializer: Data_Maybe.Nothing.value,
              finalizer: Data_Maybe.Nothing.value
          });
      };
  };
  exports["mkComponent"] = mkComponent;
  exports["unComponent"] = unComponent;
  exports["component"] = component;
  exports["lifecycleComponent"] = lifecycleComponent;
  exports["parentComponent"] = parentComponent;
  exports["mkComponentSlot"] = mkComponentSlot;
  exports["unComponentSlot"] = unComponentSlot;
})(PS["Halogen.Component"] = PS["Halogen.Component"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Traversable = PS["Data.Traversable"];
  var Halogen_Aff_Effects = PS["Halogen.Aff.Effects"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_Data_OrdBox = PS["Halogen.Data.OrdBox"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var unRenderStateX = Unsafe_Coerce.unsafeCoerce;
  var unDriverStateX = Unsafe_Coerce.unsafeCoerce;
  var renderStateX_ = function (dictApplicative) {
      return function (f) {
          return unDriverStateX(function (st) {
              return Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe)(f)(st.rendering);
          });
      };
  };
  var mkRenderStateX = function (v) {
      return Unsafe_Coerce.unsafeCoerce;
  };
  var renderStateX = function (dictFunctor) {
      return function (f) {
          return unDriverStateX(function (st) {
              return mkRenderStateX(st.prjQuery)(f(st.rendering));
          });
      };
  };
  var mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;
  var initDriverState = function (component) {
      return function (input) {
          return function (handler) {
              return function (prjQuery) {
                  return function (lchs) {
                      return function __do() {
                          var v = Control_Monad_Eff_Ref.newRef({})();
                          var v1 = Control_Monad_Eff_Ref.newRef(Data_Map.empty)();
                          var v2 = Control_Monad_Eff_Ref.newRef(Data_Map.empty)();
                          var v3 = Control_Monad_Eff_Ref.newRef(Data_Functor.voidLeft(Data_Maybe.functorMaybe)(component.initializer)(Data_List_Types.Nil.value))();
                          var v4 = Control_Monad_Eff_Ref.newRef(new Data_Maybe.Just(Data_List_Types.Nil.value))();
                          var v5 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
                          var v6 = Control_Monad_Eff_Ref.newRef(0)();
                          var v7 = Control_Monad_Eff_Ref.newRef(new Data_Maybe.Just(Data_Map.empty))();
                          var ds = {
                              component: component,
                              state: component.initialState(input),
                              refs: Data_StrMap.empty,
                              children: Data_Map.empty,
                              childrenIn: v1,
                              childrenOut: v2,
                              selfRef: v,
                              handler: handler,
                              pendingQueries: v3,
                              pendingOuts: v4,
                              pendingHandlers: v5,
                              rendering: Data_Maybe.Nothing.value,
                              prjQuery: prjQuery,
                              fresh: v6,
                              subscriptions: v7,
                              lifecycleHandlers: lchs
                          };
                          Control_Monad_Eff_Ref.writeRef(v)(ds)();
                          return mkDriverStateXRef(v);
                      };
                  };
              };
          };
      };
  };
  exports["unDriverStateX"] = unDriverStateX;
  exports["mkDriverStateXRef"] = mkDriverStateXRef;
  exports["renderStateX"] = renderStateX;
  exports["renderStateX_"] = renderStateX_;
  exports["unRenderStateX"] = unRenderStateX;
  exports["initDriverState"] = initDriverState;
})(PS["Halogen.Aff.Driver.State"] = PS["Halogen.Aff.Driver.State"] || {});
(function(exports) {
    "use strict";

  exports.reallyUnsafeRefEq = function (a) {
    return function (b) {
      return a === b;
    };
  };
})(PS["Unsafe.Reference"] = PS["Unsafe.Reference"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Unsafe.Reference"];
  var unsafeRefEq = $foreign.reallyUnsafeRefEq;
  exports["unsafeRefEq"] = unsafeRefEq;
})(PS["Unsafe.Reference"] = PS["Unsafe.Reference"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Applicative_Free = PS["Control.Applicative.Free"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_Unsafe = PS["Control.Monad.Aff.Unsafe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Fork_Class = PS["Control.Monad.Fork.Class"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Coyoneda = PS["Data.Coyoneda"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var Halogen_Aff_Driver_State = PS["Halogen.Aff.Driver.State"];
  var Halogen_Aff_Effects = PS["Halogen.Aff.Effects"];
  var Halogen_Data_OrdBox = PS["Halogen.Data.OrdBox"];
  var Halogen_Query_EventSource = PS["Halogen.Query.EventSource"];
  var Halogen_Query_ForkF = PS["Halogen.Query.ForkF"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Prelude = PS["Prelude"];
  var Unsafe_Reference = PS["Unsafe.Reference"];        
  var queuingHandler = function (handler) {
      return function (ref) {
          return function (message) {
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v) {
                  if (v instanceof Data_Maybe.Nothing) {
                      return handler(message);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(ref)(new Data_Maybe.Just(new Data_List_Types.Cons(handler(message), v.value0))));
                  };
                  throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 174, column 3 - line 178, column 57: " + [ v.constructor.name ]);
              });
          };
      };
  };
  var handleLifecycle = function (lchs) {
      return function (f) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(lchs)({
              initializers: Data_List_Types.Nil.value,
              finalizers: Data_List_Types.Nil.value
          })))(function () {
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(f))(function (v) {
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(lchs)))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Data_Foldable.traverse_(Control_Monad_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(v1.finalizers))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Parallel.parSequence_(Control_Monad_Aff.parallelAff)(Data_List_Types.foldableList)(v1.initializers))(function () {
                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v);
                          });
                      });
                  });
              });
          });
      };
  };
  var $$eval = function (render) {
      return function (r) {
          var go = function (ref) {
              return function (v) {
                  if (v instanceof Halogen_Query_HalogenM.State) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                          var v2 = v.value0(v1.state);
                          if (Unsafe_Reference.unsafeRefEq(v1.state)(v2.value1)) {
                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v2.value0);
                          };
                          if (Data_Boolean.otherwise) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(ref)((function () {
                                  var $41 = {};
                                  for (var $42 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $42)) {
                                          $41[$42] = v1[$42];
                                      };
                                  };
                                  $41.state = v2.value1;
                                  return $41;
                              })())))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(handleLifecycle(v1.lifecycleHandlers)(render(v1.lifecycleHandlers)(ref)))(function () {
                                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v2.value0);
                                  });
                              });
                          };
                          throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 78, column 7 - line 84, column 21: " + [ v2.constructor.name ]);
                      });
                  };
                  if (v instanceof Halogen_Query_HalogenM.Subscribe) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_Query_EventSource.unEventSource(v.value0))(function (v2) {
                              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref["modifyRef'"](v1.fresh)(function (i) {
                                  return {
                                      state: i + 1 | 0,
                                      value: i
                                  };
                              })))(function (v3) {
                                  var done$prime = Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v1.subscriptions)))(function (v4) {
                                      return Control_Applicative.when(Control_Monad_Aff.applicativeAff)(Data_Maybe.maybe(false)(Data_Map.member(Data_Ord.ordInt)(v3))(v4))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(v2.done)(function () {
                                          return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(v1.subscriptions)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map["delete"](Data_Ord.ordInt)(v3))));
                                      }));
                                  });
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(v1.subscriptions)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map.insert(Data_Ord.ordInt)(v3)(done$prime)))))(function () {
                                      var consumer = Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Coroutine["await"](Control_Monad_Aff.monadAff))(function (v4) {
                                          return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Control_Monad_Aff.monadAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v1.subscriptions))))(function (v5) {
                                              return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Data_Maybe.isJust(v5))(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Control_Monad_Aff.monadAff)(evalF(ref)(v4)))(function (v6) {
                                                  return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Data_Eq.eq(Halogen_Query_EventSource.eqSubscribeStatus)(v6)(Halogen_Query_EventSource.Listening.value))(consumer);
                                              }));
                                          });
                                      });
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Coroutine.runProcess(Control_Monad_Aff.monadRecAff)(Control_Coroutine.pullFrom(Control_Monad_Aff.monadRecAff)(consumer)(v2.producer)))(function () {
                                          return done$prime;
                                      });
                                  });
                              });
                          })))(function (v2) {
                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1);
                          });
                      });
                  };
                  if (v instanceof Halogen_Query_HalogenM.Lift) {
                      return v.value0;
                  };
                  if (v instanceof Halogen_Query_HalogenM.Halt) {
                      return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error(v.value0));
                  };
                  if (v instanceof Halogen_Query_HalogenM.GetSlots) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value0(Data_Functor.map(Data_List_Types.functorList)(Halogen_Data_OrdBox.unOrdBox)(Data_Map.keys(v1.children))));
                      });
                  };
                  if (v instanceof Halogen_Query_HalogenM.CheckSlot) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1(Data_Map.member(Halogen_Data_OrdBox.ordOrdBox)(v1.component.mkOrdBox(v.value0))(v1.children)));
                      });
                  };
                  if (v instanceof Halogen_Query_HalogenM.ChildQuery) {
                      return evalChildQuery(ref)(v.value0)(v.value1);
                  };
                  if (v instanceof Halogen_Query_HalogenM.Raise) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(queuingHandler(v1.handler)(v1.pendingOuts)(v.value0))(function () {
                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1);
                          });
                      });
                  };
                  if (v instanceof Halogen_Query_HalogenM.Par) {
                      return Control_Parallel_Class.sequential(Control_Monad_Aff.parallelAff)(Control_Applicative_Free.retractFreeAp(Control_Monad_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp(function ($109) {
                          return Control_Parallel_Class.parallel(Control_Monad_Aff.parallelAff)(evalM(ref)($109));
                      })(v.value0)));
                  };
                  if (v instanceof Halogen_Query_HalogenM.Fork) {
                      return Halogen_Query_ForkF.unFork(function (v1) {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(evalM(ref)(v1.value0)))(function (v2) {
                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v1.value1(function ($110) {
                                  return Control_Monad_Aff_Unsafe.unsafeCoerceAff(Data_Function.flip(Control_Monad_Aff.killFiber)(v2)($110));
                              }));
                          });
                      })(v.value0);
                  };
                  if (v instanceof Halogen_Query_HalogenM.GetRef) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1(Data_StrMap.lookup(v.value0)(v1.refs)));
                      });
                  };
                  throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 75, column 12 - line 131, column 34: " + [ v.constructor.name ]);
              };
          };
          var evalM = function (ref) {
              return function (v) {
                  return Control_Monad_Free.foldFree(Control_Monad_Aff.monadRecAff)(go(ref))(v);
              };
          };
          var evalF = function (ref) {
              return function (q) {
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v) {
                      var v1 = v["component"]["eval"](q);
                      return Control_Monad_Free.foldFree(Control_Monad_Aff.monadRecAff)(go(ref))(v1);
                  });
              };
          };
          var evalChildQuery = function (ref) {
              return function (p) {
                  return Data_Coyoneda.unCoyoneda(function (k) {
                      return function (q) {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v) {
                              var v1 = Data_Map.lookup(Halogen_Data_OrdBox.ordOrdBox)(v.component.mkOrdBox(p))(v.children);
                              if (v1 instanceof Data_Maybe.Just) {
                                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v1.value0)))(function (v2) {
                                      return Halogen_Aff_Driver_State.unDriverStateX(function (ds) {
                                          var v3 = ds.prjQuery(q);
                                          if (v3 instanceof Data_Maybe.Just) {
                                              return Data_Functor.map(Control_Monad_Aff.functorAff)(k)(evalF(ds.selfRef)(v3.value0));
                                          };
                                          if (v3 instanceof Data_Maybe.Nothing) {
                                              return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error("Query projection failed for child query"));
                                          };
                                          throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 144, column 32 - line 146, column 82: " + [ v3.constructor.name ]);
                                      })(v2);
                                  });
                              };
                              if (v1 instanceof Data_Maybe.Nothing) {
                                  return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error("Slot lookup failed for child query"));
                              };
                              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 141, column 5 - line 147, column 73: " + [ v1.constructor.name ]);
                          });
                      };
                  });
              };
          };
          return function (v) {
              if (v instanceof Halogen_Query_InputF.RefUpdate) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(r)(function (v1) {
                      var $102 = {};
                      for (var $103 in v1) {
                          if ({}.hasOwnProperty.call(v1, $103)) {
                              $102[$103] = v1[$103];
                          };
                      };
                      $102.refs = Data_StrMap.alter(Data_Function["const"](v.value1))(v.value0)(v1.refs);
                      return $102;
                  })))(function () {
                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value2);
                  });
              };
              if (v instanceof Halogen_Query_InputF.Query) {
                  return evalF(r)(v.value0);
              };
              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 61, column 3 - line 66, column 25: " + [ v.constructor.name ]);
          };
      };
  };
  exports["handleLifecycle"] = handleLifecycle;
  exports["eval"] = $$eval;
  exports["queuingHandler"] = queuingHandler;
})(PS["Halogen.Aff.Driver.Eval"] = PS["Halogen.Aff.Driver.Eval"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Fork_Class = PS["Control.Monad.Fork.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen = PS["Halogen"];
  var Halogen_Aff_Driver_Eval = PS["Halogen.Aff.Driver.Eval"];
  var Halogen_Aff_Driver_State = PS["Halogen.Aff.Driver.State"];
  var Halogen_Aff_Effects = PS["Halogen.Aff.Effects"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_Data_OrdBox = PS["Halogen.Data.OrdBox"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Prelude = PS["Prelude"];        
  var newLifecycleHandlers = Control_Monad_Eff_Ref.newRef({
      initializers: Data_List_Types.Nil.value,
      finalizers: Data_List_Types.Nil.value
  });
  var handleAff = Control_Monad_Aff.runAff_(Data_Either.either(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit))));
  var runUI = function (renderSpec) {
      return function (component) {
          return function (i) {
              var subscribe = function (fresh) {
                  return function (ref) {
                      return function (consumer) {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeEmptyVar)(function (v) {
                              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(function __do() {
                                  var v1 = Control_Monad_Eff_Ref.readRef(fresh)();
                                  Control_Monad_Eff_Ref.modifyRef(fresh)(function (v2) {
                                      return v2 + 1 | 0;
                                  })();
                                  Control_Monad_Eff_Ref.modifyRef(ref)(Data_Map.insert(Data_Ord.ordInt)(v1)(v))();
                                  return v1;
                              }))(function (v1) {
                                  var producer = Control_Coroutine.producer(Control_Monad_Aff.monadAff)(Data_Functor.map(Control_Monad_Aff.functorAff)(Data_Either.Left.create)(Control_Monad_Aff_AVar.takeVar(v)));
                                  return Data_Functor["void"](Control_Monad_Aff.functorAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Coroutine.runProcess(Control_Monad_Aff.monadRecAff)(Control_Coroutine.connect(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelAff)(producer)(consumer)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(ref)(Data_Map["delete"](Data_Ord.ordInt)(v1))))(function () {
                                          return Control_Monad_Aff_AVar.killVar(Control_Monad_Eff_Exception.error("ended"))(v);
                                      });
                                  })));
                              });
                          });
                      };
                  };
              };
              var rootHandler = function (ref) {
                  return function (message) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v) {
                          return Data_Foldable.traverse_(Control_Monad_Aff.applicativeAff)(Data_Map.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_Functor.map(Data_Map.functorMap)(Control_Monad_Aff_AVar.putVar(message))(v));
                      });
                  };
              };
              var handlePending = function (ref) {
                  return function __do() {
                      var v = Control_Monad_Eff_Ref.readRef(ref)();
                      Control_Monad_Eff_Ref.writeRef(ref)(Data_Maybe.Nothing.value)();
                      return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(v)(function ($63) {
                          return handleAff(Data_Foldable.traverse_(Control_Monad_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_List.reverse($63)));
                      })();
                  };
              };
              var cleanupSubscriptions = function (v) {
                  return function __do() {
                      Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(function ($64) {
                          return handleAff(Data_Foldable.traverse_(Control_Monad_Aff.applicativeAff)(Data_Map.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))($64));
                      }))(Control_Monad_Eff_Ref.readRef(v.subscriptions))();
                      return Control_Monad_Eff_Ref.writeRef(v.subscriptions)(Data_Maybe.Nothing.value)();
                  };
              };
              var squashChildInitializers = function (lchs) {
                  return function (preInits) {
                      return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                          var parentInitializer = Data_Functor.map(Data_Maybe.functorMaybe)(function ($65) {
                              return evalF(st.selfRef)(Halogen_Query_InputF.Query.create($65));
                          })(st.component.initializer);
                          return Control_Monad_Eff_Ref.modifyRef(lchs)(function (handlers) {
                              return {
                                  initializers: new Data_List_Types.Cons(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Parallel.parSequence_(Control_Monad_Aff.parallelAff)(Data_List_Types.foldableList)(Data_List.reverse(handlers.initializers)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Data_Foldable.sequence_(Control_Monad_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(parentInitializer))(function () {
                                          return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(function __do() {
                                              handlePending(st.pendingQueries)();
                                              return handlePending(st.pendingOuts)();
                                          });
                                      });
                                  }), preInits),
                                  finalizers: handlers.finalizers
                              };
                          });
                      });
                  };
              };
              var runComponent = function (lchs) {
                  return function (handler) {
                      return function (j) {
                          return function (prjQuery) {
                              return Halogen_Component.unComponent(function (c) {
                                  return function __do() {
                                      var v = newLifecycleHandlers();
                                      var v1 = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(prjQuery)(v)();
                                      var v2 = Control_Monad_Eff_Ref.readRef(lchs)();
                                      Control_Monad_Eff_Ref.writeRef(lchs)({
                                          initializers: Data_List_Types.Nil.value,
                                          finalizers: v2.finalizers
                                      })();
                                      Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Halogen_Aff_Driver_State.unDriverStateX(function ($66) {
                                          return render(lchs)((function (v3) {
                                              return v3.selfRef;
                                          })($66));
                                      }))(Control_Monad_Eff_Ref.readRef(v1))();
                                      Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(squashChildInitializers(lchs)(v2.initializers))(Control_Monad_Eff_Ref.readRef(v1))();
                                      return v1;
                                  };
                              });
                          };
                      };
                  };
              };
              var renderChild = function (lchs) {
                  return function (handler) {
                      return function (mkOrdBox) {
                          return function (childrenInRef) {
                              return function (childrenOutRef) {
                                  return Halogen_Component.unComponentSlot(function (p) {
                                      return function (ctor) {
                                          return function (input) {
                                              return function (inputQuery) {
                                                  return function (outputQuery) {
                                                      return function (prjQuery) {
                                                          var ordP = mkOrdBox(p);
                                                          return function __do() {
                                                              var v = Control_Monad_Eff_Ref.readRef(childrenInRef)();
                                                              var v1 = (function () {
                                                                  var v1 = Data_Map.pop(Halogen_Data_OrdBox.ordOrdBox)(ordP)(v);
                                                                  if (v1 instanceof Data_Maybe.Just) {
                                                                      return function __do() {
                                                                          Control_Monad_Eff_Ref.writeRef(childrenInRef)(v1.value0.value1)();
                                                                          Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(inputQuery(input))(function (q) {
                                                                              return function __do() {
                                                                                  var v2 = Control_Monad_Eff_Ref.readRef(v1.value0.value0)();
                                                                                  return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                                                                                      return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(st.prjQuery(q))(function ($67) {
                                                                                          return handleAff(evalF(st.selfRef)(Halogen_Query_InputF.Query.create($67)));
                                                                                      });
                                                                                  })(v2)();
                                                                              };
                                                                          })();
                                                                          return v1.value0.value0;
                                                                      };
                                                                  };
                                                                  if (v1 instanceof Data_Maybe.Nothing) {
                                                                      return runComponent(lchs)(function ($68) {
                                                                          return Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit))(handler)(outputQuery($68));
                                                                      })(input)(prjQuery)(ctor);
                                                                  };
                                                                  throw new Error("Failed pattern match at Halogen.Aff.Driver line 260, column 14 - line 268, column 92: " + [ v1.constructor.name ]);
                                                              })()();
                                                              var v2 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Map.member(Halogen_Data_OrdBox.ordOrdBox)(ordP))(Control_Monad_Eff_Ref.readRef(childrenOutRef))();
                                                              Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v2)(Control_Monad_Eff_Unsafe.unsafeCoerceEff(Control_Monad_Eff_Console.warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur")))();
                                                              Control_Monad_Eff_Ref.modifyRef(childrenOutRef)(Data_Map.insert(Halogen_Data_OrdBox.ordOrdBox)(ordP)(v1))();
                                                              return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_Ref.readRef(v1))(Halogen_Aff_Driver_State.renderStateX(Control_Monad_Eff.functorEff)(function (v3) {
                                                                  if (v3 instanceof Data_Maybe.Nothing) {
                                                                      return Control_Monad_Eff_Exception["throw"]("Halogen internal error: child was not initialized in renderChild");
                                                                  };
                                                                  if (v3 instanceof Data_Maybe.Just) {
                                                                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(renderSpec.renderChild(v3.value0));
                                                                  };
                                                                  throw new Error("Failed pattern match at Halogen.Aff.Driver line 274, column 36 - line 276, column 50: " + [ v3.constructor.name ]);
                                                              }))();
                                                          };
                                                      };
                                                  };
                                              };
                                          };
                                      };
                                  });
                              };
                          };
                      };
                  };
              };
              var render = function (lchs) {
                  return function ($$var) {
                      return function __do() {
                          var v = Control_Monad_Eff_Ref.readRef($$var)();
                          var v1 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Maybe.isNothing)(Control_Monad_Eff_Ref.readRef(v.pendingHandlers))();
                          Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v1)(Control_Monad_Eff_Ref.writeRef(v.pendingHandlers)(new Data_Maybe.Just(Data_List_Types.Nil.value)))();
                          Control_Monad_Eff_Ref.writeRef(v.childrenOut)(Data_Map.empty)();
                          Control_Monad_Eff_Ref.writeRef(v.childrenIn)(v.children)();
                          var handler = Halogen_Aff_Driver_Eval.queuingHandler(function ($69) {
                              return Data_Functor["void"](Control_Monad_Aff.functorAff)(evalF(v.selfRef)($69));
                          })(v.pendingHandlers);
                          var childHandler = Halogen_Aff_Driver_Eval.queuingHandler(function ($70) {
                              return handler(Halogen_Query_InputF.Query.create($70));
                          })(v.pendingQueries);
                          var v2 = renderSpec.render(function ($71) {
                              return handleAff(handler($71));
                          })(renderChild(lchs)(childHandler)(v.component.mkOrdBox)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
                          var v3 = Control_Monad_Eff_Ref.readRef(v.childrenOut)();
                          Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_Ref.readRef(v.childrenIn))(Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Map.foldableMap)(function (childVar) {
                              return function __do() {
                                  var v4 = Control_Monad_Eff_Ref.readRef(childVar)();
                                  Halogen_Aff_Driver_State.renderStateX_(Control_Monad_Eff.applicativeEff)(renderSpec.removeChild)(v4)();
                                  return finalize(lchs)(v4)();
                              };
                          }))();
                          Control_Monad_Eff_Ref.modifyRef(v.selfRef)(function (v4) {
                              return {
                                  rendering: new Data_Maybe.Just(v2),
                                  children: v3,
                                  component: v4.component,
                                  state: v4.state,
                                  refs: v4.refs,
                                  childrenIn: v4.childrenIn,
                                  childrenOut: v4.childrenOut,
                                  selfRef: v4.selfRef,
                                  handler: v4.handler,
                                  pendingQueries: v4.pendingQueries,
                                  pendingOuts: v4.pendingOuts,
                                  pendingHandlers: v4.pendingHandlers,
                                  prjQuery: v4.prjQuery,
                                  fresh: v4.fresh,
                                  subscriptions: v4.subscriptions,
                                  lifecycleHandlers: v4.lifecycleHandlers
                              };
                          })();
                          return Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v1)(Data_Function.flip(Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEff))(Data_Unit.unit)(function (v4) {
                              return function __do() {
                                  var v5 = Control_Monad_Eff_Ref.readRef(v.pendingHandlers)();
                                  Control_Monad_Eff_Ref.writeRef(v.pendingHandlers)(new Data_Maybe.Just(Data_List_Types.Nil.value))();
                                  Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(function ($72) {
                                      return handleAff(Data_Foldable.traverse_(Control_Monad_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_List.reverse($72)));
                                  })(v5)();
                                  var v6 = Control_Monad_Eff_Ref.readRef(v.pendingHandlers)();
                                  var $57 = Data_Maybe.maybe(false)(Data_List["null"])(v6);
                                  if ($57) {
                                      return Data_Functor.voidLeft(Control_Monad_Eff.functorEff)(Control_Monad_Eff_Ref.writeRef(v.pendingHandlers)(Data_Maybe.Nothing.value))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();
                                  };
                                  return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);
                              };
                          }))();
                      };
                  };
              };
              var finalize = function (lchs) {
                  return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                      return function __do() {
                          cleanupSubscriptions(st)();
                          Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function ($73) {
                              return evalF(st.selfRef)(Halogen_Query_InputF.Query.create($73));
                          })(st.component.finalizer))(function (f) {
                              return Control_Monad_Eff_Ref.modifyRef(lchs)(function (handlers) {
                                  return {
                                      initializers: handlers.initializers,
                                      finalizers: new Data_List_Types.Cons(f, handlers.finalizers)
                                  };
                              });
                          })();
                          return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Map.foldableMap)(st.children)(Control_Bind.composeKleisliFlipped(Control_Monad_Eff.bindEff)(finalize(lchs))(Control_Monad_Eff_Ref.readRef))();
                      };
                  });
              };
              var evalF = function (ref) {
                  return Halogen_Aff_Driver_Eval["eval"](render)(ref);
              };
              var evalDriver = function (ref) {
                  return function (prjQuery) {
                      return function (q) {
                          var v = prjQuery(q);
                          if (v instanceof Data_Maybe.Just) {
                              return evalF(ref)(new Halogen_Query_InputF.Query(v.value0));
                          };
                          if (v instanceof Data_Maybe.Nothing) {
                              return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Halogen internal error: query projection failed in runUI'")));
                          };
                          throw new Error("Failed pattern match at Halogen.Aff.Driver line 138, column 5 - line 140, column 110: " + [ v.constructor.name ]);
                      };
                  };
              };
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(newLifecycleHandlers))(function (v) {
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.newRef(0)))(function (v1) {
                      return Halogen_Aff_Driver_Eval.handleLifecycle(v)(function __do() {
                          var v2 = Control_Monad_Eff_Ref.newRef(Data_Map.empty)();
                          return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(runComponent(v)(rootHandler(v2))(i)(Data_Maybe.Just.create)(component))(Control_Monad_Eff_Ref.readRef))(Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)({
                                  query: evalDriver(st.selfRef)(st.prjQuery),
                                  subscribe: subscribe(v1)(v2)
                              });
                          }))();
                      });
                  });
              });
          };
      };
  };
  exports["runUI"] = runUI;
})(PS["Halogen.Aff.Driver"] = PS["Halogen.Aff.Driver"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_Event_EventTarget = PS["DOM.Event.EventTarget"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Document = PS["DOM.HTML.Document"];
  var DOM_HTML_Document_ReadyState = PS["DOM.HTML.Document.ReadyState"];
  var DOM_HTML_Event_EventTypes = PS["DOM.HTML.Event.EventTypes"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var DOM_Node_ParentNode = PS["DOM.Node.ParentNode"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen_Aff_Effects = PS["Halogen.Aff.Effects"];
  var Prelude = PS["Prelude"];        
  var selectElement = function (query) {
      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Control_Bind.composeKleisliFlipped(Control_Monad_Eff.bindEff)(function ($13) {
          return DOM_Node_ParentNode.querySelector(query)(DOM_HTML_Types.htmlDocumentToParentNode($13));
      })(DOM_HTML_Window.document))(DOM_HTML.window)))(function (v) {
          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)((function () {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Maybe.Nothing.value;
              };
              if (v instanceof Data_Maybe.Just) {
                  return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Control_Monad_Except.runExcept(DOM_HTML_Types.readHTMLElement(Data_Foreign.toForeign(v.value0))));
              };
              throw new Error("Failed pattern match at Halogen.Aff.Util line 59, column 8 - line 61, column 88: " + [ v.constructor.name ]);
          })());
      });
  };
  var runHalogenAff = Control_Monad_Aff.runAff_(Data_Either.either(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit))));
  var awaitLoad = Control_Monad_Aff.makeAff(function (callback) {
      return Control_Monad_Eff_Class.liftEff(Control_Monad_Eff_Class.monadEffEff)(function __do() {
          var v = Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(DOM_HTML_Document.readyState)(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(DOM_HTML_Window.document)(DOM_HTML.window))();
          if (v instanceof DOM_HTML_Document_ReadyState.Loading) {
              var v1 = Data_Functor.map(Control_Monad_Eff.functorEff)(DOM_HTML_Types.windowToEventTarget)(DOM_HTML.window)();
              var listener = DOM_Event_EventTarget.eventListener(function (v2) {
                  return callback(new Data_Either.Right(Data_Unit.unit));
              });
              DOM_Event_EventTarget.addEventListener("DOMContentLoaded")(listener)(false)(v1)();
              return function (v2) {
                  return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(DOM_Event_EventTarget.removeEventListener(DOM_HTML_Event_EventTypes.load)(listener)(false)(v1));
              };
          };
          callback(new Data_Either.Right(Data_Unit.unit))();
          return Control_Monad_Aff.nonCanceler;
      });
  });
  var awaitBody = Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(awaitLoad)(function () {
      return Control_Bind.bind(Control_Monad_Aff.bindAff)(selectElement("body"))(function (v) {
          return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error("Could not find body")))(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(v);
      });
  });
  exports["awaitLoad"] = awaitLoad;
  exports["awaitBody"] = awaitBody;
  exports["selectElement"] = selectElement;
  exports["runHalogenAff"] = runHalogenAff;
})(PS["Halogen.Aff.Util"] = PS["Halogen.Aff.Util"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Either = PS["Data.Either"];
  var Data_Either_Nested = PS["Data.Either.Nested"];
  var Data_Functor_Coproduct = PS["Data.Functor.Coproduct"];
  var Data_Functor_Coproduct_Nested = PS["Data.Functor.Coproduct.Nested"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Prism = PS["Data.Lens.Prism"];
  var Data_Maybe = PS["Data.Maybe"];
  var _Either4 = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Data_Either_Nested.in4)(Data_Either_Nested.at4(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };
  var _Either3 = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Data_Either_Nested.in3)(Data_Either_Nested.at3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };
  var _Either2 = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Data_Either_Nested.in2)(Data_Either_Nested.at2(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };
  var _Either1 = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Data_Either_Nested.in1)(Data_Either_Nested.at1(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };
  var _Coproduct4 = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in4)(Data_Functor_Coproduct_Nested.at4(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };
  var _Coproduct3 = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in3)(Data_Functor_Coproduct_Nested.at3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };
  var _Coproduct2 = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in2)(Data_Functor_Coproduct_Nested.at2(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };
  var _Coproduct1 = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in1)(Data_Functor_Coproduct_Nested.at1(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };
  exports["_Either1"] = _Either1;
  exports["_Coproduct1"] = _Coproduct1;
  exports["_Either2"] = _Either2;
  exports["_Coproduct2"] = _Coproduct2;
  exports["_Either3"] = _Either3;
  exports["_Coproduct3"] = _Coproduct3;
  exports["_Either4"] = _Either4;
  exports["_Coproduct4"] = _Coproduct4;
})(PS["Halogen.Data.Prism"] = PS["Halogen.Data.Prism"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Fold = PS["Data.Lens.Fold"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Tagged = PS["Data.Lens.Internal.Tagged"];
  var Data_Lens_Prism = PS["Data.Lens.Prism"];
  var Data_Lens_Prism_Coproduct = PS["Data.Lens.Prism.Coproduct"];
  var Data_Lens_Prism_Either = PS["Data.Lens.Prism.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Halogen_Data_Prism = PS["Halogen.Data.Prism"];
  var Prelude = PS["Prelude"];        
  var ChildPath = (function () {
      function ChildPath(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChildPath.create = function (value0) {
          return function (value1) {
              return new ChildPath(value0, value1);
          };
      };
      return ChildPath;
  })();
  var prjQuery = function (v) {
      return Data_Lens_Fold.preview(v.value0(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst)));
  };
  var injSlot = function (v) {
      return Data_Lens_Prism.review(v.value1(Data_Lens_Internal_Tagged.taggedChoice));
  };
  var injQuery = function (v) {
      return Data_Lens_Prism.review(v.value0(Data_Lens_Internal_Tagged.taggedChoice));
  }; 
  var cp4 = new ChildPath(function (dictChoice) {
      return Halogen_Data_Prism._Coproduct4(dictChoice);
  }, function (dictChoice) {
      return Halogen_Data_Prism._Either4(dictChoice);
  });
  var cp3 = new ChildPath(function (dictChoice) {
      return Halogen_Data_Prism._Coproduct3(dictChoice);
  }, function (dictChoice) {
      return Halogen_Data_Prism._Either3(dictChoice);
  });
  var cp2 = new ChildPath(function (dictChoice) {
      return Halogen_Data_Prism._Coproduct2(dictChoice);
  }, function (dictChoice) {
      return Halogen_Data_Prism._Either2(dictChoice);
  });
  var cp1 = new ChildPath(function (dictChoice) {
      return Halogen_Data_Prism._Coproduct1(dictChoice);
  }, function (dictChoice) {
      return Halogen_Data_Prism._Either1(dictChoice);
  });
  exports["ChildPath"] = ChildPath;
  exports["cp1"] = cp1;
  exports["cp2"] = cp2;
  exports["cp3"] = cp3;
  exports["cp4"] = cp4;
  exports["injQuery"] = injQuery;
  exports["injSlot"] = injSlot;
  exports["prjQuery"] = prjQuery;
})(PS["Halogen.Component.ChildPath"] = PS["Halogen.Component.ChildPath"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_HTML_Indexed = PS["DOM.HTML.Indexed"];
  var DOM_HTML_Indexed_ButtonType = PS["DOM.HTML.Indexed.ButtonType"];
  var DOM_HTML_Indexed_FormMethod = PS["DOM.HTML.Indexed.FormMethod"];
  var DOM_HTML_Indexed_InputType = PS["DOM.HTML.Indexed.InputType"];
  var DOM_HTML_Indexed_MenuType = PS["DOM.HTML.Indexed.MenuType"];
  var DOM_HTML_Indexed_MenuitemType = PS["DOM.HTML.Indexed.MenuitemType"];
  var DOM_HTML_Indexed_OnOff = PS["DOM.HTML.Indexed.OnOff"];
  var DOM_HTML_Indexed_OrderedListType = PS["DOM.HTML.Indexed.OrderedListType"];
  var DOM_HTML_Indexed_PreloadValue = PS["DOM.HTML.Indexed.PreloadValue"];
  var DOM_HTML_Indexed_StepValue = PS["DOM.HTML.Indexed.StepValue"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_MediaType = PS["Data.MediaType"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_String = PS["Data.String"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Halogen_VDom_DOM_Prop = PS["Halogen.VDom.DOM.Prop"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var prop = function (dictIsProp) {
      return Halogen_HTML_Core.prop(dictIsProp);
  };                                                                   
  var src = prop(Halogen_HTML_Core.stringIsProp)("src");     
  var tabIndex = prop(Halogen_HTML_Core.intIsProp)("tabIndex");
  var type_ = function (dictIsProp) {
      return prop(dictIsProp)("type");
  };
  var value = prop(Halogen_HTML_Core.stringIsProp)("value");  
  var placeholder = prop(Halogen_HTML_Core.stringIsProp)("placeholder");
  var name = prop(Halogen_HTML_Core.stringIsProp)("name");         
  var min = prop(Halogen_HTML_Core.numberIsProp)("min");          
  var max = prop(Halogen_HTML_Core.numberIsProp)("max");   
  var id_ = prop(Halogen_HTML_Core.stringIsProp)("id");
  var href = prop(Halogen_HTML_Core.stringIsProp)("href");
  var $$for = prop(Halogen_HTML_Core.stringIsProp)("htmlFor");
  var classes = function ($12) {
      return prop(Halogen_HTML_Core.stringIsProp)("className")(Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName))($12)));
  };
  var class_ = function ($13) {
      return prop(Halogen_HTML_Core.stringIsProp)("className")(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName)($13));
  };
  var attr = Halogen_HTML_Core.attr(Data_Maybe.Nothing.value);
  exports["prop"] = prop;
  exports["attr"] = attr;
  exports["class_"] = class_;
  exports["classes"] = classes;
  exports["for"] = $$for;
  exports["href"] = href;
  exports["id_"] = id_;
  exports["name"] = name;
  exports["src"] = src;
  exports["type_"] = type_;
  exports["value"] = value;
  exports["min"] = min;
  exports["max"] = max;
  exports["placeholder"] = placeholder;
  exports["tabIndex"] = tabIndex;
})(PS["Halogen.HTML.Properties"] = PS["Halogen.HTML.Properties"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_HTML_Indexed = PS["DOM.HTML.Indexed"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Halogen_VDom = PS["Halogen.VDom"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var element = Halogen_HTML_Core.element(Data_Maybe.Nothing.value);
  var form = element("form");
  var h1 = element("h1");
  var h2 = element("h2");
  var h3 = element("h3");
  var header = element("header");
  var img = function (props) {
      return element("img")(props)([  ]);
  };
  var input = function (props) {
      return element("input")(props)([  ]);
  };                   
  var label = element("label");
  var li = element("li");
  var li_ = li([  ]);      
  var nav = element("nav");  
  var p = element("p");
  var p_ = p([  ]);
  var span = element("span");
  var span_ = span([  ]);
  var table = element("table");
  var table_ = table([  ]);
  var td = element("td");  
  var th = element("th");  
  var tr = element("tr");
  var tr_ = tr([  ]);
  var ul = element("ul");
  var ul_ = ul([  ]);
  var div = element("div");
  var div_ = div([  ]);
  var button = element("button");
  var body = element("body");
  var aside = element("aside");
  var a = element("a");
  exports["element"] = element;
  exports["a"] = a;
  exports["aside"] = aside;
  exports["body"] = body;
  exports["button"] = button;
  exports["div"] = div;
  exports["div_"] = div_;
  exports["form"] = form;
  exports["h1"] = h1;
  exports["h2"] = h2;
  exports["h3"] = h3;
  exports["header"] = header;
  exports["img"] = img;
  exports["input"] = input;
  exports["label"] = label;
  exports["li"] = li;
  exports["li_"] = li_;
  exports["nav"] = nav;
  exports["p"] = p;
  exports["p_"] = p_;
  exports["span"] = span;
  exports["span_"] = span_;
  exports["table"] = table;
  exports["table_"] = table_;
  exports["td"] = td;
  exports["th"] = th;
  exports["tr"] = tr;
  exports["tr_"] = tr_;
  exports["ul"] = ul;
  exports["ul_"] = ul_;
})(PS["Halogen.HTML.Elements"] = PS["Halogen.HTML.Elements"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_Component_ChildPath = PS["Halogen.Component.ChildPath"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var slot$prime = function (i) {
      return function (p) {
          return function (component) {
              return function (input) {
                  return function (outputQuery) {
                      var pq = Halogen_Component_ChildPath.prjQuery(i);
                      var f = function ($2) {
                          return Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Component_ChildPath.injQuery(i))(Halogen_Component.unComponent(function (v) {
                              return v.receiver;
                          })(component)($2));
                      };
                      return Halogen_HTML_Core.slot(Halogen_Component.mkComponentSlot(Halogen_Component_ChildPath.injSlot(i)(p))(component)(input)(f)(outputQuery)(pq));
                  };
              };
          };
      };
  };
  var slot = function (p) {
      return function (component) {
          return function (input) {
              return function (outputQuery) {
                  var f = Halogen_Component.unComponent(function (v) {
                      return v.receiver;
                  })(component);
                  return Halogen_HTML_Core.slot(Halogen_Component.mkComponentSlot(p)(component)(input)(f)(outputQuery)(Data_Maybe.Just.create));
              };
          };
      };
  };
  var fromPlainHTML = Unsafe_Coerce.unsafeCoerce;
  exports["fromPlainHTML"] = fromPlainHTML;
  exports["slot"] = slot;
  exports["slot'"] = slot$prime;
})(PS["Halogen.HTML"] = PS["Halogen.HTML"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Aff_Class = PS["Control.Monad.Aff.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen_Component_ChildPath = PS["Halogen.Component.ChildPath"];
  var Halogen_Query_EventSource = PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Prelude = PS["Prelude"];
  var query = function (dictEq) {
      return function (p) {
          return function (q) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.checkSlot(p))(function (v) {
                  if (v) {
                      return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Maybe.Just.create)(Halogen_Query_HalogenM.mkQuery(dictEq)(p)(q));
                  };
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value);
              });
          };
      };
  };
  var query$prime = function (dictEq) {
      return function (path) {
          return function (p) {
              return function (q) {
                  return query(dictEq)(Halogen_Component_ChildPath.injSlot(path)(p))(Halogen_Component_ChildPath.injQuery(path)(q));
              };
          };
      };
  };   
  var action = function (act) {
      return act(Data_Unit.unit);
  };
  exports["action"] = action;
  exports["query"] = query;
  exports["query'"] = query$prime;
})(PS["Halogen.Query"] = PS["Halogen.Query"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_Event_Event = PS["DOM.Event.Event"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_HTML_Event_EventTypes = PS["DOM.HTML.Event.EventTypes"];
  var DOM_HTML_Event_Types = PS["DOM.HTML.Event.Types"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query = PS["Halogen.Query"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];      
  var mouseHandler = Unsafe_Coerce.unsafeCoerce;
  var keyHandler = Unsafe_Coerce.unsafeCoerce;
  var input_ = function (f) {
      return function (v) {
          return Data_Maybe.Just.create(Halogen_Query.action(f));
      };
  };
  var input = function (f) {
      return function (x) {
          return Data_Maybe.Just.create(Halogen_Query.action(f(x)));
      };
  };
  var handler = function (et) {
      return function ($1) {
          return Halogen_HTML_Core.handler(et)(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Query_InputF.Query.create))($1));
      };
  };                                                       
  var onClick = function ($2) {
      return handler(DOM_HTML_Event_EventTypes.click)(mouseHandler($2));
  };                                                         
  var onKeyDown = function ($5) {
      return handler(DOM_HTML_Event_EventTypes.keydown)(keyHandler($5));
  };                                                   
  var onMouseDown = function ($8) {
      return handler(DOM_HTML_Event_EventTypes.mousedown)(mouseHandler($8));
  };
  var onMouseOver = function ($13) {
      return handler(DOM_HTML_Event_EventTypes.mouseover)(mouseHandler($13));
  };
  var onMouseUp = function ($14) {
      return handler(DOM_HTML_Event_EventTypes.mouseup)(mouseHandler($14));
  };                                                       
  var onSubmit = handler(DOM_HTML_Event_EventTypes.submit);
  var focusHandler = Unsafe_Coerce.unsafeCoerce;
  var onBlur = function ($22) {
      return handler(DOM_HTML_Event_EventTypes.blur)(focusHandler($22));
  };
  var onFocus = function ($23) {
      return handler(DOM_HTML_Event_EventTypes.focus)(focusHandler($23));
  };
  var addForeignPropHandler = function (key) {
      return function (prop) {
          return function (reader) {
              return function (f) {
                  return handler(key)(function ($37) {
                      return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(f)(Control_Monad_Except.runExcept(Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(reader)(Data_Foreign_Index.readProp(prop))(Data_Foreign.toForeign(DOM_Event_Event.currentTarget($37)))));
                  });
              };
          };
      };
  };                                                                                                            
  var onValueInput = addForeignPropHandler(DOM_HTML_Event_EventTypes.input)("value")(Data_Foreign.readString);
  exports["input"] = input;
  exports["input_"] = input_;
  exports["handler"] = handler;
  exports["onSubmit"] = onSubmit;
  exports["onClick"] = onClick;
  exports["onMouseDown"] = onMouseDown;
  exports["onMouseOver"] = onMouseOver;
  exports["onMouseUp"] = onMouseUp;
  exports["onKeyDown"] = onKeyDown;
  exports["onBlur"] = onBlur;
  exports["onFocus"] = onFocus;
  exports["onValueInput"] = onValueInput;
})(PS["Halogen.HTML.Events"] = PS["Halogen.HTML.Events"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];     
  var label = Halogen_HTML_Properties.attr("aria-label");    
  var hidden = Halogen_HTML_Properties.attr("aria-hidden");
  exports["hidden"] = hidden;
  exports["label"] = label;
})(PS["Halogen.HTML.Properties.ARIA"] = PS["Halogen.HTML.Properties.ARIA"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Const = PS["Data.Const"];
  var Data_Coyoneda = PS["Data.Coyoneda"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Prelude = PS["Prelude"];
  var proxyEval = function (evalQuery) {
      return function (component) {
          var render = function (i) {
              return Halogen_HTML.slot(Data_Unit.unit)(component)(i)(Data_Function["const"](Data_Maybe.Nothing.value));
          };
          var $$eval = function (v) {
              return Data_Coyoneda.unCoyoneda(evalQuery)(v.value0);
          };
          return Halogen_Component.parentComponent(Data_Ord.ordUnit)({
              initialState: Control_Category.id(Control_Category.categoryFn),
              render: render,
              "eval": $$eval,
              receiver: Data_Function["const"](Data_Maybe.Nothing.value)
          });
      };
  };
  var proxy = proxyEval(Data_Function["const"](function ($3) {
      return Data_Void.absurd(Data_Newtype.un(Data_Const.newtypeConst)(Data_Const.Const)($3));
  }));
  exports["proxy"] = proxy;
})(PS["Halogen.Storybook.Proxy"] = PS["Halogen.Storybook.Proxy"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Halogen_VDom_Machine = PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Halogen_VDom_Util = PS["Halogen.VDom.Util"];
  var Prelude = PS["Prelude"];
  var eqElemSpec = function (a, b) {
      if (Data_Eq.eq(Halogen_VDom_Types.eqElemName)(a.value1)(b.value1)) {
          if (a.value0 instanceof Data_Maybe.Just && (b.value0 instanceof Data_Maybe.Just && a.value0.value0 === b.value0.value0)) {
              return true;
          };
          if (a.value0 instanceof Data_Maybe.Nothing && b.value0 instanceof Data_Maybe.Nothing) {
              return true;
          };
          return false;
      };
      return false;
  };
  var buildWidget = function (v) {
      var patch = function (v1) {
          return function (v2) {
              if (v2 instanceof Halogen_VDom_Types.Grafted) {
                  return patch(v1)(Halogen_VDom_Types.runGraft(v2.value0));
              };
              if (v2 instanceof Halogen_VDom_Types.Widget) {
                  return function __do() {
                      var v3 = v1.value1(v2.value0)();
                      return new Halogen_VDom_Machine.Step(v3.value0, patch(v3), v3.value2);
                  };
              };
              return function __do() {
                  v1.value2();
                  return buildVDom(v)(v2)();
              };
          };
      };
      var render = function (w) {
          return function __do() {
              var v1 = v.buildWidget(v)(w)();
              return new Halogen_VDom_Machine.Step(v1.value0, patch(v1), v1.value2);
          };
      };
      return render;
  };
  var buildVDom = function (spec) {
      var render = function (v) {
          if (v instanceof Halogen_VDom_Types.Text) {
              return buildText(spec)(v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Elem) {
              return buildElem(spec)(v.value0)(v.value1);
          };
          if (v instanceof Halogen_VDom_Types.Keyed) {
              return buildKeyed(spec)(v.value0)(v.value1);
          };
          if (v instanceof Halogen_VDom_Types.Widget) {
              return buildWidget(spec)(v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Grafted) {
              return buildVDom(spec)(Halogen_VDom_Types.runGraft(v.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.DOM line 58, column 12 - line 63, column 44: " + [ v.constructor.name ]);
      };
      return render;
  };
  var buildText = function (v) {
      var done = function (node) {
          return function __do() {
              var v1 = Halogen_VDom_Util.unsafeParent(node);
              return Halogen_VDom_Util.removeChild(node, v1)();
          };
      };
      var patch = function (node, s1) {
          return function (v1) {
              if (v1 instanceof Halogen_VDom_Types.Grafted) {
                  return patch(node, s1)(Halogen_VDom_Types.runGraft(v1.value0));
              };
              if (v1 instanceof Halogen_VDom_Types.Text) {
                  var res = new Halogen_VDom_Machine.Step(node, patch(node, v1.value0), done(node));
                  var v2 = s1 === v1.value0;
                  if (v2) {
                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(res);
                  };
                  return function __do() {
                      Halogen_VDom_Util.setTextContent(v1.value0, node)();
                      return res;
                  };
              };
              return function __do() {
                  done(node)();
                  return buildVDom(v)(v1)();
              };
          };
      };
      var render = function (s) {
          return function __do() {
              var v1 = Halogen_VDom_Util.createTextNode(s, v.document)();
              return new Halogen_VDom_Machine.Step(v1, patch(v1, s), done(v1));
          };
      };
      return render;
  };
  var buildKeyed = function (v) {
      var done = function (node, attrs, steps) {
          return function __do() {
              var v1 = Halogen_VDom_Util.unsafeParent(node);
              Halogen_VDom_Util.removeChild(node, v1)();
              Halogen_VDom_Util.forInE(steps, function (v2, v3) {
                  return v3.value2;
              })();
              return Halogen_VDom_Machine.halt(attrs)();
          };
      };
      var patch = function (node, attrs, v1, ch1, len1) {
          return function (v2) {
              if (v2 instanceof Halogen_VDom_Types.Grafted) {
                  return patch(node, attrs, v1, ch1, len1)(Halogen_VDom_Types.runGraft(v2.value0));
              };
              if (v2 instanceof Halogen_VDom_Types.Keyed && eqElemSpec(v1, v2.value0)) {
                  var v3 = Data_Array.length(v2.value1);
                  if (len1 === 0 && v3 === 0) {
                      return function __do() {
                          var v5 = Halogen_VDom_Machine.step(attrs)(v2.value0.value2)();
                          return new Halogen_VDom_Machine.Step(node, patch(node, v5, v2.value0, ch1, 0), done(node, v5, ch1));
                      };
                  };
                  var onThis = function (k, v5) {
                      return v5.value2;
                  };
                  var onThese = function (k, ix$prime, v5, v6) {
                      return function __do() {
                          var v7 = v5.value1(v6.value1)();
                          Halogen_VDom_Util.insertChildIx(ix$prime, v7.value0, node)();
                          return v7;
                      };
                  };
                  var onThat = function (k, ix, v5) {
                      return function __do() {
                          var v6 = buildVDom(v)(v5.value1)();
                          Halogen_VDom_Util.insertChildIx(ix, v6.value0, node)();
                          return v6;
                      };
                  };
                  return function __do() {
                      var v5 = Halogen_VDom_Util.diffWithKeyAndIxE(ch1, v2.value1, Data_Tuple.fst, onThese, onThis, onThat)();
                      var v6 = Halogen_VDom_Machine.step(attrs)(v2.value0.value2)();
                      return new Halogen_VDom_Machine.Step(node, patch(node, v6, v2.value0, v5, v3), done(node, v6, v5));
                  };
              };
              return function __do() {
                  done(node, attrs, ch1)();
                  return buildVDom(v)(v2)();
              };
          };
      };
      var render = function (v1) {
          return function (ch1) {
              return function __do() {
                  var v2 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(v1.value0), v1.value1, v.document)();
                  var node = DOM_Node_Types.elementToNode(v2);
                  var onChild = function (k, ix, v3) {
                      return function __do() {
                          var v4 = buildVDom(v)(v3.value1)();
                          Halogen_VDom_Util.insertChildIx(ix, v4.value0, node)();
                          return v4;
                      };
                  };
                  var v3 = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild)();
                  var v4 = v.buildAttributes(v2)(v1.value2)();
                  return new Halogen_VDom_Machine.Step(node, patch(node, v4, v1, v3, Data_Array.length(ch1)), done(node, v4, v3));
              };
          };
      };
      return render;
  };
  var buildElem = function (v) {
      var done = function (node, attrs, steps) {
          return function __do() {
              var v1 = Halogen_VDom_Util.unsafeParent(node);
              Halogen_VDom_Util.removeChild(node, v1)();
              Control_Monad_Eff.foreachE(steps)(Halogen_VDom_Machine.halt)();
              return Halogen_VDom_Machine.halt(attrs)();
          };
      };
      var patch = function (node, attrs, v1, ch1) {
          return function (v2) {
              if (v2 instanceof Halogen_VDom_Types.Grafted) {
                  return patch(node, attrs, v1, ch1)(Halogen_VDom_Types.runGraft(v2.value0));
              };
              if (v2 instanceof Halogen_VDom_Types.Elem && eqElemSpec(v1, v2.value0)) {
                  var v3 = Data_Array.length(v2.value1);
                  var v4 = Data_Array.length(ch1);
                  if (v4 === 0 && v3 === 0) {
                      return function __do() {
                          var v5 = Halogen_VDom_Machine.step(attrs)(v2.value0.value2)();
                          return new Halogen_VDom_Machine.Step(node, patch(node, v5, v2.value0, ch1), done(node, v5, ch1));
                      };
                  };
                  var onThis = function (ix, v5) {
                      return v5.value2;
                  };
                  var onThese = function (ix, v5, vdom) {
                      return function __do() {
                          var v6 = v5.value1(vdom)();
                          Halogen_VDom_Util.insertChildIx(ix, v6.value0, node)();
                          return v6;
                      };
                  };
                  var onThat = function (ix, vdom) {
                      return function __do() {
                          var v5 = buildVDom(v)(vdom)();
                          Halogen_VDom_Util.insertChildIx(ix, v5.value0, node)();
                          return v5;
                      };
                  };
                  return function __do() {
                      var v5 = Halogen_VDom_Util.diffWithIxE(ch1, v2.value1, onThese, onThis, onThat)();
                      var v6 = Halogen_VDom_Machine.step(attrs)(v2.value0.value2)();
                      return new Halogen_VDom_Machine.Step(node, patch(node, v6, v2.value0, v5), done(node, v6, v5));
                  };
              };
              return function __do() {
                  done(node, attrs, ch1)();
                  return buildVDom(v)(v2)();
              };
          };
      };
      var render = function (v1) {
          return function (ch1) {
              return function __do() {
                  var v2 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(v1.value0), v1.value1, v.document)();
                  var node = DOM_Node_Types.elementToNode(v2);
                  var onChild = function (ix, child) {
                      return function __do() {
                          var v3 = buildVDom(v)(child)();
                          Halogen_VDom_Util.insertChildIx(ix, v3.value0, node)();
                          return v3;
                      };
                  };
                  var v3 = Halogen_VDom_Util.forE(ch1, onChild)();
                  var v4 = v.buildAttributes(v2)(v1.value2)();
                  return new Halogen_VDom_Machine.Step(node, patch(node, v4, v1, v3), done(node, v4, v3));
              };
          };
      };
      return render;
  };
  exports["buildVDom"] = buildVDom;
  exports["buildText"] = buildText;
  exports["buildElem"] = buildElem;
  exports["buildKeyed"] = buildKeyed;
  exports["buildWidget"] = buildWidget;
})(PS["Halogen.VDom.DOM"] = PS["Halogen.VDom.DOM"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var DOM = PS["DOM"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var DOM_Node_Node = PS["DOM.Node.Node"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen_Aff_Driver = PS["Halogen.Aff.Driver"];
  var Halogen_Aff_Driver_State = PS["Halogen.Aff.Driver.State"];
  var Halogen_Aff_Effects = PS["Halogen.Aff.Effects"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Halogen_VDom = PS["Halogen.VDom"];
  var Halogen_VDom_DOM = PS["Halogen.VDom.DOM"];
  var Halogen_VDom_DOM_Prop = PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Machine = PS["Halogen.VDom.Machine"];
  var Prelude = PS["Prelude"];
  var Unsafe_Reference = PS["Unsafe.Reference"];
  var substInParent = function (v) {
      return function (v1) {
          return function (v2) {
              if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
                  return Data_Functor["void"](Control_Monad_Eff.functorEff)(DOM_Node_Node.insertBefore(v)(v1.value0)(v2.value0));
              };
              if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) {
                  return Data_Functor["void"](Control_Monad_Eff.functorEff)(DOM_Node_Node.appendChild(v)(v2.value0));
              };
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
          };
      };
  };
  var removeChild = function (v) {
      return function __do() {
          var v1 = DOM_Node_Node.parentNode(v.node)();
          return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(function (pn) {
              return DOM_Node_Node.removeChild(v.node)(pn);
          })(v1)();
      };
  };
  var mkSpec = function (handler) {
      return function (renderChildRef) {
          return function (document) {
              var getNode = Halogen_Aff_Driver_State.unRenderStateX(function (v) {
                  return v.node;
              });
              var done = Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
              var patch = function (slot) {
                  return function __do() {
                      var v = Control_Monad_Eff_Ref.readRef(renderChildRef)();
                      var v1 = v(slot)();
                      var node = getNode(v1);
                      return new Halogen_VDom_Machine.Step(node, patch, done);
                  };
              };
              var buildWidget = function (spec) {
                  return function (slot) {
                      return function __do() {
                          var v = Control_Monad_Eff_Ref.readRef(renderChildRef)();
                          var v1 = v(slot)();
                          var node = getNode(v1);
                          return new Halogen_VDom_Machine.Step(node, patch, done);
                      };
                  };
              };
              var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);
              return {
                  buildWidget: buildWidget,
                  buildAttributes: buildAttributes,
                  document: document
              };
          };
      };
  };
  var renderSpec = function (document) {
      return function (container) {
          var render = function (handler) {
              return function (child) {
                  return function (v) {
                      return function (v1) {
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return function __do() {
                                  var v2 = Control_Monad_Eff_Ref.newRef(child)();
                                  var spec = mkSpec(handler)(v2)(document);
                                  var v3 = Halogen_VDom_DOM.buildVDom(spec)(v)();
                                  var node = Halogen_VDom_Machine.extract(v3);
                                  Data_Functor["void"](Control_Monad_Eff.functorEff)(DOM_Node_Node.appendChild(node)(DOM_HTML_Types.htmlElementToNode(container)))();
                                  return {
                                      machine: v3,
                                      node: node,
                                      renderChildRef: v2
                                  };
                              };
                          };
                          if (v1 instanceof Data_Maybe.Just) {
                              return function __do() {
                                  Control_Monad_Eff_Ref.writeRef(v1.value0.renderChildRef)(child)();
                                  var v2 = DOM_Node_Node.parentNode(v1.value0.node)();
                                  var v3 = DOM_Node_Node.nextSibling(v1.value0.node)();
                                  var v4 = Halogen_VDom_Machine.step(v1.value0.machine)(v)();
                                  var newNode = Halogen_VDom_Machine.extract(v4);
                                  Control_Applicative.when(Control_Monad_Eff.applicativeEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(v3)(v2))();
                                  return {
                                      machine: v4,
                                      node: newNode,
                                      renderChildRef: v1.value0.renderChildRef
                                  };
                              };
                          };
                          throw new Error("Failed pattern match at Halogen.VDom.Driver line 121, column 5 - line 137, column 80: " + [ v1.constructor.name ]);
                      };
                  };
              };
          };
          return {
              render: render,
              renderChild: Control_Category.id(Control_Category.categoryFn),
              removeChild: removeChild
          };
      };
  };
  var runUI = function (component) {
      return function (i) {
          return function (element) {
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Data_Functor.map(Control_Monad_Eff.functorEff)(DOM_HTML_Types.htmlDocumentToDocument)(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(DOM_HTML_Window.document)(DOM_HTML.window))))(function (v) {
                  return Halogen_Aff_Driver.runUI(renderSpec(v)(element))(component)(i);
              });
          };
      };
  };
  exports["runUI"] = runUI;
})(PS["Halogen.VDom.Driver"] = PS["Halogen.VDom.Driver"] || {});
(function(exports) {
  /* global exports */
  /* global XMLHttpRequest */
  /* global module */
  /* global process */
  "use strict";

  exports._ajax = function () {
    var platformSpecific = { };
    if (typeof module !== "undefined" && module.require && !(typeof process !== "undefined" && process.versions["electron"])) {
      // We are on node.js
      platformSpecific.newXHR = function () {
        var XHR = module.require("xhr2");
        return new XHR();
      };

      platformSpecific.fixupUrl = function (url) {
        var urllib = module.require("url");
        var u = urllib.parse(url);
        u.protocol = u.protocol || "http:";
        u.hostname = u.hostname || "localhost";
        return urllib.format(u);
      };

      platformSpecific.getResponse = function (xhr) {
        return xhr.response;
      };
    } else {
      // We are in the browser
      platformSpecific.newXHR = function () {
        return new XMLHttpRequest();
      };

      platformSpecific.fixupUrl = function (url) {
        return url || "/";
      };

      platformSpecific.getResponse = function (xhr) {
        return xhr.response;
      };
    }

    return function (mkHeader, options) {
      return function (errback, callback) {
        var xhr = platformSpecific.newXHR();
        var fixedUrl = platformSpecific.fixupUrl(options.url);
        xhr.open(options.method || "GET", fixedUrl, true, options.username, options.password);
        if (options.headers) {
          try {
            for (var i = 0, header; (header = options.headers[i]) != null; i++) {
              xhr.setRequestHeader(header.field, header.value);
            }
          } catch (e) {
            errback(e);
          }
        }
        xhr.onerror = function () {
          errback(new Error("AJAX request failed: " + options.method + " " + options.url));
        };
        xhr.onload = function () {
          callback({
            status: xhr.status,
            headers: xhr.getAllResponseHeaders().split("\r\n")
              .filter(function (header) {
                return header.length > 0;
              })
              .map(function (header) {
                var i = header.indexOf(":");
                return mkHeader(header.substring(0, i))(header.substring(i + 2));
              }),
            response: platformSpecific.getResponse(xhr)
          });
        };
        xhr.responseType = options.responseType;
        xhr.withCredentials = options.withCredentials;
        xhr.send(options.content);

        return function (/* error */) {
          return function (cancelErrback, cancelCallback) {
            try {
              xhr.abort();
            } catch (e) {
              return cancelErrback(e);
            }
            return cancelCallback();
          };
        };
      };
    };
  }();
})(PS["Network.HTTP.Affjax"] = PS["Network.HTTP.Affjax"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_File_Types = PS["DOM.File.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var DOM_XHR_Types = PS["DOM.XHR.Types"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_FormURLEncoded = PS["Data.FormURLEncoded"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_MediaType = PS["Data.MediaType"];
  var Data_MediaType_Common = PS["Data.MediaType.Common"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var Requestable = function (toRequest) {
      this.toRequest = toRequest;
  };
  var toRequest = function (dict) {
      return dict.toRequest;
  }; 
  var defaultToRequest = function ($0) {
      return Data_Tuple.Tuple.create(Data_Maybe.Nothing.value)($0);
  };                                                                   
  var requestableUnit = new Requestable(defaultToRequest);
  exports["Requestable"] = Requestable;
  exports["toRequest"] = toRequest;
  exports["requestableUnit"] = requestableUnit;
})(PS["Network.HTTP.Affjax.Request"] = PS["Network.HTTP.Affjax.Request"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_File_Types = PS["DOM.File.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_MediaType = PS["Data.MediaType"];
  var Data_MediaType_Common = PS["Data.MediaType.Common"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var ArrayBufferResponse = (function () {
      function ArrayBufferResponse() {

      };
      ArrayBufferResponse.value = new ArrayBufferResponse();
      return ArrayBufferResponse;
  })();
  var BlobResponse = (function () {
      function BlobResponse() {

      };
      BlobResponse.value = new BlobResponse();
      return BlobResponse;
  })();
  var DocumentResponse = (function () {
      function DocumentResponse() {

      };
      DocumentResponse.value = new DocumentResponse();
      return DocumentResponse;
  })();
  var JSONResponse = (function () {
      function JSONResponse() {

      };
      JSONResponse.value = new JSONResponse();
      return JSONResponse;
  })();
  var StringResponse = (function () {
      function StringResponse() {

      };
      StringResponse.value = new StringResponse();
      return StringResponse;
  })();
  var Respondable = function (fromResponse, responseType) {
      this.fromResponse = fromResponse;
      this.responseType = responseType;
  }; 
  var responseTypeToString = function (v) {
      if (v instanceof ArrayBufferResponse) {
          return "arraybuffer";
      };
      if (v instanceof BlobResponse) {
          return "blob";
      };
      if (v instanceof DocumentResponse) {
          return "document";
      };
      if (v instanceof JSONResponse) {
          return "text";
      };
      if (v instanceof StringResponse) {
          return "text";
      };
      throw new Error("Failed pattern match at Network.HTTP.Affjax.Response line 48, column 1 - line 48, column 61: " + [ v.constructor.name ]);
  };
  var responseType = function (dict) {
      return dict.responseType;
  };                                                                                                                                     
  var responsableJson = new Respondable(function ($8) {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($8);
  }, new Data_Tuple.Tuple(new Data_Maybe.Just(Data_MediaType_Common.applicationJSON), JSONResponse.value));                                                             
  var fromResponse = function (dict) {
      return dict.fromResponse;
  };
  exports["ArrayBufferResponse"] = ArrayBufferResponse;
  exports["BlobResponse"] = BlobResponse;
  exports["DocumentResponse"] = DocumentResponse;
  exports["JSONResponse"] = JSONResponse;
  exports["StringResponse"] = StringResponse;
  exports["responseTypeToString"] = responseTypeToString;
  exports["Respondable"] = Respondable;
  exports["responseType"] = responseType;
  exports["fromResponse"] = fromResponse;
  exports["responsableJson"] = responsableJson;
})(PS["Network.HTTP.Affjax.Response"] = PS["Network.HTTP.Affjax.Response"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_MediaType = PS["Data.MediaType"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var Accept = (function () {
      function Accept(value0) {
          this.value0 = value0;
      };
      Accept.create = function (value0) {
          return new Accept(value0);
      };
      return Accept;
  })();
  var ContentType = (function () {
      function ContentType(value0) {
          this.value0 = value0;
      };
      ContentType.create = function (value0) {
          return new ContentType(value0);
      };
      return ContentType;
  })();
  var RequestHeader = (function () {
      function RequestHeader(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RequestHeader.create = function (value0) {
          return function (value1) {
              return new RequestHeader(value0, value1);
          };
      };
      return RequestHeader;
  })();
  var requestHeaderValue = function (v) {
      if (v instanceof Accept) {
          return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
      };
      if (v instanceof ContentType) {
          return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
      };
      if (v instanceof RequestHeader) {
          return v.value1;
      };
      throw new Error("Failed pattern match at Network.HTTP.RequestHeader line 29, column 1 - line 29, column 46: " + [ v.constructor.name ]);
  };
  var requestHeaderName = function (v) {
      if (v instanceof Accept) {
          return "Accept";
      };
      if (v instanceof ContentType) {
          return "Content-Type";
      };
      if (v instanceof RequestHeader) {
          return v.value0;
      };
      throw new Error("Failed pattern match at Network.HTTP.RequestHeader line 24, column 1 - line 24, column 45: " + [ v.constructor.name ]);
  };
  exports["Accept"] = Accept;
  exports["ContentType"] = ContentType;
  exports["RequestHeader"] = RequestHeader;
  exports["requestHeaderName"] = requestHeaderName;
  exports["requestHeaderValue"] = requestHeaderValue;
})(PS["Network.HTTP.RequestHeader"] = PS["Network.HTTP.RequestHeader"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Generic = PS["Data.Generic"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var ResponseHeader = (function () {
      function ResponseHeader(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ResponseHeader.create = function (value0) {
          return function (value1) {
              return new ResponseHeader(value0, value1);
          };
      };
      return ResponseHeader;
  })();
  var responseHeader = function (field) {
      return function (value) {
          return new ResponseHeader(field, value);
      };
  };
  exports["responseHeader"] = responseHeader;
})(PS["Network.HTTP.ResponseHeader"] = PS["Network.HTTP.ResponseHeader"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Network.HTTP.Affjax"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_Compat = PS["Control.Monad.Aff.Compat"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut_Parser = PS["Data.Argonaut.Parser"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HTTP_Method = PS["Data.HTTP.Method"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Int = PS["Data.Int"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_MediaType = PS["Data.MediaType"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Tuple = PS["Data.Tuple"];
  var $$Math = PS["Math"];
  var Network_HTTP_Affjax_Request = PS["Network.HTTP.Affjax.Request"];
  var Network_HTTP_Affjax_Response = PS["Network.HTTP.Affjax.Response"];
  var Network_HTTP_RequestHeader = PS["Network.HTTP.RequestHeader"];
  var Network_HTTP_ResponseHeader = PS["Network.HTTP.ResponseHeader"];
  var Network_HTTP_StatusCode = PS["Network.HTTP.StatusCode"];
  var Prelude = PS["Prelude"];
  var defaultRequest = {
      method: new Data_Either.Left(Data_HTTP_Method.GET.value),
      url: "/",
      headers: [  ],
      content: Data_Maybe.Nothing.value,
      username: Data_Maybe.Nothing.value,
      password: Data_Maybe.Nothing.value,
      withCredentials: false
  };
  var affjax = function (dictRequestable) {
      return function (dictRespondable) {
          return function (req) {
              var responseSettings = Network_HTTP_Affjax_Response.responseType(dictRespondable);
              var requestSettings = (function () {
                  var v = Data_Functor.map(Data_Maybe.functorMaybe)(Network_HTTP_Affjax_Request.toRequest(dictRequestable))(req.content);
                  if (v instanceof Data_Maybe.Nothing) {
                      return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return new Data_Tuple.Tuple(v.value0.value0, new Data_Maybe.Just(v.value0.value1));
                  };
                  throw new Error("Failed pattern match at Network.HTTP.Affjax line 250, column 21 - line 252, column 49: " + [ v.constructor.name ]);
              })();
              var parseJSON = function ($98) {
                  return Data_Either.either(function ($99) {
                      return Data_Foreign.fail(Data_Foreign.JSONError.create($99));
                  })(function ($100) {
                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Foreign.toForeign($100));
                  })(Data_Argonaut_Parser.jsonParser($98));
              };
              var fromResponse$prime = (function () {
                  var v = Data_Tuple.snd(responseSettings);
                  if (v instanceof Network_HTTP_Affjax_Response.JSONResponse) {
                      return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Network_HTTP_Affjax_Response.fromResponse(dictRespondable))(Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(parseJSON)(Data_Foreign.readString));
                  };
                  return Network_HTTP_Affjax_Response.fromResponse(dictRespondable);
              })();
              var addHeader = function (mh) {
                  return function (hs) {
                      if (mh instanceof Data_Maybe.Just && !Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(Network_HTTP_RequestHeader.requestHeaderName)(mh.value0))(hs)) {
                          return Data_Array.snoc(hs)(mh.value0);
                      };
                      return hs;
                  };
              };
              var headers = addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Network_HTTP_RequestHeader.ContentType.create)(Data_Tuple.fst(requestSettings)))(addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Network_HTTP_RequestHeader.Accept.create)(Data_Tuple.fst(responseSettings)))(req.headers));
              var req$prime = {
                  method: Data_HTTP_Method.print(req.method),
                  url: req.url,
                  headers: Data_Functor.map(Data_Functor.functorArray)(function (h) {
                      return {
                          field: Network_HTTP_RequestHeader.requestHeaderName(h),
                          value: Network_HTTP_RequestHeader.requestHeaderValue(h)
                      };
                  })(headers),
                  content: Data_Nullable.toNullable(Data_Tuple.snd(requestSettings)),
                  responseType: Network_HTTP_Affjax_Response.responseTypeToString(Data_Tuple.snd(responseSettings)),
                  username: Data_Nullable.toNullable(req.username),
                  password: Data_Nullable.toNullable(req.password),
                  withCredentials: req.withCredentials
              };
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_Compat.fromEffFnAff($foreign._ajax(Network_HTTP_ResponseHeader.responseHeader, req$prime)))(function (v) {
                  var v1 = Data_Functor.map(Data_Either.functorEither)(function (v2) {
                      var $68 = {};
                      for (var $69 in v) {
                          if ({}.hasOwnProperty.call(v, $69)) {
                              $68[$69] = v[$69];
                          };
                      };
                      $68.response = v2;
                      return $68;
                  })(Control_Monad_Except.runExcept(fromResponse$prime(v.response)));
                  if (v1 instanceof Data_Either.Left) {
                      return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error(Data_Show.show(Data_List_Types.showNonEmptyList(Data_Foreign.showForeignError))(v1.value0)));
                  };
                  if (v1 instanceof Data_Either.Right) {
                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v1.value0);
                  };
                  throw new Error("Failed pattern match at Network.HTTP.Affjax line 232, column 3 - line 234, column 28: " + [ v1.constructor.name ]);
              });
          };
      };
  };                                                                   
  var get = function (dictRespondable) {
      return function (u) {
          return affjax(Network_HTTP_Affjax_Request.requestableUnit)(dictRespondable)((function () {
              var $77 = {};
              for (var $78 in defaultRequest) {
                  if ({}.hasOwnProperty.call(defaultRequest, $78)) {
                      $77[$78] = defaultRequest[$78];
                  };
              };
              $77.url = u;
              return $77;
          })());
      };
  };
  exports["defaultRequest"] = defaultRequest;
  exports["affjax"] = affjax;
  exports["get"] = get;
})(PS["Network.HTTP.Affjax"] = PS["Network.HTTP.Affjax"] || {});
(function(exports) {// module Routing

  exports.hashChanged = function(handler) {
      return function() {
          var getHash = function() {
              return document.location.href.split('#').splice(1).join('#');
          };
          var oldHash = '';
          handler('')(getHash())();
          window.addEventListener('hashchange', function(ev) {
              var newHash = getHash();
              handler(oldHash)(newHash)();
              oldHash = newHash;
          });
      };
  };
})(PS["Routing"] = PS["Routing"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Routing"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Routing_Match = PS["Routing.Match"];
  var Routing_Parser = PS["Routing.Parser"];            
  var hashes = function (cb) {
      var dropHash = function (h) {
          var v = Data_String_Regex.regex("^[^#]*#")(Data_String_Regex_Flags.noFlags);
          if (v instanceof Data_Either.Right) {
              return Data_String_Regex.replace(v.value0)("")(h);
          };
          if (v instanceof Data_Either.Left) {
              return h;
          };
          throw new Error("Failed pattern match at Routing line 34, column 11 - line 36, column 28: " + [ v.constructor.name ]);
      };
      return $foreign.hashChanged(function (old) {
          return function ($$new) {
              return cb(dropHash(old))(dropHash($$new));
          };
      });
  };
  exports["hashes"] = hashes;
})(PS["Routing"] = PS["Routing"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Data_Const = PS["Data.Const"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Global = PS["Global"];
  var Halogen = PS["Halogen"];
  var Halogen_Aff = PS["Halogen.Aff"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query = PS["Halogen.Query"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Halogen_Storybook_Proxy = PS["Halogen.Storybook.Proxy"];
  var Halogen_VDom_Driver = PS["Halogen.VDom.Driver"];
  var Prelude = PS["Prelude"];
  var Routing = PS["Routing"];        
  var RouteChange = (function () {
      function RouteChange(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RouteChange.create = function (value0) {
          return function (value1) {
              return new RouteChange(value0, value1);
          };
      };
      return RouteChange;
  })();
  var FormElements = (function () {
      function FormElements() {

      };
      FormElements.value = new FormElements();
      return FormElements;
  })();
  var Components = (function () {
      function Components() {

      };
      Components.value = new Components();
      return Components;
  })();
  var Behaviors = (function () {
      function Behaviors() {

      };
      Behaviors.value = new Behaviors();
      return Behaviors;
  })();
  var showGroup = new Data_Show.Show(function (v) {
      if (v instanceof FormElements) {
          return "Form Elements";
      };
      if (v instanceof Components) {
          return "Components";
      };
      if (v instanceof Behaviors) {
          return "Behaviors";
      };
      throw new Error("Failed pattern match at UIGuide.App line 63, column 1 - line 63, column 33: " + [ v.constructor.name ]);
  });
  var eqGroup = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof FormElements && y instanceof FormElements) {
              return true;
          };
          if (x instanceof Components && y instanceof Components) {
              return true;
          };
          if (x instanceof Behaviors && y instanceof Behaviors) {
              return true;
          };
          return false;
      };
  });
  var ordGroup = new Data_Ord.Ord(function () {
      return eqGroup;
  }, function (x) {
      return function (y) {
          if (x instanceof FormElements && y instanceof FormElements) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof FormElements) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof FormElements) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Components && y instanceof Components) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Components) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Components) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Behaviors && y instanceof Behaviors) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at UIGuide.App line 62, column 8 - line 62, column 38: " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var partitionByGroup = function (g) {
      return function ($38) {
          return Data_Tuple.Tuple.create(g)(Data_Map.filter(Data_Ord.ordString)(function (v) {
              return Data_Eq.eq(eqGroup)(v.group)(g);
          })($38));
      };
  };
  var app = (function () {
      var renderSlot = function (state) {
          var v = Data_Map.lookup(Data_Ord.ordString)(state.route)(state.stories);
          if (v instanceof Data_Maybe.Just) {
              return Halogen_HTML.slot(state.route)(v.value0.component)(Data_Unit.unit)(Data_Void.absurd);
          };
          return Halogen_HTML_Elements.div_([  ]);
      };
      var renderGroup = function (route) {
          return function (stories) {
              var linkActiveClass = "hover:underline text-grey-darkest" + " hover:underline font-bold text-black";
              return Halogen_HTML_Elements.ul([ Halogen_HTML_Properties.class_("list-reset") ])(Data_Functor.mapFlipped(Data_Functor.functorArray)(Data_Map.toUnfoldable(Data_Unfoldable.unfoldableArray)(stories))(function (v) {
                  return Halogen_HTML_Elements.li([ Halogen_HTML_Properties.class_("my-1") ])([ Halogen_HTML_Elements.a([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName((function () {
                      var $24 = route === v.value0;
                      if ($24) {
                          return linkActiveClass;
                      };
                      return "hover:underline text-grey-darkest";
                  })())), Halogen_HTML_Properties.href("#" + Global["encodeURI"](v.value0)) ])([ Halogen_HTML_Core.text(v.value1.anchor) ]) ]);
              }));
          };
      };
      var renderGroups = function (state) {
          return Data_Functor.mapFlipped(Data_Functor.functorArray)(Data_Map.toUnfoldable(Data_Unfoldable.unfoldableArray)(state.partitions))(function (v) {
              return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("my-4") ])([ Halogen_HTML_Elements.p([ Halogen_HTML_Properties.class_("uppercase text-grey-darker font-bold text-xs tracking-wide") ])([ Halogen_HTML_Core.text(Data_Show.show(showGroup)(v.value0)) ]), renderGroup(state.route)(v.value1) ]);
          });
      };
      var renderSidebar = function (state) {
          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.id_("sidebar"), Halogen_HTML_Properties.class_("hidden z-50 fixed pin-y pin-l overflow-y-scroll md:overflow-visible scrolling-touch md:scrolling-auto bg-grey-95 w-4/5 md:w-full md:max-w-xs flex-none border-r-2 border-grey-light md:flex flex-col") ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("p-8 flex-1 overflow-y-scroll") ])([ Halogen_HTML_Elements.nav([ Halogen_HTML_Properties.class_("text-base overflow-y-scroll") ])(renderGroups(state)) ]) ]);
      };
      var renderContainer = function (state) {
          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("md:ml-80") ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("fixed w-full z-20") ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("pin-t bg-white md:hidden relative border-b border-grey-light h-12 py-8 flex items-center") ])([ Halogen_HTML_Elements.a([ Halogen_HTML_Properties.class_("mx-auto inline-flex items-center"), Halogen_HTML_Properties.href("") ])([ Halogen_HTML_Core.text("CitizenNet UI Guide") ]) ]) ]), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("px-6 pb-8 pt-20 md:pt-16 w-full max-w-lg mx-auto") ])([ renderSlot(state) ]) ]);
      };
      var render = function (state) {
          return Halogen_HTML_Elements.body([ Halogen_HTML_Properties.class_("font-sans font-normal text-black leading-normal") ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("min-h-screen") ])([ renderSidebar(state), renderContainer(state) ]) ]);
      };
      var initialState = function (i) {
          return {
              route: "",
              stories: i.stories,
              partitions: Data_Map.fromFoldable(ordGroup)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(Data_Function.flip(partitionByGroup)(i.stories))(i.groups))
          };
      };
      var $$eval = function (v) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
              var $32 = {};
              for (var $33 in state) {
                  if ({}.hasOwnProperty.call(state, $33)) {
                      $32[$33] = state[$33];
                  };
              };
              $32.route = v.value0;
              return $32;
          }))(function () {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
          });
      };
      return Halogen_Component.parentComponent(Data_Ord.ordString)({
          initialState: initialState,
          render: render,
          "eval": $$eval,
          receiver: Data_Function["const"](Data_Maybe.Nothing.value)
      });
  })();
  var runStorybook = function (stories) {
      return function (groups) {
          return function (body) {
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_VDom_Driver.runUI(app)({
                  stories: stories,
                  groups: groups
              })(body))(function (v) {
                  return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Routing.hashes(function (v1) {
                      return function (next) {
                          return Control_Monad_Aff.launchAff_(v.query(Halogen_Query.action(RouteChange.create(Global["decodeURI"](next)))));
                      };
                  }));
              });
          };
      };
  };
  exports["FormElements"] = FormElements;
  exports["Components"] = Components;
  exports["Behaviors"] = Behaviors;
  exports["runStorybook"] = runStorybook;
  exports["eqGroup"] = eqGroup;
  exports["ordGroup"] = ordGroup;
  exports["showGroup"] = showGroup;
})(PS["UIGuide.App"] = PS["UIGuide.App"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var DOM_HTML_Indexed = PS["DOM.HTML.Indexed"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Prelude = PS["Prelude"];        
  var Default = (function () {
      function Default() {

      };
      Default.value = new Default();
      return Default;
  })();
  var Primary = (function () {
      function Primary() {

      };
      Primary.value = new Primary();
      return Primary;
  })();
  var Secondary = (function () {
      function Secondary() {

      };
      Secondary.value = new Secondary();
      return Secondary;
  })();
  var Transparent = (function () {
      function Transparent() {

      };
      Transparent.value = new Transparent();
      return Transparent;
  })();
  var buttonTypeClasses = function (type_) {
      var classNames = function (v) {
          if (v instanceof Default) {
              return [ "bg-grey-50-a20", "hover:bg-grey-50-a30", "text-black-20" ];
          };
          if (v instanceof Primary) {
              return [ "bg-blue-88", "hover:bg-blue-82", "text-white" ];
          };
          if (v instanceof Secondary) {
              return [ "bg-grey-70-a30", "hover:bg-grey-70-a40", "text-grey-70" ];
          };
          if (v instanceof Transparent) {
              return [ "bg-transparent", "text-grey-70" ];
          };
          throw new Error("Failed pattern match at Ocelot.Block.Button line 30, column 5 - line 34, column 8: " + [ v.constructor.name ]);
      };
      return Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(classNames(type_));
  };
  var buttonClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "no-outline", "px-4", "py-3", "rounded", "shadow" ]);
  var button_ = function (v) {
      return Halogen_HTML_Elements.button([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonTypeClasses(v.type_))(buttonClasses)) ]);
  };
  var button = function (v) {
      return function (iprops) {
          return Halogen_HTML_Elements.button(Data_Semigroup.append(Data_Semigroup.semigroupArray)(iprops)([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonTypeClasses(v.type_))(buttonClasses)) ]));
      };
  };
  exports["Default"] = Default;
  exports["Primary"] = Primary;
  exports["Secondary"] = Secondary;
  exports["Transparent"] = Transparent;
  exports["buttonClasses"] = buttonClasses;
  exports["buttonTypeClasses"] = buttonTypeClasses;
  exports["button_"] = button_;
  exports["button"] = button;
})(PS["Ocelot.Block.Button"] = PS["Ocelot.Block.Button"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Prelude = PS["Prelude"];        
  var titleClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "block", "font-light", "mb-10", "text-grey-70", "text-sm", "tracking-wide", "uppercase" ]);
  var contentClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "flex-col", "items-center", "w-full" ]);
  var componentClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-grey-95", "flex", "flex-col", "items-center", "justify-center", "my-6", "p-10" ]);
  var component = function (props) {
      return function (html) {
          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(componentClasses) ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(titleClasses) ])([ Halogen_HTML_Core.text(props.title) ]), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(contentClasses) ])(html) ]);
      };
  };
  exports["component"] = component;
})(PS["UIGuide.Block.Component"] = PS["UIGuide.Block.Component"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Prelude = PS["Prelude"];        
  var subheaderClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "font-light", "leading-normal", "text-grey-50", "text-sm" ]);
  var headerClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "font-light", "leading-loose", "text-black-20" ]);
  var documentationClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([  ]);
  var documentation = function (props) {
      return function (html) {
          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(documentationClasses) ])([ Halogen_HTML_Elements.h1([ Halogen_HTML_Properties.classes(headerClasses) ])([ Halogen_HTML_Core.text(props.header) ]), Halogen_HTML_Elements.h2([ Halogen_HTML_Properties.classes(subheaderClasses) ])([ Halogen_HTML_Core.text(props.subheader) ]), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("mt-5") ])(html) ]);
      };
  };
  exports["documentation"] = documentation;
})(PS["UIGuide.Block.Documentation"] = PS["UIGuide.Block.Documentation"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Ocelot_Block_Button = PS["Ocelot.Block.Button"];
  var Prelude = PS["Prelude"];
  var UIGuide_Block_Component = PS["UIGuide.Block.Component"];
  var UIGuide_Block_Documentation = PS["UIGuide.Block.Documentation"];
  var component = (function () {
      var render = function (v) {
          return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.documentation({
              header: "Buttons",
              subheader: "Perform Actions"
          })([ UIGuide_Block_Component.component({
              title: "Default"
          })([ Ocelot_Block_Button.button_({
              type_: Ocelot_Block_Button.Default.value
          })([ Halogen_HTML_Core.text("Cancel") ]) ]), UIGuide_Block_Component.component({
              title: "Primary"
          })([ Ocelot_Block_Button.button_({
              type_: Ocelot_Block_Button.Primary.value
          })([ Halogen_HTML_Core.text("Submit") ]) ]), UIGuide_Block_Component.component({
              title: "Secondary"
          })([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("bg-black-10 flex items-center justify-center h-16 w-full") ])([ Ocelot_Block_Button.button_({
              type_: Ocelot_Block_Button.Secondary.value
          })([ Halogen_HTML_Core.text("Options") ]) ]) ]) ]) ]);
      };
      var $$eval = function (v) {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      };
      return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": $$eval,
          receiver: Data_Function["const"](Data_Maybe.Nothing.value)
      });
  })();
  exports["component"] = component;
})(PS["UIGuide.Components.Button"] = PS["UIGuide.Components.Button"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Prelude = PS["Prelude"];        
  var titleClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "font-medium", "text-black-20", "text-lg" ]);
  var headerClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "mb-4" ]);
  var cardClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-white", "h-auto", "w-full", "p-6", "shadow", "w-auto" ]);
  var card = function (props) {
      return function (html) {
          return Halogen_HTML_Elements.aside([ Halogen_HTML_Properties.classes(cardClasses) ])([ Halogen_HTML_Elements.header([ Halogen_HTML_Properties.classes(headerClasses) ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(titleClasses) ])([ Halogen_HTML_Core.text(props.title) ]) ]), Halogen_HTML_Elements.div_(html) ]);
      };
  };
  exports["card"] = card;
})(PS["Ocelot.Block.Card"] = PS["Ocelot.Block.Card"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Ocelot_Block_Card = PS["Ocelot.Block.Card"];
  var Prelude = PS["Prelude"];
  var UIGuide_Block_Component = PS["UIGuide.Block.Component"];
  var UIGuide_Block_Documentation = PS["UIGuide.Block.Documentation"];
  var card = (function () {
      var render = function (v) {
          var meta = [ Halogen_HTML_Elements.table_([ Halogen_HTML_Elements.tr_([ Halogen_HTML_Elements.th([ Halogen_HTML_Properties.class_("font-medium text-left text-xs text-grey-50 pr-4 py-1") ])([ Halogen_HTML_Core.text("Run Ads On:") ]), Halogen_HTML_Elements.td([ Halogen_HTML_Properties.class_("font-light text-left text-xs text-black-20 py-1") ])([ Halogen_HTML_Core.text("Stack Overflow") ]) ]), Halogen_HTML_Elements.tr_([ Halogen_HTML_Elements.th([ Halogen_HTML_Properties.class_("font-medium text-left text-xs text-grey-50 pr-4 py-1") ])([ Halogen_HTML_Core.text("Social Account:") ]), Halogen_HTML_Elements.td([ Halogen_HTML_Properties.class_("font-light text-left text-xs text-black-20 py-1") ])([ Halogen_HTML_Core.text("Dave Loves Gang of Four") ]) ]), Halogen_HTML_Elements.tr_([ Halogen_HTML_Elements.th([ Halogen_HTML_Properties.class_("font-medium text-left text-xs text-grey-50 pr-4 py-1") ])([ Halogen_HTML_Core.text("Ads Account:") ]), Halogen_HTML_Elements.td([ Halogen_HTML_Properties.class_("font-light text-left text-xs text-black-20 py-1") ])([ Halogen_HTML_Core.text("123991234") ]) ]) ]) ];
          return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.documentation({
              header: "Card",
              subheader: "Information on a card"
          })([ UIGuide_Block_Component.component({
              title: "Card"
          })([ Ocelot_Block_Card.card({
              title: "Summary"
          })(meta) ]) ]) ]);
      };
      var $$eval = function (v) {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      };
      return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": $$eval,
          receiver: Data_Function["const"](Data_Maybe.Nothing.value)
      });
  })();
  exports["card"] = card;
})(PS["UIGuide.Components.Card"] = PS["UIGuide.Components.Card"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Prelude = PS["Prelude"];        
  var mutedClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-grey-dark" ]);
  var linkClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-blue-light", "font-medium", "cursor-pointer" ]);
  exports["linkClasses"] = linkClasses;
  exports["mutedClasses"] = mutedClasses;
})(PS["Ocelot.Block.Type"] = PS["Ocelot.Block.Type"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var ParseError = (function () {
      function ParseError(value0) {
          this.value0 = value0;
      };
      ParseError.create = function (value0) {
          return new ParseError(value0);
      };
      return ParseError;
  })();
  var unParser = function (v) {
      return v;
  };
  var $$try = function (v) {
      return function (v1) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v2) {
              var $34 = {};
              for (var $35 in v2) {
                  if ({}.hasOwnProperty.call(v2, $35)) {
                      $34[$35] = v2[$35];
                  };
              };
              $34.pos = v1.pos;
              return $34;
          })(v(v1));
      };
  };
  var showParseError = new Data_Show.Show(function (v) {
      return v.value0;
  });
  var runParser = function (v) {
      return function (s) {
          return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(function (v1) {
              return v1.error;
          })(function (v1) {
              return v1.result;
          })(v({
              str: s,
              pos: 0
          }));
      };
  }; 
  var functorParser = new Data_Functor.Functor(function (f) {
      return function (v) {
          return function ($83) {
              return Data_Functor.map(Data_Either.functorEither)(function (v1) {
                  return {
                      result: f(v1.result),
                      suffix: v1.suffix
                  };
              })(v($83));
          };
      };
  });
  var fail = function (msg) {
      return function (v) {
          return new Data_Either.Left({
              pos: v.pos,
              error: new ParseError(msg)
          });
      };
  }; 
  var applyParser = new Control_Apply.Apply(function () {
      return functorParser;
  }, function (v) {
      return function (v1) {
          return function (s) {
              return Control_Bind.bind(Data_Either.bindEither)(v(s))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(v1(v2.suffix))(function (v3) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          result: v2.result(v3.result),
                          suffix: v3.suffix
                      });
                  });
              });
          };
      };
  });
  var bindParser = new Control_Bind.Bind(function () {
      return applyParser;
  }, function (v) {
      return function (f) {
          return function (s) {
              return Control_Bind.bind(Data_Either.bindEither)(v(s))(function (v1) {
                  return unParser(f(v1.result))(v1.suffix);
              });
          };
      };
  });
  var applicativeParser = new Control_Applicative.Applicative(function () {
      return applyParser;
  }, function (a) {
      return function (s) {
          return new Data_Either.Right({
              result: a,
              suffix: s
          });
      };
  });
  var monadParser = new Control_Monad.Monad(function () {
      return applicativeParser;
  }, function () {
      return bindParser;
  });
  var monadRecParser = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadParser;
  }, function (f) {
      return function (a) {
          var split = function (v) {
              if (v.result instanceof Control_Monad_Rec_Class.Loop) {
                  return new Control_Monad_Rec_Class.Loop({
                      state: v.result.value0,
                      str: v.suffix
                  });
              };
              if (v.result instanceof Control_Monad_Rec_Class.Done) {
                  return new Control_Monad_Rec_Class.Done({
                      result: v.result.value0,
                      suffix: v.suffix
                  });
              };
              throw new Error("Failed pattern match at Text.Parsing.StringParser line 88, column 7 - line 88, column 70: " + [ v.constructor.name ]);
          };
          return function (str) {
              return Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEither)(function (st) {
                  return Data_Functor.map(Data_Either.functorEither)(split)(unParser(f(st.state))(st.str));
              })({
                  state: a,
                  str: str
              });
          };
      };
  });
  var altParser = new Control_Alt.Alt(function () {
      return functorParser;
  }, function (v) {
      return function (v1) {
          return function (s) {
              var v2 = v(s);
              if (v2 instanceof Data_Either.Left) {
                  if (s.pos === v2.value0.pos) {
                      return v1(s);
                  };
                  if (Data_Boolean.otherwise) {
                      return new Data_Either.Left({
                          error: v2.value0.error,
                          pos: v2.value0.pos
                      });
                  };
              };
              return v2;
          };
      };
  });
  var plusParser = new Control_Plus.Plus(function () {
      return altParser;
  }, fail("No alternative"));
  var alternativeParser = new Control_Alternative.Alternative(function () {
      return applicativeParser;
  }, function () {
      return plusParser;
  });
  exports["ParseError"] = ParseError;
  exports["unParser"] = unParser;
  exports["runParser"] = runParser;
  exports["fail"] = fail;
  exports["try"] = $$try;
  exports["showParseError"] = showParseError;
  exports["functorParser"] = functorParser;
  exports["applyParser"] = applyParser;
  exports["applicativeParser"] = applicativeParser;
  exports["altParser"] = altParser;
  exports["plusParser"] = plusParser;
  exports["alternativeParser"] = alternativeParser;
  exports["bindParser"] = bindParser;
  exports["monadParser"] = monadParser;
  exports["monadRecParser"] = monadRecParser;
})(PS["Text.Parsing.StringParser"] = PS["Text.Parsing.StringParser"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];        
  var withError = function (p) {
      return function (msg) {
          return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(Text_Parsing_StringParser.fail(msg));
      };
  };
  var optional = function (p) {
      return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
          return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit);
      }))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit));
  };
  var many = Data_List.manyRec(Text_Parsing_StringParser.monadRecParser)(Text_Parsing_StringParser.alternativeParser);
  var many1 = function (p) {
      return Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_List_Types.Cons.create)(p))(many(p));
  };
  var sepBy1 = function (p) {
      return function (sep) {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
              return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(many(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(sep)(p)))(function (v1) {
                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Data_List_Types.Cons(v, v1));
              });
          });
      };
  };
  exports["many"] = many;
  exports["many1"] = many1;
  exports["withError"] = withError;
  exports["optional"] = optional;
  exports["sepBy1"] = sepBy1;
})(PS["Text.Parsing.StringParser.Combinators"] = PS["Text.Parsing.StringParser.Combinators"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Char = PS["Data.Char"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];
  var eof = function (s) {
      if (s.pos < Data_String.length(s.str)) {
          return new Data_Either.Left({
              pos: s.pos,
              error: new Text_Parsing_StringParser.ParseError("Expected EOF")
          });
      };
      return new Data_Either.Right({
          result: Data_Unit.unit,
          suffix: s
      });
  };
  var anyChar = function (v) {
      var v1 = Data_String.charAt(v.pos)(v.str);
      if (v1 instanceof Data_Maybe.Just) {
          return new Data_Either.Right({
              result: v1.value0,
              suffix: {
                  str: v.str,
                  pos: v.pos + 1 | 0
              }
          });
      };
      if (v1 instanceof Data_Maybe.Nothing) {
          return new Data_Either.Left({
              pos: v.pos,
              error: new Text_Parsing_StringParser.ParseError("Unexpected EOF")
          });
      };
      throw new Error("Failed pattern match at Text.Parsing.StringParser.String line 45, column 3 - line 47, column 64: " + [ v1.constructor.name ]);
  };  
  var satisfy = function (f) {
      return Text_Parsing_StringParser["try"](Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (v) {
          var $43 = f(v);
          if ($43) {
              return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
          };
          return Text_Parsing_StringParser.fail("Character " + (Data_Show.show(Data_Show.showChar)(v) + " did not satisfy predicate"));
      }));
  };
  var $$char = function (c) {
      return Text_Parsing_StringParser_Combinators.withError(satisfy(function (v) {
          return v === c;
      }))("Could not match character " + Data_Show.show(Data_Show.showChar)(c));
  };
  exports["eof"] = eof;
  exports["anyChar"] = anyChar;
  exports["satisfy"] = satisfy;
  exports["char"] = $$char;
})(PS["Text.Parsing.StringParser.String"] = PS["Text.Parsing.StringParser.String"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Char = PS["Data.Char"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];
  var Text_Parsing_StringParser_String = PS["Text.Parsing.StringParser.String"];
  var takeWhile1 = function (f) {
      return Data_Functor.map(Text_Parsing_StringParser.functorParser)(function ($31) {
          return Data_Foldable.fold(Data_List_Types.foldableList)(Data_Monoid.monoidString)(Data_Functor.map(Data_List_Types.functorList)(Data_String.singleton)($31));
      })(Text_Parsing_StringParser_Combinators.many1(Text_Parsing_StringParser_String.satisfy(f)));
  };
  var skipMany1 = function (p) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(p))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(skipMany(p)))(function () {
              return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit);
          });
      });
  };
  var skipMany = function (p) {
      return Control_Alt.alt(Text_Parsing_StringParser.altParser)(skipMany1(p))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit));
  };
  var skipWhile1 = function (x) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String.satisfy(x)))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(skipMany(Text_Parsing_StringParser_String.satisfy(x))))(function () {
              return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit);
          });
      });
  };
  var nullChar = Text_Parsing_StringParser_String["char"](Data_Char.fromCharCode(0));
  var lf = Text_Parsing_StringParser_String["char"]("\x0a");
  var isWsp = function (x) {
      return x === " " || x === "\x09";
  };
  var whiteSpace = Text_Parsing_StringParser_String.satisfy(isWsp);
  var whiteSpace1 = skipWhile1(isWsp);
  var isAlphaNum = function (x) {
      var isDigit = x >= "0" && x <= "9";
      var isAlpha_ascii = x >= "a" && x <= "z" || x >= "A" && x <= "Z";
      return isDigit || isAlpha_ascii;
  };
  var inClassRange = function (start) {
      return function (end) {
          return function (c) {
              return c >= start && c <= end;
          };
      };
  };
  var isVchar = inClassRange(Data_Char.fromCharCode(33))(Data_Char.fromCharCode(126));
  var vchar = Text_Parsing_StringParser_String.satisfy(isVchar);
  var inClass = function (string) {
      return function ($$char) {
          return Data_String.contains(Data_String.Pattern(Data_String.singleton($$char)))(string);
      };
  };
  var isObsNoWsCtl = function (c) {
      return inClassRange(Data_Char.fromCharCode(1))(Data_Char.fromCharCode(8))(c) || (inClassRange(Data_Char.fromCharCode(14))(Data_Char.fromCharCode(31))(c) || inClass("\x0b\x0c\x7f")(c));
  };
  var isCommentText = function (x) {
      return inClassRange(Data_Char.fromCharCode(33))(Data_Char.fromCharCode(39))(x) || (inClassRange(Data_Char.fromCharCode(42))(Data_Char.fromCharCode(91))(x) || (inClassRange(Data_Char.fromCharCode(93))(Data_Char.fromCharCode(126))(x) || isObsNoWsCtl(x)));
  };
  var isDomainText = function (x) {
      return inClassRange(Data_Char.fromCharCode(33))(Data_Char.fromCharCode(90))(x) || (inClassRange(Data_Char.fromCharCode(94))(Data_Char.fromCharCode(126))(x) || isObsNoWsCtl(x));
  };
  var obsNoWsCtl = Text_Parsing_StringParser_String.satisfy(isObsNoWsCtl);
  var isQuotedText = function (x) {
      return inClass(Data_String.fromCharArray(Control_Applicative.pure(Control_Applicative.applicativeArray)(Data_Char.fromCharCode(33))))(x) || (inClassRange(Data_Char.fromCharCode(35))(Data_Char.fromCharCode(91))(x) || (inClassRange(Data_Char.fromCharCode(93))(Data_Char.fromCharCode(126))(x) || isObsNoWsCtl(x)));
  };                                                  
  var cr = Text_Parsing_StringParser_String["char"]("\x0d");
  var crlf = Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(cr)(lf));
  var whiteSpaceOrNewLine = (function () {
      var p2 = skipMany1(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(crlf)(whiteSpace1));
      var p1 = Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(whiteSpace1)(Text_Parsing_StringParser_Combinators.optional(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(crlf)(whiteSpace1)));
      return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p1)(p2);
  })();
  var quotedPair = (function () {
      var what = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String["char"]("\\")))(function () {
          return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(vchar)(whiteSpace))(lf))(cr))(obsNoWsCtl))(nullChar);
      });
      return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(what)(function (v) {
          return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)("\\" + Data_String.singleton(v));
      });
  })();
  var quotedContent = Control_Alt.alt(Text_Parsing_StringParser.altParser)(takeWhile1(isQuotedText))(quotedPair);
  var quotedString = (function () {
      var what = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String["char"]("\"")))(function () {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.many(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_Combinators.optional(whiteSpaceOrNewLine))(quotedContent)))(function (v) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_Combinators.optional(whiteSpaceOrNewLine)))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String["char"]("\"")))(function () {
                      return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
                  });
              });
          });
      });
      return Data_Functor.map(Text_Parsing_StringParser.functorParser)(function (x) {
          return "\"" + (Data_Foldable.fold(Data_List_Types.foldableList)(Data_Monoid.monoidString)(x) + "\"");
      })(what);
  })();
  var comment = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String["char"]("(")))(function () {
      return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(skipMany(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(skipWhile1(isCommentText))(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(quotedPair)))(comment))(whiteSpaceOrNewLine)))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String["char"](")")))(function () {
              return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit);
          });
      });
  });
  var commentOrWhiteSpace = skipMany(Control_Alt.alt(Text_Parsing_StringParser.altParser)(comment)(whiteSpaceOrNewLine));
  var domainLiteral = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.optional(commentOrWhiteSpace))(function () {
      return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String["char"]("[")))(function () {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.many(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_Combinators.optional(whiteSpaceOrNewLine))(takeWhile1(isDomainText))))(function (v) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.optional(whiteSpaceOrNewLine))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String["char"]("]")))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.optional(commentOrWhiteSpace))(function () {
                          return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)("[" + (Data_Foldable.fold(Data_List_Types.foldableList)(Data_Monoid.monoidString)(v) + "]"));
                      });
                  });
              });
          });
      });
  });
  var atom = (function () {
      var isAtomText = function (x) {
          return isAlphaNum(x) || inClass("!#$%&'*+/=?^_`{|}~-")(x);
      };
      return takeWhile1(isAtomText);
  })();
  var dottedAtoms = (function () {
      var inner2 = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_Combinators.optional(commentOrWhiteSpace)))(function () {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(atom)(quotedString))(function (v) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_Combinators.optional(commentOrWhiteSpace)))(function () {
                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
              });
          });
      });
      var inner1 = Text_Parsing_StringParser_Combinators.sepBy1(inner2)(Text_Parsing_StringParser_String["char"]("."));
      return Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Foldable.intercalate(Data_List_Types.foldableList)(Data_Monoid.monoidString)("."))(inner1);
  })();
  var domain = Control_Alt.alt(Text_Parsing_StringParser.altParser)(dottedAtoms)(domainLiteral);
  var local = dottedAtoms;
  var addrSpec = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(local)(function (v) {
      return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String["char"]("@"))(function (v1) {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(domain)(function (v2) {
              return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String.eof)(function (v3) {
                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)({
                      localPart: v,
                      domainPart: v2
                  });
              });
          });
      });
  });
  exports["addrSpec"] = addrSpec;
})(PS["Text.Email.Parser"] = PS["Text.Email.Parser"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  var Text_Email_Parser = PS["Text.Email.Parser"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];        
  var runEmailParser = function (s) {
      return Text_Parsing_StringParser.runParser(Text_Email_Parser.addrSpec)(s);
  };
  var validate = function ($8) {
      return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Show.show(Text_Parsing_StringParser.showParseError))(runEmailParser($8));
  };
  var isValid = function (emailString) {
      var v = validate(emailString);
      if (v instanceof Data_Either.Left) {
          return false;
      };
      if (v instanceof Data_Either.Right) {
          return true;
      };
      throw new Error("Failed pattern match at Text.Email.Validate line 35, column 5 - line 37, column 25: " + [ v.constructor.name ]);
  };
  exports["isValid"] = isValid;
  exports["validate"] = validate;
  exports["runEmailParser"] = runEmailParser;
})(PS["Text.Email.Validate"] = PS["Text.Email.Validate"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Eq = PS["Data.Generic.Rep.Eq"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Number = PS["Data.Number"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Validation_Semigroup = PS["Data.Validation.Semigroup"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Prelude = PS["Prelude"];
  var Text_Email_Validate = PS["Text.Email.Validate"];        
  var EmptyField = (function () {
      function EmptyField() {

      };
      EmptyField.value = new EmptyField();
      return EmptyField;
  })();
  var InvalidEmail = (function () {
      function InvalidEmail() {

      };
      InvalidEmail.value = new InvalidEmail();
      return InvalidEmail;
  })();
  var InvalidNumber = (function () {
      function InvalidNumber() {

      };
      InvalidNumber.value = new InvalidNumber();
      return InvalidNumber;
  })();
  var InvalidInteger = (function () {
      function InvalidInteger() {

      };
      InvalidInteger.value = new InvalidInteger();
      return InvalidInteger;
  })();
  var UnderMinLength = (function () {
      function UnderMinLength(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      UnderMinLength.create = function (value0) {
          return function (value1) {
              return new UnderMinLength(value0, value1);
          };
      };
      return UnderMinLength;
  })();
  var OutOfRange = (function () {
      function OutOfRange(value0) {
          this.value0 = value0;
      };
      OutOfRange.create = function (value0) {
          return new OutOfRange(value0);
      };
      return OutOfRange;
  })();
  var NotGreaterThan = (function () {
      function NotGreaterThan(value0) {
          this.value0 = value0;
      };
      NotGreaterThan.create = function (value0) {
          return new NotGreaterThan(value0);
      };
      return NotGreaterThan;
  })();
  var NotLessThan = (function () {
      function NotLessThan(value0) {
          this.value0 = value0;
      };
      NotLessThan.create = function (value0) {
          return new NotLessThan(value0);
      };
      return NotLessThan;
  })();
  var Dependency = (function () {
      function Dependency(value0) {
          this.value0 = value0;
      };
      Dependency.create = function (value0) {
          return new Dependency(value0);
      };
      return Dependency;
  })();
  var validateStrIsEmail = function (email) {
      if (Text_Email_Validate.isValid(email)) {
          return Control_Applicative.pure(Data_Validation_Semigroup.applicativeV(Data_Semigroup.semigroupArray))(email);
      };
      if (Data_Boolean.otherwise) {
          return Data_Validation_Semigroup.invalid(Control_Applicative.pure(Control_Applicative.applicativeArray)(InvalidEmail.value));
      };
      throw new Error("Failed pattern match at Ocelot.Core.Validation line 61, column 1 - line 61, column 58: " + [ email.constructor.name ]);
  };
  var validateNonEmptyStr = function (str) {
      if (Data_String["null"](str)) {
          return Data_Validation_Semigroup.invalid(Control_Applicative.pure(Control_Applicative.applicativeArray)(EmptyField.value));
      };
      if (Data_Boolean.otherwise) {
          return Control_Applicative.pure(Data_Validation_Semigroup.applicativeV(Data_Semigroup.semigroupArray))(str);
      };
      throw new Error("Failed pattern match at Ocelot.Core.Validation line 48, column 1 - line 48, column 59: " + [ str.constructor.name ]);
  };
  var validateNonEmptyMaybe = function (v) {
      if (v instanceof Data_Maybe.Just) {
          return Control_Applicative.pure(Data_Validation_Semigroup.applicativeV(Data_Semigroup.semigroupArray))(v.value0);
      };
      if (v instanceof Data_Maybe.Nothing) {
          return Data_Validation_Semigroup.invalid(Control_Applicative.pure(Control_Applicative.applicativeArray)(EmptyField.value));
      };
      throw new Error("Failed pattern match at Ocelot.Core.Validation line 57, column 1 - line 57, column 62: " + [ v.constructor.name ]);
  };
  var validateNonEmptyArr = function (v) {
      if (v.length === 0) {
          return Data_Validation_Semigroup.invalid(Control_Applicative.pure(Control_Applicative.applicativeArray)(EmptyField.value));
      };
      return Control_Applicative.pure(Data_Validation_Semigroup.applicativeV(Data_Semigroup.semigroupArray))(v);
  };
  var validateMinLength = function (dictFoldable) {
      return function (n) {
          return function (msg) {
              return function (f) {
                  if (Data_Foldable.length(dictFoldable)(Data_Semiring.semiringInt)(f) >= n) {
                      return Control_Applicative.pure(Data_Validation_Semigroup.applicativeV(Data_Semigroup.semigroupArray))(f);
                  };
                  if (Data_Boolean.otherwise) {
                      return Data_Validation_Semigroup.invalid(Control_Applicative.pure(Control_Applicative.applicativeArray)(new UnderMinLength(n, msg)));
                  };
                  throw new Error("Failed pattern match at Ocelot.Core.Validation line 72, column 1 - line 72, column 97: " + [ n.constructor.name, msg.constructor.name, f.constructor.name ]);
              };
          };
      };
  };
  var validateDependence = function (f) {
      return function (msg) {
          return function (item1) {
              return function (item2) {
                  if (f(item1)(item2)) {
                      return Control_Applicative.pure(Data_Validation_Semigroup.applicativeV(Data_Semigroup.semigroupArray))(item1);
                  };
                  if (Data_Boolean.otherwise) {
                      return Data_Validation_Semigroup.invalid(Control_Applicative.pure(Control_Applicative.applicativeArray)(new Dependency(msg)));
                  };
                  throw new Error("Failed pattern match at Ocelot.Core.Validation line 92, column 1 - line 92, column 99: " + [ f.constructor.name, msg.constructor.name, item1.constructor.name, item2.constructor.name ]);
              };
          };
      };
  };
  var showE = function (v) {
      if (v instanceof EmptyField) {
          return "Required";
      };
      if (v instanceof InvalidEmail) {
          return "Must be a valid email";
      };
      if (v instanceof InvalidNumber) {
          return "Must be a valid number";
      };
      if (v instanceof InvalidInteger) {
          return "Must be a valid integer";
      };
      if (v instanceof UnderMinLength) {
          return v.value1;
      };
      if (v instanceof OutOfRange) {
          return v.value0;
      };
      if (v instanceof NotGreaterThan) {
          return v.value0;
      };
      if (v instanceof NotLessThan) {
          return v.value0;
      };
      if (v instanceof Dependency) {
          return v.value0;
      };
      throw new Error("Failed pattern match at Ocelot.Core.Validation line 101, column 1 - line 101, column 35: " + [ v.constructor.name ]);
  };
  var htmlE = function (es) {
      if (Data_Foldable.length(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(es) === 1) {
          return Data_Functor.map(Data_Functor.functorArray)(function ($102) {
              return Halogen_HTML_Core.text(showE($102));
          })(es);
      };
      if (Data_Boolean.otherwise) {
          var toHTML = [ Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("You have errors:") ]), Halogen_HTML_Elements.ul_(Data_Functor.map(Data_Functor.functorArray)(function ($103) {
              return Halogen_HTML_Elements.li_(Data_Array.singleton(Halogen_HTML_Core.text(showE($103))));
          })(es)) ];
          return toHTML;
      };
      throw new Error("Failed pattern match at Ocelot.Core.Validation line 112, column 1 - line 112, column 48: " + [ es.constructor.name ]);
  };
  exports["EmptyField"] = EmptyField;
  exports["InvalidEmail"] = InvalidEmail;
  exports["InvalidNumber"] = InvalidNumber;
  exports["InvalidInteger"] = InvalidInteger;
  exports["UnderMinLength"] = UnderMinLength;
  exports["OutOfRange"] = OutOfRange;
  exports["NotGreaterThan"] = NotGreaterThan;
  exports["NotLessThan"] = NotLessThan;
  exports["Dependency"] = Dependency;
  exports["validateNonEmptyStr"] = validateNonEmptyStr;
  exports["validateNonEmptyArr"] = validateNonEmptyArr;
  exports["validateNonEmptyMaybe"] = validateNonEmptyMaybe;
  exports["validateStrIsEmail"] = validateStrIsEmail;
  exports["validateMinLength"] = validateMinLength;
  exports["validateDependence"] = validateDependence;
  exports["showE"] = showE;
  exports["htmlE"] = htmlE;
})(PS["Ocelot.Core.Validation"] = PS["Ocelot.Core.Validation"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Ocelot_Block_Type = PS["Ocelot.Block.Type"];
  var Ocelot_Core_Validation = PS["Ocelot.Core.Validation"];
  var Prelude = PS["Prelude"];        
  var labelClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "block", "font-bold", "leading-loose", "text-black" ]);
  var helpTextClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(Ocelot_Block_Type.mutedClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "block", "leading-loose" ]));
  var formControlClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "w-full", "mb-10" ]);
  var errorTextClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "leading-loose", "text-red", "font-bold" ]);
  var formControl = function (props) {
      return function (html) {
          var label = function (x) {
              return Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes(labelClasses) ])([ Halogen_HTML_Core.text(x) ]);
          };
          var helpText = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Just) {
                      return Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes(errorTextClasses) ])(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML.fromPlainHTML)(Ocelot_Core_Validation.htmlE(v.value0)));
                  };
                  if (v instanceof Data_Maybe.Nothing && v1 instanceof Data_Maybe.Just) {
                      return Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes(helpTextClasses) ])([ Halogen_HTML_Core.text(v1.value0) ]);
                  };
                  if (v instanceof Data_Maybe.Nothing && v1 instanceof Data_Maybe.Nothing) {
                      return Halogen_HTML_Core.text("");
                  };
                  throw new Error("Failed pattern match at Ocelot.Block.FormControl line 64, column 5 - line 67, column 46: " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(formControlClasses) ])([ Halogen_HTML_Elements.label([ Halogen_HTML_Properties.class_("w-full"), Halogen_HTML_Properties["for"](props.inputId) ])([ label(props.label) ]), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("my-1") ])([ html ]), helpText(props.valid)(props.helpText) ]);
      };
  };
  exports["formControl"] = formControl;
})(PS["Ocelot.Block.FormControl"] = PS["Ocelot.Block.FormControl"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_String = PS["Data.String"];
  var Data_Tuple = PS["Data.Tuple"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_VDom_DOM_Prop = PS["Halogen.VDom.DOM.Prop"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var extract = (function () {
      var f = function (v) {
          if (v instanceof Halogen_VDom_DOM_Prop.Property && v.value0 === "className") {
              return Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(function (v1) {
                  return Data_String.split(" ")(v.value1);
              });
          };
          return Data_Bifunctor.rmap(Data_Tuple.bifunctorTuple)(Data_Function.flip(Data_Array.snoc)(v));
      };
      return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(new Data_Tuple.Tuple([  ], [  ]));
  })();
  var appendIProps = function (ip) {
      return function (ip$prime) {
          var v = extract(ip);
          var v1 = extract(ip$prime);
          var classNames = Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(Data_Array.nub(Data_Eq.eqString)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.value0)(v1.value0)))));
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.value1)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value1)(classNames));
      };
  };
  exports["appendIProps"] = appendIProps;
})(PS["Ocelot.Core.Utils"] = PS["Ocelot.Core.Utils"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var DOM_HTML_Indexed = PS["DOM.HTML.Indexed"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_HTML_Properties_ARIA = PS["Halogen.HTML.Properties.ARIA"];
  var Ocelot_Core_Utils = PS["Ocelot.Core.Utils"];        
  var icon = function (className) {
      return function (iprops) {
          return Halogen_HTML_Elements.span([ Halogen_HTML_Properties_ARIA.label(className) ])([ Halogen_HTML_Elements.span(Ocelot_Core_Utils.appendIProps(iprops)([ Halogen_HTML_Properties_ARIA.hidden("true"), Halogen_HTML_Properties.class_(className) ]))([  ]) ]);
      };
  };
  var info = icon("icon-info");
  var info_ = info([  ]);
  var menu = icon("icon-menu");
  var menu_ = menu([  ]);
  var options = icon("icon-options");
  var options_ = options([  ]);
  var refresh = icon("icon-refresh");
  var refresh_ = refresh([  ]);
  var search = icon("icon-search");
  var search_ = search([  ]);
  var settings = icon("icon-settings");
  var settings_ = settings([  ]);
  var share = icon("icon-share");
  var share_ = share([  ]);
  var timeline = icon("icon-timeline");
  var timeline_ = timeline([  ]);
  var expand = icon("icon-expand");
  var expand_ = expand([  ]);
  var download = icon("icon-download");
  var download_ = download([  ]);
  var dataSources = icon("icon-data-sources");
  var dataSources_ = dataSources([  ]);
  var collapse = icon("icon-collapse");
  var collapse_ = collapse([  ]);
  var close = icon("icon-close");
  var close_ = close([  ]);
  var caratUp = icon("icon-carat-up");
  var caratUp_ = caratUp([  ]);
  var caratRight = icon("icon-carat-right");
  var caratRight_ = caratRight([  ]);
  var caratDown = icon("icon-carat-down");
  var caratDown_ = caratDown([  ]);
  var back = icon("icon-back");
  exports["back"] = back;
  exports["caratDown"] = caratDown;
  exports["caratDown_"] = caratDown_;
  exports["caratRight"] = caratRight;
  exports["caratRight_"] = caratRight_;
  exports["caratUp"] = caratUp;
  exports["caratUp_"] = caratUp_;
  exports["close"] = close;
  exports["close_"] = close_;
  exports["collapse"] = collapse;
  exports["collapse_"] = collapse_;
  exports["dataSources"] = dataSources;
  exports["dataSources_"] = dataSources_;
  exports["download"] = download;
  exports["download_"] = download_;
  exports["expand"] = expand;
  exports["expand_"] = expand_;
  exports["info"] = info;
  exports["info_"] = info_;
  exports["menu"] = menu;
  exports["menu_"] = menu_;
  exports["options"] = options;
  exports["options_"] = options_;
  exports["refresh"] = refresh;
  exports["refresh_"] = refresh_;
  exports["search"] = search;
  exports["search_"] = search_;
  exports["settings"] = settings;
  exports["settings_"] = settings_;
  exports["share"] = share;
  exports["share_"] = share_;
  exports["timeline"] = timeline;
  exports["timeline_"] = timeline_;
})(PS["Ocelot.Block.Icon"] = PS["Ocelot.Block.Icon"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Ocelot_Block_Icon = PS["Ocelot.Block.Icon"];
  var Prelude = PS["Prelude"];        
  var tabTextClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-sm", "tracking-wide", "uppercase", "bold", "inline-flex" ]);
  var tabClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "pt-5", "pb-6", "inline-block", "no-underline" ]);
  var outerClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-black-10", "w-full", "px-6" ]);
  var innerClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "container", "items-end", "mx-auto", "flex", "px-20", "h-16", "list-reset" ]);
  var inactiveTabClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "border-b-2", "border-black-10", "hover:border-blue-88", "hover:text-white", "text-grey-70" ]);
  var errorIconClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-2xl", "text-red", "mr-4", "inline-flex", "align-bottom" ]);
  var activeTabClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "border-b-2", "border-blue-88", "text-white" ]);
  var navigationTab = function (dictEq) {
      return function (activePage) {
          return function (tab) {
              var isActive = Data_Eq.eq(dictEq)(tab.page)(activePage);
              var conditionalTabClasses = function (v) {
                  if (v) {
                      return activeTabClasses;
                  };
                  if (!v) {
                      return inactiveTabClasses;
                  };
                  throw new Error("Failed pattern match at Ocelot.Block.NavigationTab line 121, column 5 - line 121, column 60: " + [ v.constructor.name ]);
              };
              var conditionalIconClasses = function (active) {
                  return function (errors) {
                      if (errors > 0 && active === false) {
                          return errorIconClasses;
                      };
                      if (Data_Boolean.otherwise) {
                          return Data_Array.cons("hidden")(errorIconClasses);
                      };
                      throw new Error("Failed pattern match at Ocelot.Block.NavigationTab line 125, column 5 - line 125, column 68: " + [ active.constructor.name, errors.constructor.name ]);
                  };
              };
              return Halogen_HTML_Elements.li([ Halogen_HTML_Properties.class_("mr-12") ])([ Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href(tab.link), Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(tabClasses)(conditionalTabClasses(isActive))) ])([ Ocelot_Block_Icon.info([ Halogen_HTML_Properties.classes(conditionalIconClasses(isActive)(tab.errors)) ]), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes(tabTextClasses) ])([ Halogen_HTML_Core.text(tab.name) ]) ]) ]);
          };
      };
  };
  var navigationTabs = function (dictEq) {
      return function (v) {
          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(outerClasses) ])([ Halogen_HTML_Elements.ul([ Halogen_HTML_Properties.classes(innerClasses) ])(Data_Functor.map(Data_Functor.functorArray)(navigationTab(dictEq)(v.activePage))(v.tabs)) ]);
      };
  };
  exports["outerClasses"] = outerClasses;
  exports["innerClasses"] = innerClasses;
  exports["tabClasses"] = tabClasses;
  exports["activeTabClasses"] = activeTabClasses;
  exports["inactiveTabClasses"] = inactiveTabClasses;
  exports["tabTextClasses"] = tabTextClasses;
  exports["errorIconClasses"] = errorIconClasses;
  exports["navigationTabs"] = navigationTabs;
  exports["navigationTab"] = navigationTab;
})(PS["Ocelot.Block.NavigationTab"] = PS["Ocelot.Block.NavigationTab"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Ocelot_Block_Button = PS["Ocelot.Block.Button"];
  var Ocelot_Block_Layout = PS["Ocelot.Block.Layout"];
  var Ocelot_Block_NavigationTab = PS["Ocelot.Block.NavigationTab"];
  var Prelude = PS["Prelude"];        
  var outerClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-black-10", "w-full", "px-6" ]);
  var innerClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "container", "items-center", "mx-auto", "flex", "h-24" ]);
  var formHeader = function (props) {
      return Halogen_HTML_Elements.header([ Halogen_HTML_Properties.classes(outerClasses) ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(innerClasses) ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)((function () {
          if (props.brand instanceof Data_Maybe.Just) {
              return [ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("w-20") ])([ Halogen_HTML_Elements.img([ Halogen_HTML_Properties.src(props.brand.value0) ]) ]) ];
          };
          return [  ];
      })())([ Halogen_HTML_Elements.h2([ Halogen_HTML_Properties.class_("flex-1 font-medium") ])([ Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_("text-lg text-grey-70 mr-4") ])([ Halogen_HTML_Core.text(props.name) ]), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_("text-lg text-white") ])([ Halogen_HTML_Core.text(props.title) ]) ]), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_("mr-2") ])([ Ocelot_Block_Button.button({
          type_: Ocelot_Block_Button.Transparent.value
      })([  ])([ Halogen_HTML_Core.text("Cancel") ]) ]), Ocelot_Block_Button.button({
          type_: Ocelot_Block_Button.Primary.value
      })([ Halogen_HTML_Events.onClick(props.onClick) ])([ Halogen_HTML_Core.text("Create") ]) ])) ]);
  };
  exports["outerClasses"] = outerClasses;
  exports["innerClasses"] = innerClasses;
  exports["formHeader"] = formHeader;
})(PS["Ocelot.Block.FormHeader"] = PS["Ocelot.Block.FormHeader"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var DOM_HTML_Indexed = PS["DOM.HTML.Indexed"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Prelude = PS["Prelude"];        
  var buttonClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "font-medium", "no-outline", "text-blue-82" ]);
  var formPanel = function (props) {
      return function (iprops) {
          return function (html) {
              var contentClasses = (function () {
                  if (props.isOpen) {
                      return [ "mb-6" ];
                  };
                  return [ "hidden" ];
              })();
              return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("w-full") ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(contentClasses) ])(html), Halogen_HTML_Elements.button(Data_Semigroup.append(Data_Semigroup.semigroupArray)(iprops)([ Halogen_HTML_Properties.classes(buttonClasses) ]))([ Halogen_HTML.fromPlainHTML(props.renderToggle(props.isOpen)) ]) ]);
          };
      };
  };
  exports["buttonClasses"] = buttonClasses;
  exports["formPanel"] = formPanel;
})(PS["Ocelot.Block.FormPanel"] = PS["Ocelot.Block.FormPanel"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var DOM_HTML_Indexed = PS["DOM.HTML.Indexed"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Prelude = PS["Prelude"];                                                                                                        
  var inputRightBorderClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "border-l", "self-center", "px-4" ]);
  var inputOuterClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-white", "font-light", "rounded-sm", "w-full", "flex" ]);
  var inputInnerClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "cc-blue-88", "disabled:bg-grey-light", "focus:no-outline", "py-3", "rounded-sm", "flex-auto" ]);
  var inputClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(inputOuterClasses)(inputInnerClasses);
  var inputCenterClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "px-4", "self-center" ]);
  var input = function (iprops) {
      return Halogen_HTML_Elements.input(Data_Semigroup.append(Data_Semigroup.semigroupArray)(iprops)([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(inputClasses)(inputCenterClasses)) ]));
  };
  exports["inputOuterClasses"] = inputOuterClasses;
  exports["inputInnerClasses"] = inputInnerClasses;
  exports["inputClasses"] = inputClasses;
  exports["inputCenterClasses"] = inputCenterClasses;
  exports["inputRightBorderClasses"] = inputRightBorderClasses;
  exports["input"] = input;
})(PS["Ocelot.Block.Input"] = PS["Ocelot.Block.Input"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var DOM_HTML_Indexed = PS["DOM.HTML.Indexed"];
  var DOM_HTML_Indexed_InputType = PS["DOM.HTML.Indexed.InputType"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Prelude = PS["Prelude"];        
  var radioClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "inline-flex", "justify-center", "items-center", "content-box", "border-2", "border-solid", "h-3", "w-3", "p-1", "no-content", "rounded-full", "mr-3", "after:all-02s-ease", "after:h-full", "after:w-full", "after:bg-blue-88", "after:no-content", "after:rounded-full", "after:shadow" ]);
  var labelClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "flex-row", "items-center", "inline-block", "py-1", "cursor-pointer", "leading-loose", "text-black" ]);
  var inputClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "checked:sibling:after:opacity-100", "checked:sibling:after:scale-1", "checked:sibling:border-blue-88", "not:checked:sibling:after:opacity-0", "not:checked:sibling:after:scale-0", "not:checked:sibling:border-grey-70-a40", "offscreen" ]);
  var radio = function (props) {
      return function (iprops) {
          var iprops$prime = Data_Semigroup.append(Data_Semigroup.semigroupArray)(iprops)([ Halogen_HTML_Properties.classes(inputClasses), Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputRadio.value) ]);
          return Halogen_HTML_Elements.label([ Halogen_HTML_Properties.classes(labelClasses) ])([ Halogen_HTML_Elements.input(iprops$prime), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes(radioClasses) ])([  ]), Halogen_HTML_Core.text(props.label) ]);
      };
  };
  exports["radio"] = radio;
})(PS["Ocelot.Block.Radio"] = PS["Ocelot.Block.Radio"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var DOM_HTML_Indexed = PS["DOM.HTML.Indexed"];
  var DOM_HTML_Indexed_InputType = PS["DOM.HTML.Indexed.InputType"];
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Prelude = PS["Prelude"];        
  var range = function (iprops) {
      return Halogen_HTML_Elements.input(Data_Semigroup.append(Data_Semigroup.semigroupArray)(iprops)([ Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputRange.value) ]));
  };
  exports["range"] = range;
})(PS["Ocelot.Block.Range"] = PS["Ocelot.Block.Range"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var DOM_HTML_Indexed = PS["DOM.HTML.Indexed"];
  var DOM_HTML_Indexed_InputType = PS["DOM.HTML.Indexed.InputType"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Prelude = PS["Prelude"];        
  var toggleClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "all-02s-ease", "inline-flex", "justify-center", "items-center", "content-box", "h-4", "w-4", "p-1", "rounded-full", "mr-3", "after:bg-white", "after:h-full", "after:w-full", "after:rounded-full", "after:no-content", "after:shadow" ]);
  var labelClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "flex-row", "items-center", "inline-block", "py-1", "cursor-pointer", "leading-loose", "text-black" ]);
  var inputClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "checked:sibling:bg-blue-88", "checked:sibling:pr-4", "not:checked:sibling:bg-grey-light", "not:checked:sibling:pl-4", "offscreen" ]);
  var toggle = function (props) {
      return function (iprops) {
          var iprops$prime = Data_Semigroup.append(Data_Semigroup.semigroupArray)(iprops)([ Halogen_HTML_Properties.classes(inputClasses), Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputCheckbox.value) ]);
          return Halogen_HTML_Elements.label([ Halogen_HTML_Properties.classes(labelClasses) ])([ Halogen_HTML_Elements.input(iprops$prime), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes(toggleClasses) ])([  ]), Halogen_HTML_Core.text(props.label) ]);
      };
  };
  exports["toggle"] = toggle;
})(PS["Ocelot.Block.Toggle"] = PS["Ocelot.Block.Toggle"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_Class = PS["Control.Monad.Aff.Class"];
  var Control_Monad_Aff_Console = PS["Control.Monad.Aff.Console"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Ocelot_Block_FormControl = PS["Ocelot.Block.FormControl"];
  var Ocelot_Block_FormHeader = PS["Ocelot.Block.FormHeader"];
  var Ocelot_Block_FormPanel = PS["Ocelot.Block.FormPanel"];
  var Ocelot_Block_Input = PS["Ocelot.Block.Input"];
  var Ocelot_Block_Radio = PS["Ocelot.Block.Radio"];
  var Ocelot_Block_Range = PS["Ocelot.Block.Range"];
  var Ocelot_Block_Toggle = PS["Ocelot.Block.Toggle"];
  var Prelude = PS["Prelude"];
  var UIGuide_Block_Component = PS["UIGuide.Block.Component"];
  var UIGuide_Block_Documentation = PS["UIGuide.Block.Documentation"];        
  var NoOp = (function () {
      function NoOp(value0) {
          this.value0 = value0;
      };
      NoOp.create = function (value0) {
          return new NoOp(value0);
      };
      return NoOp;
  })();
  var HandleFormHeaderClick = (function () {
      function HandleFormHeaderClick(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HandleFormHeaderClick.create = function (value0) {
          return function (value1) {
              return new HandleFormHeaderClick(value0, value1);
          };
      };
      return HandleFormHeaderClick;
  })();
  var ToggleFormPanel = (function () {
      function ToggleFormPanel(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ToggleFormPanel.create = function (value0) {
          return function (value1) {
              return new ToggleFormPanel(value0, value1);
          };
      };
      return ToggleFormPanel;
  })();
  var component = (function () {
      var render = function (state) {
          return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.documentation({
              header: "Form Header",
              subheader: "The header used on forms"
          })([ UIGuide_Block_Component.component({
              title: "Form Header"
          })([ Ocelot_Block_FormHeader.formHeader({
              name: "Campaign Group",
              onClick: Halogen_HTML_Events.input(HandleFormHeaderClick.create),
              title: "New",
              brand: Data_Maybe.Nothing.value
          }) ]) ]), UIGuide_Block_Documentation.documentation({
              header: "Input",
              subheader: "Inputing very important text"
          })([ UIGuide_Block_Component.component({
              title: "Input"
          })([ Ocelot_Block_Input.input([ Halogen_HTML_Properties.placeholder("davelovesdesignpatterns@gmail.com") ]) ]), UIGuide_Block_Component.component({
              title: "Input with Form Control"
          })([ Ocelot_Block_FormControl.formControl({
              label: "Email",
              helpText: new Data_Maybe.Just("Dave will spam your email with gang of four patterns"),
              valid: Data_Maybe.Nothing.value,
              inputId: "email"
          })(Ocelot_Block_Input.input([ Halogen_HTML_Properties.placeholder("davelovesdesignpatterns@gmail.com"), Halogen_HTML_Properties.id_("email") ])) ]) ]), UIGuide_Block_Documentation.documentation({
              header: "Toggle",
              subheader: "Enable or disable something"
          })([ UIGuide_Block_Component.component({
              title: "Toggle"
          })([ Halogen_HTML_Elements.div_([ Ocelot_Block_Toggle.toggle({
              label: "Something"
          })([  ]), Ocelot_Block_Toggle.toggle({
              label: "Something Else"
          })([  ]), Ocelot_Block_Toggle.toggle({
              label: "A Third Optional Thing"
          })([  ]) ]) ]), UIGuide_Block_Component.component({
              title: "Toggle with Form Control"
          })([ Ocelot_Block_FormControl.formControl({
              label: "Dave's OO Emails",
              helpText: new Data_Maybe.Just("Once enabled, you can never unsubscribe."),
              valid: Data_Maybe.Nothing.value,
              inputId: "toggle"
          })(Ocelot_Block_Toggle.toggle({
              label: "Opt-in"
          })([ Halogen_HTML_Properties.id_("toggle") ])) ]) ]), UIGuide_Block_Documentation.documentation({
              header: "Radio",
              subheader: "Select one option"
          })([ UIGuide_Block_Component.component({
              title: "Radio"
          })([ Halogen_HTML_Elements.div_([ Ocelot_Block_Radio.radio({
              label: "Apples"
          })([ Halogen_HTML_Properties.name("fruit") ]), Ocelot_Block_Radio.radio({
              label: "Bananas"
          })([ Halogen_HTML_Properties.name("fruit") ]), Ocelot_Block_Radio.radio({
              label: "Oranges"
          })([ Halogen_HTML_Properties.name("fruit") ]) ]) ]), UIGuide_Block_Component.component({
              title: "Radio with Form Control"
          })([ Ocelot_Block_FormControl.formControl({
              label: "Platform",
              inputId: "radio",
              helpText: new Data_Maybe.Just("Where do you want your ad to appear?"),
              valid: Data_Maybe.Nothing.value
          })(Halogen_HTML_Elements.div_([ Ocelot_Block_Radio.radio({
              label: "Facebook"
          })([ Halogen_HTML_Properties.name("platform") ]), Ocelot_Block_Radio.radio({
              label: "Instagram"
          })([ Halogen_HTML_Properties.name("platform") ]), Ocelot_Block_Radio.radio({
              label: "Twitter"
          })([ Halogen_HTML_Properties.name("platform") ]) ])) ]) ]), UIGuide_Block_Documentation.documentation({
              header: "Range",
              subheader: "Select a numeric value between a min and max"
          })([ UIGuide_Block_Component.component({
              title: "Range"
          })([ Ocelot_Block_Range.range([ Halogen_HTML_Properties.id_("range_"), Halogen_HTML_Properties.min(0.0), Halogen_HTML_Properties.max(100.0) ]) ]), UIGuide_Block_Component.component({
              title: "Range with Form Control"
          })([ Ocelot_Block_FormControl.formControl({
              label: "Dave's OO Emails",
              helpText: new Data_Maybe.Just("How many do you want?"),
              valid: Data_Maybe.Nothing.value,
              inputId: "range"
          })(Ocelot_Block_Range.range([ Halogen_HTML_Properties.id_("range"), Halogen_HTML_Properties.min(0.0), Halogen_HTML_Properties.max(100.0) ])) ]) ]), UIGuide_Block_Documentation.documentation({
              header: "Form Panel",
              subheader: "Collapse + Expand Form Controls"
          })([ UIGuide_Block_Component.component({
              title: "Form Panel"
          })([ Ocelot_Block_FormPanel.formPanel({
              isOpen: state.formPanelIsOpen,
              renderToggle: function (isOpen) {
                  if (isOpen) {
                      return Halogen_HTML_Core.text("Hide Advanced Options");
                  };
                  return Halogen_HTML_Core.text("Show Advanced Options");
              }
          })([ Halogen_HTML_Events.onClick(Halogen_HTML_Events.input(ToggleFormPanel.create)) ])([ Ocelot_Block_FormControl.formControl({
              label: "Email",
              helpText: new Data_Maybe.Just("Dave will spam your email with gang of four patterns"),
              valid: Data_Maybe.Nothing.value,
              inputId: "email'"
          })(Ocelot_Block_Input.input([ Halogen_HTML_Properties.placeholder("davelovesdesignpatterns@gmail.com"), Halogen_HTML_Properties.id_("email'") ])) ]) ]) ]) ]);
      };
      var $$eval = function (v) {
          if (v instanceof NoOp) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
          };
          if (v instanceof HandleFormHeaderClick) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(Control_Monad_Aff_Class.monadAffAff))(Control_Monad_Aff_Console.log("submit form")))(function () {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
              });
          };
          if (v instanceof ToggleFormPanel) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                      var $9 = {};
                      for (var $10 in v2) {
                          if ({}.hasOwnProperty.call(v2, $10)) {
                              $9[$10] = v2[$10];
                          };
                      };
                      $9.formPanelIsOpen = !v1.formPanelIsOpen;
                      return $9;
                  }))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                  });
              });
          };
          throw new Error("Failed pattern match at UIGuide.Components.FormControl line 47, column 12 - line 58, column 15: " + [ v.constructor.name ]);
      };
      return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({
          initialState: Data_Function["const"]({
              formPanelIsOpen: false
          }),
          render: render,
          "eval": $$eval,
          receiver: Data_Function["const"](Data_Maybe.Nothing.value)
      });
  })();
  exports["NoOp"] = NoOp;
  exports["HandleFormHeaderClick"] = HandleFormHeaderClick;
  exports["ToggleFormPanel"] = ToggleFormPanel;
  exports["component"] = component;
})(PS["UIGuide.Components.FormControl"] = PS["UIGuide.Components.FormControl"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Ocelot_Block_Icon = PS["Ocelot.Block.Icon"];
  var Prelude = PS["Prelude"];
  var UIGuide_Block_Component = PS["UIGuide.Block.Component"];
  var UIGuide_Block_Documentation = PS["UIGuide.Block.Documentation"];
  var icon = (function () {
      var render = function (v) {
          return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.documentation({
              header: "Icon",
              subheader: "Ocelot Font Icons"
          })([ UIGuide_Block_Component.component({
              title: "Icons"
          })([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("flex justify-between space-between text-3xl w-full") ])([ Ocelot_Block_Icon.back([ Halogen_HTML_Properties.class_("text-blue-88") ]), Ocelot_Block_Icon.caratDown_, Ocelot_Block_Icon.caratRight_, Ocelot_Block_Icon.caratUp_, Ocelot_Block_Icon.close_, Ocelot_Block_Icon.collapse_, Ocelot_Block_Icon.dataSources_, Ocelot_Block_Icon.download_, Ocelot_Block_Icon.expand_, Ocelot_Block_Icon.info_, Ocelot_Block_Icon.menu_, Ocelot_Block_Icon.options_, Ocelot_Block_Icon.refresh_, Ocelot_Block_Icon.search_, Ocelot_Block_Icon.settings_, Ocelot_Block_Icon.share_, Ocelot_Block_Icon.timeline_ ]) ]) ]) ]);
      };
      var $$eval = function (v) {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      };
      return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": $$eval,
          receiver: Data_Function["const"](Data_Maybe.Nothing.value)
      });
  })();
  exports["icon"] = icon;
})(PS["UIGuide.Components.Icon"] = PS["UIGuide.Components.Icon"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Ocelot_Block_NavigationTab = PS["Ocelot.Block.NavigationTab"];
  var Prelude = PS["Prelude"];
  var UIGuide_Block_Component = PS["UIGuide.Block.Component"];
  var UIGuide_Block_Documentation = PS["UIGuide.Block.Documentation"];
  var component = (function () {
      var render = function (v) {
          var tabConfig = function (tabs) {
              return {
                  tabs: tabs,
                  activePage: true
              };
          };
          var errorTabs = [ {
              name: "Accounts & Spend",
              link: "#",
              page: true,
              errors: 0
          }, {
              name: "Automatic Optimization",
              link: "#",
              page: false,
              errors: 1
          }, {
              name: "Creative",
              link: "#",
              page: false,
              errors: 0
          } ];
          var defaultTabs = [ {
              name: "Accounts & Spend",
              link: "#",
              page: true,
              errors: 0
          }, {
              name: "Automatic Optimization",
              link: "#",
              page: false,
              errors: 0
          }, {
              name: "Creative",
              link: "#",
              page: false,
              errors: 0
          } ];
          return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.documentation({
              header: "Tabs",
              subheader: "Tabs for navigating, eg. between form pages"
          })([ UIGuide_Block_Component.component({
              title: "Tabs"
          })([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("bg-black-10 flex items-center justify-center h-full w-full") ])([ Ocelot_Block_NavigationTab.navigationTabs(Data_Eq.eqBoolean)(tabConfig(defaultTabs)) ]) ]), UIGuide_Block_Component.component({
              title: "Tabs with Errors"
          })([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("bg-black-10 flex items-center justify-center h-full w-full") ])([ Ocelot_Block_NavigationTab.navigationTabs(Data_Eq.eqBoolean)(tabConfig(errorTabs)) ]) ]) ]) ]);
      };
      var $$eval = function (v) {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      };
      return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": $$eval,
          receiver: Data_Function["const"](Data_Maybe.Nothing.value)
      });
  })();
  exports["component"] = component;
})(PS["UIGuide.Components.Tab"] = PS["UIGuide.Components.Tab"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Internal_Market = PS["Data.Lens.Internal.Market"];
  var Data_Lens_Prism = PS["Data.Lens.Prism"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];        
  var NotAsked = (function () {
      function NotAsked() {

      };
      NotAsked.value = new NotAsked();
      return NotAsked;
  })();
  var Loading = (function () {
      function Loading() {

      };
      Loading.value = new Loading();
      return Loading;
  })();
  var Failure = (function () {
      function Failure(value0) {
          this.value0 = value0;
      };
      Failure.create = function (value0) {
          return new Failure(value0);
      };
      return Failure;
  })();
  var Success = (function () {
      function Success(value0) {
          this.value0 = value0;
      };
      Success.create = function (value0) {
          return new Success(value0);
      };
      return Success;
  })();
  var functorRemoteData = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof NotAsked) {
              return NotAsked.value;
          };
          if (m instanceof Loading) {
              return Loading.value;
          };
          if (m instanceof Failure) {
              return new Failure(m.value0);
          };
          if (m instanceof Success) {
              return new Success(f(m.value0));
          };
          throw new Error("Failed pattern match at Network.RemoteData line 41, column 8 - line 41, column 60: " + [ m.constructor.name ]);
      };
  });
  var fromEither = function (v) {
      if (v instanceof Data_Either.Left) {
          return new Failure(v.value0);
      };
      if (v instanceof Data_Either.Right) {
          return new Success(v.value0);
      };
      throw new Error("Failed pattern match at Network.RemoteData line 100, column 1 - line 100, column 55: " + [ v.constructor.name ]);
  };
  exports["NotAsked"] = NotAsked;
  exports["Loading"] = Loading;
  exports["Failure"] = Failure;
  exports["Success"] = Success;
  exports["fromEither"] = fromEither;
  exports["functorRemoteData"] = functorRemoteData;
})(PS["Network.RemoteData"] = PS["Network.RemoteData"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad_Store = PS["Control.Comonad.Store"];
  var Control_Comonad_Store_Class = PS["Control.Comonad.Store.Class"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Tuple = PS["Data.Tuple"];
  var Halogen = PS["Halogen"];
  var Prelude = PS["Prelude"];        
  var updateStore = function (r) {
      return function (f) {
          return function ($5) {
              return (function (v) {
                  return Control_Comonad_Store.store(r)(v.value1);
              })(Control_Comonad_Store.runStore(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(f)($5)));
          };
      };
  };
  var getState = function (dictMonadState) {
      return Control_Bind.bindFlipped((dictMonadState.Monad0()).Bind1())(function ($6) {
          return Control_Applicative.pure((dictMonadState.Monad0()).Applicative0())(Control_Comonad_Store.runStore($6));
      })(Control_Monad_State_Class.get(dictMonadState));
  };
  exports["getState"] = getState;
  exports["updateStore"] = updateStore;
})(PS["Select.Internal.State"] = PS["Select.Internal.State"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Comonad_Store = PS["Control.Comonad.Store"];
  var Control_Comonad_Store_Class = PS["Control.Comonad.Store.Class"];
  var Control_Comonad_Store_Trans = PS["Control.Comonad.Store.Trans"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Monad_Aff_Class = PS["Control.Monad.Aff.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_Event_Event = PS["DOM.Event.Event"];
  var DOM_Event_FocusEvent = PS["DOM.Event.FocusEvent"];
  var DOM_Event_KeyboardEvent = PS["DOM.Event.KeyboardEvent"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_HTML_HTMLElement = PS["DOM.HTML.HTMLElement"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Prelude = PS["Prelude"];
  var Select_Internal_State = PS["Select.Internal.State"];        
  var Off = (function () {
      function Off() {

      };
      Off.value = new Off();
      return Off;
  })();
  var On = (function () {
      function On() {

      };
      On.value = new On();
      return On;
  })();
  var Prev = (function () {
      function Prev() {

      };
      Prev.value = new Prev();
      return Prev;
  })();
  var Next = (function () {
      function Next() {

      };
      Next.value = new Next();
      return Next;
  })();
  var Index = (function () {
      function Index(value0) {
          this.value0 = value0;
      };
      Index.create = function (value0) {
          return new Index(value0);
      };
      return Index;
  })();
  var Down = (function () {
      function Down() {

      };
      Down.value = new Down();
      return Down;
  })();
  var Up = (function () {
      function Up() {

      };
      Up.value = new Up();
      return Up;
  })();
  var Searched = (function () {
      function Searched(value0) {
          this.value0 = value0;
      };
      Searched.create = function (value0) {
          return new Searched(value0);
      };
      return Searched;
  })();
  var Selected = (function () {
      function Selected(value0) {
          this.value0 = value0;
      };
      Selected.create = function (value0) {
          return new Selected(value0);
      };
      return Selected;
  })();
  var VisibilityChanged = (function () {
      function VisibilityChanged(value0) {
          this.value0 = value0;
      };
      VisibilityChanged.create = function (value0) {
          return new VisibilityChanged(value0);
      };
      return VisibilityChanged;
  })();
  var Emit = (function () {
      function Emit(value0) {
          this.value0 = value0;
      };
      Emit.create = function (value0) {
          return new Emit(value0);
      };
      return Emit;
  })();
  var TextInput = (function () {
      function TextInput() {

      };
      TextInput.value = new TextInput();
      return TextInput;
  })();
  var Search = (function () {
      function Search(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Search.create = function (value0) {
          return function (value1) {
              return new Search(value0, value1);
          };
      };
      return Search;
  })();
  var TriggerFocus = (function () {
      function TriggerFocus(value0) {
          this.value0 = value0;
      };
      TriggerFocus.create = function (value0) {
          return new TriggerFocus(value0);
      };
      return TriggerFocus;
  })();
  var CaptureFocus = (function () {
      function CaptureFocus(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CaptureFocus.create = function (value0) {
          return function (value1) {
              return new CaptureFocus(value0, value1);
          };
      };
      return CaptureFocus;
  })();
  var Highlight = (function () {
      function Highlight(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Highlight.create = function (value0) {
          return function (value1) {
              return new Highlight(value0, value1);
          };
      };
      return Highlight;
  })();
  var Select = (function () {
      function Select(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Select.create = function (value0) {
          return function (value1) {
              return new Select(value0, value1);
          };
      };
      return Select;
  })();
  var Key = (function () {
      function Key(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Key.create = function (value0) {
          return function (value1) {
              return new Key(value0, value1);
          };
      };
      return Key;
  })();
  var Mouse = (function () {
      function Mouse(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Mouse.create = function (value0) {
          return function (value1) {
              return new Mouse(value0, value1);
          };
      };
      return Mouse;
  })();
  var Blur = (function () {
      function Blur(value0) {
          this.value0 = value0;
      };
      Blur.create = function (value0) {
          return new Blur(value0);
      };
      return Blur;
  })();
  var SetVisibility = (function () {
      function SetVisibility(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetVisibility.create = function (value0) {
          return function (value1) {
              return new SetVisibility(value0, value1);
          };
      };
      return SetVisibility;
  })();
  var ToggleVisibility = (function () {
      function ToggleVisibility(value0) {
          this.value0 = value0;
      };
      ToggleVisibility.create = function (value0) {
          return new ToggleVisibility(value0);
      };
      return ToggleVisibility;
  })();
  var ReplaceItems = (function () {
      function ReplaceItems(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ReplaceItems.create = function (value0) {
          return function (value1) {
              return new ReplaceItems(value0, value1);
          };
      };
      return ReplaceItems;
  })();
  var Raise = (function () {
      function Raise(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Raise.create = function (value0) {
          return function (value1) {
              return new Raise(value0, value1);
          };
      };
      return Raise;
  })();
  var Receive = (function () {
      function Receive(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Receive.create = function (value0) {
          return function (value1) {
              return new Receive(value0, value1);
          };
      };
      return Receive;
  })();
  var eqVisibility = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Off && y instanceof Off) {
              return true;
          };
          if (x instanceof On && y instanceof On) {
              return true;
          };
          return false;
      };
  });
  var component = function (dictMonadAff) {
      var initialState = function (i) {
          return Control_Comonad_Store.store(i.render)({
              inputType: i.inputType,
              search: Data_Maybe.fromMaybe("")(i.initialSearch),
              debounceTime: Data_Maybe.fromMaybe(0.0)(i.debounceTime),
              debouncer: Data_Maybe.Nothing.value,
              inputElement: Data_Maybe.Nothing.value,
              items: i.items,
              highlightedIndex: Data_Maybe.Nothing.value,
              visibility: Off.value,
              lastIndex: Data_Array.length(i.items) - 1 | 0,
              mouseDown: false
          });
      };
      var $$eval = function (v) {
          if (v instanceof Search) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                      var $53 = {};
                      for (var $54 in v2) {
                          if ({}.hasOwnProperty.call(v2, $54)) {
                              $53[$54] = v2[$54];
                          };
                      };
                      $53.search = v.value0;
                      return $53;
                  })))(function () {
                      if (v1.value1.inputType instanceof TextInput && v1.value1.debouncer instanceof Data_Maybe.Nothing) {
                          return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(Data_Unit.unit)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Control_Monad_Aff_AVar.makeEmptyVar))(function (v2) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Control_Monad_Aff.forkAff(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Aff.delay(v1.value1.debounceTime))(function () {
                                  return Control_Monad_Aff_AVar.putVar(Data_Unit.unit)(v2);
                              }))))(function (v3) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.fork(dictMonadAff)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Control_Monad_Aff_AVar.takeVar(v2)))(function (v4) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v5) {
                                          var $60 = {};
                                          for (var $61 in v5) {
                                              if ({}.hasOwnProperty.call(v5, $61)) {
                                                  $60[$61] = v5[$61];
                                              };
                                          };
                                          $60.debouncer = Data_Maybe.Nothing.value;
                                          return $60;
                                      })))(function () {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v5) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new Searched(v5.value1.search)))(function () {
                                                  return $$eval(new Highlight(new Index(0), v.value1));
                                              });
                                          });
                                      });
                                  })))(function (v4) {
                                      return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v5) {
                                          var $66 = {};
                                          for (var $67 in v5) {
                                              if ({}.hasOwnProperty.call(v5, $67)) {
                                                  $66[$67] = v5[$67];
                                              };
                                          };
                                          $66.debouncer = new Data_Maybe.Just({
                                              "var": v2,
                                              fiber: v3
                                          });
                                          return $66;
                                      }));
                                  });
                              });
                          }));
                      };
                      if (v1.value1.inputType instanceof TextInput && v1.value1.debouncer instanceof Data_Maybe.Just) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Control_Monad_Aff.killFiber(Control_Monad_Eff_Exception.error("Time's up!"))(v1.value1.debouncer.value0.fiber)))(function (v2) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Control_Monad_Aff.forkAff(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Aff.delay(v1.value1.debounceTime))(function () {
                                  return Control_Monad_Aff_AVar.putVar(Data_Unit.unit)(v1["value1"]["debouncer"]["value0"]["var"]);
                              }))))(function (v3) {
                                  return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v4) {
                                      var $70 = {};
                                      for (var $71 in v4) {
                                          if ({}.hasOwnProperty.call(v4, $71)) {
                                              $70[$71] = v4[$71];
                                          };
                                      };
                                      $70.debouncer = new Data_Maybe.Just({
                                          "var": v1["value1"]["debouncer"]["value0"]["var"],
                                          fiber: v3
                                      });
                                      return $70;
                                  }));
                              });
                          });
                      };
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  });
              }));
          };
          if (v instanceof TriggerFocus) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value0)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  return Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function ($173) {
                      return Control_Monad_Eff_Class.liftEff(Halogen_Query_HalogenM.monadEffHalogenM(dictMonadAff.MonadEff0()))(DOM_HTML_HTMLElement.focus($173));
                  })(v1.value1.inputElement);
              }));
          };
          if (v instanceof CaptureFocus) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  var elementFromFocusEvent = function ($174) {
                      return Data_Either.hush(Control_Monad_Except.runExcept(DOM_HTML_Types.readHTMLElement(Data_Foreign.toForeign(DOM_Event_Event.currentTarget(DOM_Event_Types.focusEventToEvent($174))))));
                  };
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                      var $83 = {};
                      for (var $84 in v2) {
                          if ({}.hasOwnProperty.call(v2, $84)) {
                              $83[$84] = v2[$84];
                          };
                      };
                      $83.inputElement = elementFromFocusEvent(v.value0);
                      return $83;
                  })))(function () {
                      return $$eval(new SetVisibility(On.value, v.value1));
                  });
              }));
          };
          if (v instanceof Highlight) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  var $91 = Data_Eq.eq(eqVisibility)(v1.value1.visibility)(Off.value);
                  if ($91) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                  };
                  return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)((function () {
                      if (v.value0 instanceof Prev) {
                          if (v1.value1.highlightedIndex instanceof Data_Maybe.Just && v1.value1.highlightedIndex.value0 !== 0) {
                              return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                                  var $94 = {};
                                  for (var $95 in v2) {
                                      if ({}.hasOwnProperty.call(v2, $95)) {
                                          $94[$95] = v2[$95];
                                      };
                                  };
                                  $94.highlightedIndex = new Data_Maybe.Just(v1.value1.highlightedIndex.value0 - 1 | 0);
                                  return $94;
                              }));
                          };
                          return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                              var $98 = {};
                              for (var $99 in v2) {
                                  if ({}.hasOwnProperty.call(v2, $99)) {
                                      $98[$99] = v2[$99];
                                  };
                              };
                              $98.highlightedIndex = new Data_Maybe.Just(v1.value1.lastIndex);
                              return $98;
                          }));
                      };
                      if (v.value0 instanceof Next) {
                          if (v1.value1.highlightedIndex instanceof Data_Maybe.Just && v1.value1.highlightedIndex.value0 !== v1.value1.lastIndex) {
                              return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                                  var $102 = {};
                                  for (var $103 in v2) {
                                      if ({}.hasOwnProperty.call(v2, $103)) {
                                          $102[$103] = v2[$103];
                                      };
                                  };
                                  $102.highlightedIndex = new Data_Maybe.Just(v1.value1.highlightedIndex.value0 + 1 | 0);
                                  return $102;
                              }));
                          };
                          return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                              var $106 = {};
                              for (var $107 in v2) {
                                  if ({}.hasOwnProperty.call(v2, $107)) {
                                      $106[$107] = v2[$107];
                                  };
                              };
                              $106.highlightedIndex = new Data_Maybe.Just(0);
                              return $106;
                          }));
                      };
                      if (v.value0 instanceof Index) {
                          return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                              var $109 = {};
                              for (var $110 in v2) {
                                  if ({}.hasOwnProperty.call(v2, $110)) {
                                      $109[$110] = v2[$110];
                                  };
                              };
                              $109.highlightedIndex = new Data_Maybe.Just(v.value0.value0);
                              return $109;
                          }));
                      };
                      throw new Error("Failed pattern match at Select line 195, column 55 - line 202, column 70: " + [ v.value0.constructor.name ]);
                  })());
              });
          };
          if (v instanceof Select) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  var $118 = Data_Eq.eq(eqVisibility)(v1.value1.visibility)(Off.value);
                  if ($118) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                  };
                  var v2 = Data_Array.index(v1.value1.items)(v.value0);
                  if (v2 instanceof Data_Maybe.Just) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new Selected(v2.value0)))(function () {
                          return $$eval(new TriggerFocus(v.value1));
                      });
                  };
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
              });
          };
          if (v instanceof Key) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  var $126 = Data_Eq.eq(eqVisibility)(v1.value1.visibility)(Off.value);
                  if ($126) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                  };
                  var prevent = function ($175) {
                      return Control_Monad_Eff_Class.liftEff(Halogen_Query_HalogenM.monadEffHalogenM(dictMonadAff.MonadEff0()))(DOM_Event_Event.preventDefault(DOM_Event_Types.keyboardEventToEvent($175)));
                  };
                  var v2 = DOM_Event_KeyboardEvent.code(v.value0);
                  if (v2 === "ArrowUp") {
                      return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(prevent(v.value0))($$eval(new Highlight(Prev.value, v.value1)));
                  };
                  if (v2 === "ArrowDown") {
                      return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(prevent(v.value0))($$eval(new Highlight(Next.value, v.value1)));
                  };
                  if (v2 === "Escape") {
                      return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(prevent(v.value0))(function () {
                          return Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function ($176) {
                              return Control_Monad_Eff_Class.liftEff(Halogen_Query_HalogenM.monadEffHalogenM(dictMonadAff.MonadEff0()))(DOM_HTML_HTMLElement.blur($176));
                          })(v1.value1.inputElement);
                      }));
                  };
                  if (v2 === "Enter") {
                      return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(prevent(v.value0))(function () {
                          return Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function (index) {
                              return $$eval(new Select(index, v.value1));
                          })(v1.value1.highlightedIndex);
                      }));
                  };
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
              });
          };
          if (v instanceof Mouse) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  var $133 = Data_Eq.eq(eqVisibility)(v1.value1.visibility)(Off.value);
                  if ($133) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                  };
                  if (v.value0 instanceof Down) {
                      return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                          var $135 = {};
                          for (var $136 in v2) {
                              if ({}.hasOwnProperty.call(v2, $136)) {
                                  $135[$136] = v2[$136];
                              };
                          };
                          $135.mouseDown = true;
                          return $135;
                      })))(Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1));
                  };
                  if (v.value0 instanceof Up) {
                      return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                          var $138 = {};
                          for (var $139 in v2) {
                              if ({}.hasOwnProperty.call(v2, $139)) {
                                  $138[$139] = v2[$139];
                              };
                          };
                          $138.mouseDown = false;
                          return $138;
                      })))($$eval(new TriggerFocus(v.value1)));
                  };
                  throw new Error("Failed pattern match at Select line 229, column 50 - line 231, column 84: " + [ v.value0.constructor.name ]);
              });
          };
          if (v instanceof Blur) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  var $146 = Data_Eq.eq(eqVisibility)(v1.value1.visibility)(Off.value) || v1.value1.mouseDown;
                  if ($146) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
                  };
                  return $$eval(new SetVisibility(Off.value, v.value0));
              });
          };
          if (v instanceof SetVisibility) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                  if (v.value0 instanceof Off) {
                      return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                          var $151 = {};
                          for (var $152 in v2) {
                              if ({}.hasOwnProperty.call(v2, $152)) {
                                  $151[$152] = v2[$152];
                              };
                          };
                          $151.visibility = v.value0;
                          return $151;
                      }));
                  };
                  if (v.value0 instanceof On) {
                      return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                          var $154 = {};
                          for (var $155 in v2) {
                              if ({}.hasOwnProperty.call(v2, $155)) {
                                  $154[$155] = v2[$155];
                              };
                          };
                          $154.visibility = v.value0;
                          $154.highlightedIndex = Data_Maybe.Nothing.value;
                          return $154;
                      }));
                  };
                  throw new Error("Failed pattern match at Select line 240, column 9 - line 242, column 83: " + [ v.value0.constructor.name ]);
              })())(function () {
                  return Halogen_Query_HalogenM.raise(new VisibilityChanged(v.value0));
              }));
          };
          if (v instanceof ToggleVisibility) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value0)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  if (v1.value1.visibility instanceof Off) {
                      return $$eval(new SetVisibility(On.value, v.value0));
                  };
                  if (v1.value1.visibility instanceof On) {
                      return $$eval(new SetVisibility(Off.value, v.value0));
                  };
                  throw new Error("Failed pattern match at Select line 247, column 9 - line 249, column 44: " + [ v1.value1.visibility.constructor.name ]);
              }));
          };
          if (v instanceof ReplaceItems) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v1) {
                  var $164 = {};
                  for (var $165 in v1) {
                      if ({}.hasOwnProperty.call(v1, $165)) {
                          $164[$165] = v1[$165];
                      };
                  };
                  $164.items = v.value0;
                  $164.lastIndex = Data_Array.length(v.value0) - 1 | 0;
                  $164.highlightedIndex = Data_Maybe.Nothing.value;
                  return $164;
              })));
          };
          if (v instanceof Raise) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Halogen_Query_HalogenM.raise(new Emit(v.value0)));
          };
          if (v instanceof Receive) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Select_Internal_State.updateStore(v.value0.render)(Control_Category.id(Control_Category.categoryFn))));
          };
          throw new Error("Failed pattern match at Select line 139, column 12 - line 259, column 68: " + [ v.constructor.name ]);
      };
      return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({
          initialState: initialState,
          render: Control_Comonad.extract(Control_Comonad_Store_Trans.comonadStoreT(Data_Identity.comonadIdentity)),
          "eval": $$eval,
          receiver: Halogen_HTML_Events.input(Receive.create)
      });
  };
  exports["Search"] = Search;
  exports["TriggerFocus"] = TriggerFocus;
  exports["CaptureFocus"] = CaptureFocus;
  exports["Highlight"] = Highlight;
  exports["Select"] = Select;
  exports["Key"] = Key;
  exports["Mouse"] = Mouse;
  exports["Blur"] = Blur;
  exports["SetVisibility"] = SetVisibility;
  exports["ToggleVisibility"] = ToggleVisibility;
  exports["ReplaceItems"] = ReplaceItems;
  exports["Raise"] = Raise;
  exports["Receive"] = Receive;
  exports["Prev"] = Prev;
  exports["Next"] = Next;
  exports["Index"] = Index;
  exports["Down"] = Down;
  exports["Up"] = Up;
  exports["Off"] = Off;
  exports["On"] = On;
  exports["TextInput"] = TextInput;
  exports["Searched"] = Searched;
  exports["Selected"] = Selected;
  exports["VisibilityChanged"] = VisibilityChanged;
  exports["Emit"] = Emit;
  exports["component"] = component;
  exports["eqVisibility"] = eqVisibility;
})(PS["Select"] = PS["Select"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Prelude = PS["Prelude"];
  var Select = PS["Select"];                                                                                                                                                                                                                                                                                                                                                          
  var setItemProps = function (index) {
      return Data_Function.flip(Data_Semigroup.append(Data_Semigroup.semigroupArray))([ Halogen_HTML_Events.onMouseDown(Halogen_HTML_Events.input_(Select.Select.create(index))), Halogen_HTML_Events.onMouseOver(Halogen_HTML_Events.input_(Select.Highlight.create(new Select.Index(index)))), Halogen_HTML_Events.onKeyDown(Halogen_HTML_Events.input(Select.Key.create)), Halogen_HTML_Events.onBlur(Halogen_HTML_Events.input_(Select.Blur.create)) ]);
  };
  var setInputProps = Data_Function.flip(Data_Semigroup.append(Data_Semigroup.semigroupArray))([ Halogen_HTML_Events.onFocus(Halogen_HTML_Events.input(Select.CaptureFocus.create)), Halogen_HTML_Events.onKeyDown(Halogen_HTML_Events.input(Select.Key.create)), Halogen_HTML_Events.onValueInput(Halogen_HTML_Events.input(Select.Search.create)), Halogen_HTML_Events.onBlur(Halogen_HTML_Events.input_(Select.Blur.create)), Halogen_HTML_Properties.tabIndex(0) ]);
  var setContainerProps = Data_Function.flip(Data_Semigroup.append(Data_Semigroup.semigroupArray))([ Halogen_HTML_Events.onMouseDown(Halogen_HTML_Events.input_(Select.Mouse.create(Select.Down.value))), Halogen_HTML_Events.onMouseUp(Halogen_HTML_Events.input_(Select.Mouse.create(Select.Up.value))) ]);
  exports["setInputProps"] = setInputProps;
  exports["setContainerProps"] = setContainerProps;
  exports["setItemProps"] = setItemProps;
})(PS["Select.Utils.Setters"] = PS["Select.Utils.Setters"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var DOM_HTML_Indexed = PS["DOM.HTML.Indexed"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_Fuzzy = PS["Data.Fuzzy"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_StrMap = PS["Data.StrMap"];
  var Halogen = PS["Halogen"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Prelude = PS["Prelude"];
  var Select = PS["Select"];
  var Select_Utils_Setters = PS["Select.Utils.Setters"];        
  var ulClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "list-reset" ]);
  var liClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "px-3", "py-2", "rounded-sm", "text-grey-darkest", "group", "leading-normal", "hover:bg-grey-lighter" ]);
  var buttonClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "float-right", "invisible", "group-hover:visible" ]);
  var selectionGroup = function (f) {
      return function (props) {
          return function (item) {
              return Halogen_HTML_Elements.div(props)([ Halogen_HTML.fromPlainHTML(f(item)), Halogen_HTML_Elements.button([ Halogen_HTML_Properties.classes(buttonClasses) ])([ Halogen_HTML_Core.text("\u2715") ]) ]);
          };
      };
  };
  var boldMatches = function (key) {
      return function (v) {
          var boldMatch = function (v1) {
              if (v1 instanceof Data_Either.Left) {
                  return Halogen_HTML_Core.text(v1.value0);
              };
              if (v1 instanceof Data_Either.Right) {
                  return Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_("font-bold") ])([ Halogen_HTML_Core.text(v1.value0) ]);
              };
              throw new Error("Failed pattern match at Ocelot.Block.ItemContainer line 133, column 5 - line 133, column 39: " + [ v1.constructor.name ]);
          };
          return Data_Functor.map(Data_Functor.functorArray)(boldMatch)(Data_Maybe.fromMaybe([ new Data_Either.Left(key) ])(Data_StrMap.lookup(key)(v.segments)));
      };
  };
  var baseClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-white", "rounded-sm", "w-full" ]);
  var itemContainerClasses = (function () {
      var names = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "absolute", "shadow", "max-h-80", "overflow-y-scroll", "pin-t", "pin-l", "z-50" ]);
      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(baseClasses)(names);
  })();
  var itemContainer = function (highlightIndex) {
      return function (html) {
          var hover = function (i) {
              var $8 = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(highlightIndex)(new Data_Maybe.Just(i));
              if ($8) {
                  return Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-grey-lighter" ]);
              };
              return Data_Monoid.mempty(Data_Monoid.monoidArray);
          };
          return Halogen_HTML_Elements.div(Select_Utils_Setters.setContainerProps([ Halogen_HTML_Properties.classes(itemContainerClasses) ]))([ Halogen_HTML_Elements.ul([ Halogen_HTML_Properties.classes(ulClasses) ])(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(function (i) {
              return function (h) {
                  return Halogen_HTML_Elements.li(Select_Utils_Setters.setItemProps(i)([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(liClasses)(hover(i))) ]))([ Halogen_HTML.fromPlainHTML(h) ]);
              };
          })(html)) ]);
      };
  };
  var selectionContainerClasses = (function () {
      var names = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "border-b", "border-grey-lighter", "px-1", "py-1" ]);
      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(baseClasses)(names);
  })();
  var selectionContainer = function (html) {
      return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(selectionContainerClasses) ])([ Halogen_HTML_Elements.ul([ Halogen_HTML_Properties.classes(ulClasses) ])(Data_Functor.mapFlipped(Data_Functor.functorArray)(html)(function (h) {
          return Halogen_HTML_Elements.li([ Halogen_HTML_Properties.classes(liClasses) ])([ h ]);
      })) ]);
  };
  exports["baseClasses"] = baseClasses;
  exports["selectionContainerClasses"] = selectionContainerClasses;
  exports["itemContainerClasses"] = itemContainerClasses;
  exports["ulClasses"] = ulClasses;
  exports["liClasses"] = liClasses;
  exports["buttonClasses"] = buttonClasses;
  exports["itemContainer"] = itemContainer;
  exports["selectionContainer"] = selectionContainer;
  exports["selectionGroup"] = selectionGroup;
  exports["boldMatches"] = boldMatches;
})(PS["Ocelot.Block.ItemContainer"] = PS["Ocelot.Block.ItemContainer"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Comonad_Store = PS["Control.Comonad.Store"];
  var Control_Comonad_Store_Class = PS["Control.Comonad.Store.Class"];
  var Control_Comonad_Store_Trans = PS["Control.Comonad.Store.Trans"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Monad_Aff_Class = PS["Control.Monad.Aff.Class"];
  var Control_Monad_Aff_Console = PS["Control.Monad.Aff.Console"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Fuzzy = PS["Data.Fuzzy"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ratio = PS["Data.Ratio"];
  var Data_Rational = PS["Data.Rational"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_Query = PS["Halogen.Query"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Network_HTTP_Affjax = PS["Network.HTTP.Affjax"];
  var Network_RemoteData = PS["Network.RemoteData"];
  var Prelude = PS["Prelude"];
  var Select = PS["Select"];
  var Select_Internal_State = PS["Select.Internal.State"];        
  var One = (function () {
      function One(value0) {
          this.value0 = value0;
      };
      One.create = function (value0) {
          return new One(value0);
      };
      return One;
  })();
  var Limit = (function () {
      function Limit(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Limit.create = function (value0) {
          return function (value1) {
              return new Limit(value0, value1);
          };
      };
      return Limit;
  })();
  var Many = (function () {
      function Many(value0) {
          this.value0 = value0;
      };
      Many.create = function (value0) {
          return new Many(value0);
      };
      return Many;
  })();
  var ItemSelected = (function () {
      function ItemSelected() {

      };
      ItemSelected.value = new ItemSelected();
      return ItemSelected;
  })();
  var ItemRemoved = (function () {
      function ItemRemoved() {

      };
      ItemRemoved.value = new ItemRemoved();
      return ItemRemoved;
  })();
  var Searched = (function () {
      function Searched(value0) {
          this.value0 = value0;
      };
      Searched.create = function (value0) {
          return new Searched(value0);
      };
      return Searched;
  })();
  var SelectionsChanged = (function () {
      function SelectionsChanged(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      SelectionsChanged.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new SelectionsChanged(value0, value1, value2);
              };
          };
      };
      return SelectionsChanged;
  })();
  var Emit = (function () {
      function Emit(value0) {
          this.value0 = value0;
      };
      Emit.create = function (value0) {
          return new Emit(value0);
      };
      return Emit;
  })();
  var NotInsertable = (function () {
      function NotInsertable() {

      };
      NotInsertable.value = new NotInsertable();
      return NotInsertable;
  })();
  var Insertable = (function () {
      function Insertable(value0) {
          this.value0 = value0;
      };
      Insertable.create = function (value0) {
          return new Insertable(value0);
      };
      return Insertable;
  })();
  var NoFilter = (function () {
      function NoFilter() {

      };
      NoFilter.value = new NoFilter();
      return NoFilter;
  })();
  var FuzzyMatch = (function () {
      function FuzzyMatch() {

      };
      FuzzyMatch.value = new FuzzyMatch();
      return FuzzyMatch;
  })();
  var CustomMatch = (function () {
      function CustomMatch(value0) {
          this.value0 = value0;
      };
      CustomMatch.create = function (value0) {
          return new CustomMatch(value0);
      };
      return CustomMatch;
  })();
  var Sync = (function () {
      function Sync() {

      };
      Sync.value = new Sync();
      return Sync;
  })();
  var Async = (function () {
      function Async(value0) {
          this.value0 = value0;
      };
      Async.create = function (value0) {
          return new Async(value0);
      };
      return Async;
  })();
  var Remove = (function () {
      function Remove(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Remove.create = function (value0) {
          return function (value1) {
              return new Remove(value0, value1);
          };
      };
      return Remove;
  })();
  var Synchronize = (function () {
      function Synchronize(value0) {
          this.value0 = value0;
      };
      Synchronize.create = function (value0) {
          return new Synchronize(value0);
      };
      return Synchronize;
  })();
  var HandleSelect = (function () {
      function HandleSelect(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HandleSelect.create = function (value0) {
          return function (value1) {
              return new HandleSelect(value0, value1);
          };
      };
      return HandleSelect;
  })();
  var GetSelections = (function () {
      function GetSelections(value0) {
          this.value0 = value0;
      };
      GetSelections.create = function (value0) {
          return new GetSelections(value0);
      };
      return GetSelections;
  })();
  var ReplaceSelections = (function () {
      function ReplaceSelections(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ReplaceSelections.create = function (value0) {
          return function (value1) {
              return new ReplaceSelections(value0, value1);
          };
      };
      return ReplaceSelections;
  })();
  var ReplaceItems = (function () {
      function ReplaceItems(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ReplaceItems.create = function (value0) {
          return function (value1) {
              return new ReplaceItems(value0, value1);
          };
      };
      return ReplaceItems;
  })();
  var Reset = (function () {
      function Reset(value0) {
          this.value0 = value0;
      };
      Reset.create = function (value0) {
          return new Reset(value0);
      };
      return Reset;
  })();
  var Receive = (function () {
      function Receive(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Receive.create = function (value0) {
          return function (value1) {
              return new Receive(value0, value1);
          };
      };
      return Receive;
  })();
  var unpackSelections = function (v) {
      if (v instanceof One && v.value0 instanceof Data_Maybe.Nothing) {
          return [  ];
      };
      if (v instanceof One && v.value0 instanceof Data_Maybe.Just) {
          return [ v.value0.value0 ];
      };
      if (v instanceof Limit) {
          return v.value1;
      };
      if (v instanceof Many) {
          return v.value0;
      };
      throw new Error("Failed pattern match at Ocelot.Core.Typeahead line 363, column 1 - line 363, column 61: " + [ v.constructor.name ]);
  };
  var unpackSelection = function (v) {
      if (v instanceof One) {
          return v.value0;
      };
      if (v instanceof Limit) {
          return Data_Array.head(v.value1);
      };
      if (v instanceof Many) {
          return Data_Array.head(v.value0);
      };
      throw new Error("Failed pattern match at Ocelot.Core.Typeahead line 358, column 1 - line 358, column 60: " + [ v.constructor.name ]);
  }; 
  var applyInsertable = function (match) {
      return function (insertable) {
          return function (text) {
              return function (items) {
                  var isExactMatch = function (v) {
                      return Data_Eq.eq(Data_Fuzzy.eqDistance)(v.distance)(new Data_Fuzzy.Distance(0, 0, 0, 0, 0, 0));
                  };
                  if (insertable instanceof NotInsertable) {
                      return items;
                  };
                  if (insertable instanceof Insertable) {
                      if (Data_Array.length(Data_Array.filter(isExactMatch)(items)) > 0) {
                          return items;
                      };
                      if (Data_Boolean.otherwise) {
                          return Data_Array.cons(match(insertable.value0(text)))(items);
                      };
                  };
                  throw new Error("Failed pattern match at Ocelot.Core.Typeahead line 328, column 47 - line 331, column 65: " + [ insertable.constructor.name ]);
              };
          };
      };
  };
  var applyFilter = function (filterType) {
      return function (text) {
          return function (items) {
              if (filterType instanceof NoFilter) {
                  return items;
              };
              if (filterType instanceof CustomMatch) {
                  return Data_Array.filter(function (item) {
                      return filterType.value0(text)((function (v) {
                          return v.original;
                      })(Data_Newtype.unwrap(Data_Fuzzy.newtypeFuzzy)(item)));
                  })(items);
              };
              if (filterType instanceof FuzzyMatch) {
                  return Data_Array.filter(function (v) {
                      return Data_Ord.greaterThan(Data_Ratio.ordRatio(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt))(v.ratio)(Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(2)(3));
                  })(items);
              };
              throw new Error("Failed pattern match at Ocelot.Core.Typeahead line 320, column 37 - line 323, column 69: " + [ filterType.constructor.name ]);
          };
      };
  };
  var getNewItems = function (dictEq) {
      return function (st) {
          var removeSelections = function (items) {
              return function (selections) {
                  return Data_Functor.map(Network_RemoteData.functorRemoteData)(function (i) {
                      return Data_Array.difference(dictEq)(i)(unpackSelections(selections));
                  })(items);
              };
          };
          var matcher = Data_Fuzzy.match(true)(st.config.toStrMap)(st.search);
          var fuzzyItems = Data_Functor.map(Data_Functor.functorArray)(matcher);
          var applyI = applyInsertable(matcher)(st.config.insertable)(st.search);
          var applyF = applyFilter(st.config.filterType)(st.search);
          return Data_Functor.map(Network_RemoteData.functorRemoteData)(function ($146) {
              return Data_Array.sort(Data_Fuzzy.ordFuzzy(dictEq))(applyF(applyI(fuzzyItems($146))));
          })(removeSelections(st.items)(st.selections));
      };
  };
  var component = function (dictMonadAff) {
      return function (dictEq) {
          return function (dictShow) {
              var initialState = function (i) {
                  return Control_Comonad_Store.store(i.render)({
                      items: i.items,
                      selections: i.initialSelection,
                      search: Data_Maybe.fromMaybe("")(i.search),
                      config: i.config
                  });
              };
              var $$eval = function (v) {
                  if (v instanceof HandleSelect) {
                      if (v.value0 instanceof Select.Emit) {
                          return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(Halogen_Query_HalogenM.raise(new Emit(v.value0.value0)))(Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1));
                      };
                      if (v.value0 instanceof Select.Selected) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                              var selections = (function () {
                                  if (v1.value1.selections instanceof One) {
                                      return One.create(new Data_Maybe.Just(v.value0.value0.original));
                                  };
                                  if (v1.value1.selections instanceof Many) {
                                      return Many.create(Data_Array.cons(v.value0.value0.original)(v1.value1.selections.value0));
                                  };
                                  if (v1.value1.selections instanceof Limit) {
                                      var $67 = Data_Array.length(v1.value1.selections.value1) >= v1.value1.selections.value0;
                                      if ($67) {
                                          return v1.value1.selections;
                                      };
                                      return Limit.create(v1.value1.selections.value0)(Data_Array.cons(v.value0.value0.original)(v1.value1.selections.value1));
                                  };
                                  throw new Error("Failed pattern match at Ocelot.Core.Typeahead line 228, column 28 - line 231, column 92: " + [ v1.value1.selections.constructor.name ]);
                              })();
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                                  var $70 = {};
                                  for (var $71 in v2) {
                                      if ({}.hasOwnProperty.call(v2, $71)) {
                                          $70[$71] = v2[$71];
                                      };
                                  };
                                  $70.selections = selections;
                                  return $70;
                              })))(function () {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                      if (v1.value1.config.keepOpen) {
                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value);
                                      };
                                      return Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Halogen_Query.action(Select.SetVisibility.create(Select.Off.value)));
                                  })())(function (v2) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new SelectionsChanged(ItemSelected.value, v.value0.value0.original, selections)))(function () {
                                          return $$eval(new Synchronize(v.value1));
                                      });
                                  });
                              });
                          });
                      };
                      if (v.value0 instanceof Select.Searched) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                                  var $79 = {};
                                  for (var $80 in v2) {
                                      if ({}.hasOwnProperty.call(v2, $80)) {
                                          $79[$80] = v2[$80];
                                      };
                                  };
                                  $79.search = v.value0.value0;
                                  return $79;
                              })))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new Searched(v.value0.value0)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                          if (v1.value1.config.syncMethod instanceof Sync) {
                                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                          };
                                          if (v1.value1.config.syncMethod instanceof Async) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                                                  var $83 = {};
                                                  for (var $84 in v2) {
                                                      if ({}.hasOwnProperty.call(v2, $84)) {
                                                          $83[$84] = v2[$84];
                                                      };
                                                  };
                                                  $83.items = Network_RemoteData.Loading.value;
                                                  return $83;
                                              })))(function () {
                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(v1.value1.config.syncMethod.value0.fetchItems(v.value0.value0)))(function (v2) {
                                                      return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v3) {
                                                          var $87 = {};
                                                          for (var $88 in v3) {
                                                              if ({}.hasOwnProperty.call(v3, $88)) {
                                                                  $87[$88] = v3[$88];
                                                              };
                                                          };
                                                          $87.items = v2;
                                                          return $87;
                                                      }));
                                                  });
                                              });
                                          };
                                          throw new Error("Failed pattern match at Ocelot.Core.Typeahead line 247, column 11 - line 252, column 56: " + [ v1.value1.config.syncMethod.constructor.name ]);
                                      })())(function () {
                                          return $$eval(new Synchronize(v.value1));
                                      });
                                  });
                              });
                          });
                      };
                      if (v.value0 instanceof Select.VisibilityChanged) {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                      };
                      throw new Error("Failed pattern match at Ocelot.Core.Typeahead line 222, column 33 - line 256, column 45: " + [ v.value0.constructor.name ]);
                  };
                  if (v instanceof Remove) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                          var selections = (function () {
                              if (v1.value1.selections instanceof One) {
                                  return new One(Data_Maybe.Nothing.value);
                              };
                              if (v1.value1.selections instanceof Limit) {
                                  return Limit.create(v1.value1.selections.value0)(Data_Array.filter(Data_Eq.notEq(dictEq)(v.value0))(v1.value1.selections.value1));
                              };
                              if (v1.value1.selections instanceof Many) {
                                  return Many.create(Data_Array.filter(Data_Eq.notEq(dictEq)(v.value0))(v1.value1.selections.value0));
                              };
                              throw new Error("Failed pattern match at Ocelot.Core.Typeahead line 262, column 26 - line 265, column 60: " + [ v1.value1.selections.constructor.name ]);
                          })();
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                              var $104 = {};
                              for (var $105 in v2) {
                                  if ({}.hasOwnProperty.call(v2, $105)) {
                                      $104[$105] = v2[$105];
                                  };
                              };
                              $104.selections = selections;
                              return $104;
                          })))(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new SelectionsChanged(ItemRemoved.value, v.value0, selections)))(function () {
                                  return $$eval(new Synchronize(v.value1));
                              });
                          });
                      });
                  };
                  if (v instanceof GetSelections) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0(v1.value1.selections));
                      });
                  };
                  if (v instanceof Synchronize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)((function () {
                              var v2 = getNewItems(dictEq)(v1.value1);
                              if (v2 instanceof Network_RemoteData.Success) {
                                  return Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Halogen_Query.action(Select.ReplaceItems.create(v2.value0)));
                              };
                              if (v2 instanceof Network_RemoteData.Failure) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Control_Monad_Aff_Console.logShow(dictShow)(v2.value0)))(function () {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Halogen_Query.action(Select.SetVisibility.create(Select.Off.value))))(function (v3) {
                                          return Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Halogen_Query.action(Select.ReplaceItems.create([  ])));
                                      });
                                  });
                              };
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Unit.unit));
                          })())(function (v2) {
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
                          });
                      });
                  };
                  if (v instanceof ReplaceItems) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v1) {
                          var $122 = {};
                          for (var $123 in v1) {
                              if ({}.hasOwnProperty.call(v1, $123)) {
                                  $122[$123] = v1[$123];
                              };
                          };
                          $122.items = v.value0;
                          return $122;
                      })))(function () {
                          return $$eval(new Synchronize(v.value1));
                      });
                  };
                  if (v instanceof ReplaceSelections) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v1) {
                          var $127 = {};
                          for (var $128 in v1) {
                              if ({}.hasOwnProperty.call(v1, $128)) {
                                  $127[$128] = v1[$128];
                              };
                          };
                          $127.selections = v.value0;
                          return $127;
                      })))(function () {
                          return $$eval(new Synchronize(v.value1));
                      });
                  };
                  if (v instanceof Reset) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                          var selections = (function () {
                              if (v1.value1.selections instanceof One) {
                                  return new One(Data_Maybe.Nothing.value);
                              };
                              if (v1.value1.selections instanceof Limit) {
                                  return new Limit(v1.value1.selections.value0, [  ]);
                              };
                              if (v1.value1.selections instanceof Many) {
                                  return new Many([  ]);
                              };
                              throw new Error("Failed pattern match at Ocelot.Core.Typeahead line 302, column 26 - line 305, column 32: " + [ v1.value1.selections.constructor.name ]);
                          })();
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                              var $138 = {};
                              for (var $139 in v2) {
                                  if ({}.hasOwnProperty.call(v2, $139)) {
                                      $138[$139] = v2[$139];
                                  };
                              };
                              $138.selections = selections;
                              $138.items = Network_RemoteData.NotAsked.value;
                              return $138;
                          })))(function () {
                              return $$eval(new Synchronize(v.value0));
                          });
                      });
                  };
                  if (v instanceof Receive) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Select_Internal_State.updateStore(v.value0.render)(Control_Category.id(Control_Category.categoryFn))))(function () {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                      });
                  };
                  throw new Error("Failed pattern match at Ocelot.Core.Typeahead line 221, column 12 - line 311, column 15: " + [ v.constructor.name ]);
              };
              return Halogen_Component.parentComponent(Data_Ord.ordUnit)({
                  initialState: initialState,
                  render: Control_Comonad.extract(Control_Comonad_Store_Trans.comonadStoreT(Data_Identity.comonadIdentity)),
                  "eval": $$eval,
                  receiver: Data_Function["const"](Data_Maybe.Nothing.value)
              });
          };
      };
  };
  exports["Remove"] = Remove;
  exports["Synchronize"] = Synchronize;
  exports["HandleSelect"] = HandleSelect;
  exports["GetSelections"] = GetSelections;
  exports["ReplaceSelections"] = ReplaceSelections;
  exports["ReplaceItems"] = ReplaceItems;
  exports["Reset"] = Reset;
  exports["Receive"] = Receive;
  exports["Searched"] = Searched;
  exports["SelectionsChanged"] = SelectionsChanged;
  exports["Emit"] = Emit;
  exports["ItemSelected"] = ItemSelected;
  exports["ItemRemoved"] = ItemRemoved;
  exports["NoFilter"] = NoFilter;
  exports["FuzzyMatch"] = FuzzyMatch;
  exports["CustomMatch"] = CustomMatch;
  exports["NotInsertable"] = NotInsertable;
  exports["Insertable"] = Insertable;
  exports["Sync"] = Sync;
  exports["Async"] = Async;
  exports["One"] = One;
  exports["Limit"] = Limit;
  exports["Many"] = Many;
  exports["component"] = component;
  exports["applyFilter"] = applyFilter;
  exports["applyInsertable"] = applyInsertable;
  exports["getNewItems"] = getNewItems;
  exports["unpackSelection"] = unpackSelection;
  exports["unpackSelections"] = unpackSelections;
})(PS["Ocelot.Core.Typeahead"] = PS["Ocelot.Core.Typeahead"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_Class = PS["Control.Monad.Aff.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_HTML_Indexed = PS["DOM.HTML.Indexed"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Fuzzy = PS["Data.Fuzzy"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen = PS["Halogen"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Network_RemoteData = PS["Network.RemoteData"];
  var Ocelot_Block_Input = PS["Ocelot.Block.Input"];
  var Ocelot_Block_ItemContainer = PS["Ocelot.Block.ItemContainer"];
  var Ocelot_Block_Type = PS["Ocelot.Block.Type"];
  var Ocelot_Core_Typeahead = PS["Ocelot.Core.Typeahead"];
  var Prelude = PS["Prelude"];
  var Select = PS["Select"];
  var Select_Utils_Setters = PS["Select.Utils.Setters"];        
  var syncConfig = function (dictEq) {
      return function (toStrMap) {
          return function (keepOpen) {
              return {
                  insertable: Ocelot_Core_Typeahead.NotInsertable.value,
                  filterType: Ocelot_Core_Typeahead.FuzzyMatch.value,
                  syncMethod: Ocelot_Core_Typeahead.Sync.value,
                  toStrMap: toStrMap,
                  keepOpen: keepOpen
              };
          };
      };
  };
  var renderTA = function (dictMonadAff) {
      return function (dictEq) {
          return function (props) {
              return function (renderFuzzy) {
                  return function (renderSelectionItem) {
                      return function (st) {
                          var renderSearch = Halogen_HTML_Elements.label([ Halogen_HTML_Properties.classes(Ocelot_Block_Input.inputOuterClasses) ])([ Ocelot_Block_Input.input(Select_Utils_Setters.setInputProps(props)), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Ocelot_Block_Input.inputRightBorderClasses)(Ocelot_Block_Type.linkClasses)) ])([ Halogen_HTML_Core.text("Browse") ]) ]);
                          var renderContainer = function (selectState) {
                              return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("relative") ])((function () {
                                  var $27 = Data_Eq.eq(Select.eqVisibility)(selectState.visibility)(Select.Off.value);
                                  if ($27) {
                                      return [  ];
                                  };
                                  return [ Ocelot_Block_ItemContainer.itemContainer(selectState.highlightedIndex)(Data_Functor.map(Data_Functor.functorArray)(renderFuzzy)(selectState.items)) ];
                              })());
                          };
                          var selectInput = {
                              inputType: Select.TextInput.value,
                              items: [  ],
                              initialSearch: Data_Maybe.Nothing.value,
                              debounceTime: (function () {
                                  if (st.config.syncMethod instanceof Ocelot_Core_Typeahead.Async) {
                                      return new Data_Maybe.Just(st.config.syncMethod.value0.debounceTime);
                                  };
                                  if (st.config.syncMethod instanceof Ocelot_Core_Typeahead.Sync) {
                                      return Data_Maybe.Nothing.value;
                                  };
                                  throw new Error("Failed pattern match at Ocelot.Components.Typeahead line 207, column 23 - line 209, column 29: " + [ st.config.syncMethod.constructor.name ]);
                              })(),
                              render: function (selectState) {
                                  return Halogen_HTML_Elements.div_([ renderSearch, renderContainer(selectState) ]);
                              }
                          };
                          var itemProps = function (item) {
                              return [ Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Ocelot_Core_Typeahead.Remove.create(item))) ];
                          };
                          var renderSelection = function (x) {
                              return Ocelot_Block_ItemContainer.selectionContainer([ Ocelot_Block_ItemContainer.selectionGroup(renderSelectionItem)(itemProps(x))(x) ]);
                          };
                          var renderSelections = function (v) {
                              if (v.length === 0) {
                                  return Halogen_HTML_Elements.div_([  ]);
                              };
                              return Ocelot_Block_ItemContainer.selectionContainer(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                                  return Ocelot_Block_ItemContainer.selectionGroup(renderSelectionItem)(itemProps(x))(x);
                              })(v));
                          };
                          var renderAll = function (slot) {
                              if (st.selections instanceof Ocelot_Core_Typeahead.One && st.selections.value0 instanceof Data_Maybe.Nothing) {
                                  return Halogen_HTML_Elements.div_([ slot ]);
                              };
                              if (st.selections instanceof Ocelot_Core_Typeahead.One && st.selections.value0 instanceof Data_Maybe.Just) {
                                  return Halogen_HTML_Elements.span_([ renderSelection(st.selections.value0.value0), slot ]);
                              };
                              if (st.selections instanceof Ocelot_Core_Typeahead.Many) {
                                  return Halogen_HTML_Elements.div_([ renderSelections(st.selections.value0), slot ]);
                              };
                              if (st.selections instanceof Ocelot_Core_Typeahead.Limit) {
                                  return Halogen_HTML_Elements.div_([ renderSelections(st.selections.value1), slot ]);
                              };
                              throw new Error("Failed pattern match at Ocelot.Components.Typeahead line 216, column 7 - line 224, column 48: " + [ st.selections.constructor.name ]);
                          };
                          return renderAll(Halogen_HTML.slot(Data_Unit.unit)(Select.component(dictMonadAff))(selectInput)(Halogen_HTML_Events.input(Ocelot_Core_Typeahead.HandleSelect.create)));
                      };
                  };
              };
          };
      };
  };
  var defSingle = function (dictMonadAff) {
      return function (dictEq) {
          return function (dictShow) {
              return function (props) {
                  return function (xs) {
                      return function (v) {
                          return {
                              items: new Network_RemoteData.Success(xs),
                              search: Data_Maybe.Nothing.value,
                              initialSelection: new Ocelot_Core_Typeahead.One(Data_Maybe.Nothing.value),
                              render: renderTA(dictMonadAff)(dictEq)(props)(v.renderFuzzy)(v.renderItem),
                              config: syncConfig(dictEq)(v.toStrMap)(false)
                          };
                      };
                  };
              };
          };
      };
  };
  var defRenderItem = function (v) {
      return Halogen_HTML_Core.text(v.name);
  };
  var defRenderFuzzy = function ($74) {
      return Halogen_HTML_Elements.span_(Ocelot_Block_ItemContainer.boldMatches("name")($74));
  };
  var renderItemString = {
      toStrMap: Data_StrMap.singleton("name"),
      renderFuzzy: defRenderFuzzy,
      renderItem: Halogen_HTML_Core.text
  };
  var defMulti = function (dictMonadAff) {
      return function (dictEq) {
          return function (dictShow) {
              return function (props) {
                  return function (xs) {
                      return function (v) {
                          return {
                              items: new Network_RemoteData.Success(xs),
                              search: Data_Maybe.Nothing.value,
                              initialSelection: new Ocelot_Core_Typeahead.Many([  ]),
                              render: renderTA(dictMonadAff)(dictEq)(props)(v.renderFuzzy)(v.renderItem),
                              config: syncConfig(dictEq)(v.toStrMap)(true)
                          };
                      };
                  };
              };
          };
      };
  };
  var asyncConfig = function (dictEq) {
      return function (ms) {
          return function (f) {
              return function (toStrMap) {
                  return function (keepOpen) {
                      return {
                          insertable: Ocelot_Core_Typeahead.NotInsertable.value,
                          filterType: Ocelot_Core_Typeahead.FuzzyMatch.value,
                          syncMethod: new Ocelot_Core_Typeahead.Async({
                              debounceTime: ms,
                              fetchItems: f
                          }),
                          toStrMap: toStrMap,
                          keepOpen: keepOpen
                      };
                  };
              };
          };
      };
  };
  var defAsyncMulti = function (dictMonadAff) {
      return function (dictEq) {
          return function (dictShow) {
              return function (props) {
                  return function (f) {
                      return function (v) {
                          return {
                              items: Network_RemoteData.NotAsked.value,
                              search: Data_Maybe.Nothing.value,
                              initialSelection: new Ocelot_Core_Typeahead.Many([  ]),
                              render: renderTA(dictMonadAff)(dictEq)(props)(v.renderFuzzy)(v.renderItem),
                              config: asyncConfig(dictEq)(100.0)(f)(v.toStrMap)(false)
                          };
                      };
                  };
              };
          };
      };
  };
  exports["renderItemString"] = renderItemString;
  exports["defRenderFuzzy"] = defRenderFuzzy;
  exports["defRenderItem"] = defRenderItem;
  exports["defSingle"] = defSingle;
  exports["defMulti"] = defMulti;
  exports["defAsyncMulti"] = defAsyncMulti;
  exports["syncConfig"] = syncConfig;
  exports["asyncConfig"] = asyncConfig;
  exports["renderTA"] = renderTA;
})(PS["Ocelot.Components.Typeahead"] = PS["Ocelot.Components.Typeahead"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Timer = PS["Control.Monad.Eff.Timer"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Network_HTTP_Affjax = PS["Network.HTTP.Affjax"];
  var Network_HTTP_Affjax_Response = PS["Network.HTTP.Affjax.Response"];
  var Network_RemoteData = PS["Network.RemoteData"];
  var Ocelot_Block_ItemContainer = PS["Ocelot.Block.ItemContainer"];
  var Ocelot_Components_Typeahead = PS["Ocelot.Components.Typeahead"];
  var Prelude = PS["Prelude"];        
  var User = function (x) {
      return x;
  };
  var Todo = function (x) {
      return x;
  };
  var Fast = (function () {
      function Fast() {

      };
      Fast.value = new Fast();
      return Fast;
  })();
  var Slow = (function () {
      function Slow() {

      };
      Slow.value = new Slow();
      return Slow;
  })();
  var Fail = (function () {
      function Fail() {

      };
      Fail.value = new Fail();
      return Fail;
  })();
  var userToStrMap = function (v) {
      return Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("id", Data_Show.show(Data_Show.showInt)(v.id)), new Data_Tuple.Tuple("name", v.name), new Data_Tuple.Tuple("city", v.city) ]);
  };
  var todoToStrMap = function (v) {
      return Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("title", v.title), new Data_Tuple.Tuple("completed", (function () {
          if (v.completed) {
              return "Completed";
          };
          return "";
      })()) ]);
  }; 
  var newtypeUser = new Data_Newtype.Newtype(function (n) {
      return n;
  }, User);
  var renderItemUser = {
      toStrMap: userToStrMap,
      renderItem: function ($63) {
          return Ocelot_Components_Typeahead.defRenderItem(Data_Newtype.unwrap(newtypeUser)($63));
      },
      renderFuzzy: Ocelot_Components_Typeahead.defRenderFuzzy
  };
  var newtypeTodo = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Todo);
  var renderItemTodo = {
      toStrMap: todoToStrMap,
      renderItem: function ($64) {
          return Halogen_HTML_Core.text((function (v) {
              return v.title;
          })(Data_Newtype.unwrap(newtypeTodo)($64)));
      },
      renderFuzzy: function ($65) {
          return Halogen_HTML_Elements.span_(Ocelot_Block_ItemContainer.boldMatches("title")($65));
      }
  };
  var loadFromSource = function (v) {
      if (v.speed instanceof Fast) {
          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Network_HTTP_Affjax.get(Network_HTTP_Affjax_Response.responsableJson)(v.root + v.path))(function ($66) {
              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.decoder((function (v1) {
                  return v1.response;
              })($66)));
          });
      };
      if (v.speed instanceof Fail) {
          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Network_HTTP_Affjax.get(Network_HTTP_Affjax_Response.responsableJson)(v.path))(function ($67) {
              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.decoder((function (v1) {
                  return v1.response;
              })($67)));
          });
      };
      if (v.speed instanceof Slow) {
          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Timer.setTimeout(5000)(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit))))(function (v1) {
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Network_HTTP_Affjax.get(Network_HTTP_Affjax_Response.responsableJson)(v.root + v.path))(function (v2) {
                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.decoder(v2.response));
              });
          });
      };
      throw new Error("Failed pattern match at UIGuide.Utilities.Async line 70, column 58 - line 76, column 32: " + [ v.speed.constructor.name ]);
  };
  var eqUser = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x.city === y.city && x.id === y.id && x.name === y.name;
      };
  });
  var eqTodo = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x.completed === y.completed && x.title === y.title;
      };
  });
  var decodeWith = function (decoder) {
      return function (json) {
          return Network_RemoteData.fromEither(Control_Bind.bindFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decoder))(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonJson))(json)));
      };
  };
  var decodeUser = function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("name"))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("id"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(v)("address"))(function (i) {
                      return Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(i)("city");
                  }))(function (v3) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          id: v2,
                          name: v1,
                          city: v3
                      });
                  });
              });
          });
      });
  };
  var users = {
      path: "users",
      root: "https://jsonplaceholder.typicode.com/",
      speed: Fast.value,
      decoder: decodeWith(decodeUser)
  };               
  var decodeTodo = function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("title"))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonBoolean)(v)("completed"))(function (v2) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      title: v1,
                      completed: v2
                  });
              });
          });
      });
  };
  var todos = {
      path: "todos",
      root: "https://jsonplaceholder.typicode.com/",
      speed: Fast.value,
      decoder: decodeWith(decodeTodo)
  };
  exports["Fast"] = Fast;
  exports["Slow"] = Slow;
  exports["Fail"] = Fail;
  exports["users"] = users;
  exports["todos"] = todos;
  exports["loadFromSource"] = loadFromSource;
  exports["decodeWith"] = decodeWith;
  exports["Todo"] = Todo;
  exports["decodeTodo"] = decodeTodo;
  exports["todoToStrMap"] = todoToStrMap;
  exports["renderItemTodo"] = renderItemTodo;
  exports["User"] = User;
  exports["decodeUser"] = decodeUser;
  exports["renderItemUser"] = renderItemUser;
  exports["userToStrMap"] = userToStrMap;
  exports["newtypeTodo"] = newtypeTodo;
  exports["eqTodo"] = eqTodo;
  exports["newtypeUser"] = newtypeUser;
  exports["eqUser"] = eqUser;
})(PS["UIGuide.Utilities.Async"] = PS["UIGuide.Utilities.Async"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Monad_Aff_Class = PS["Control.Monad.Aff.Class"];
  var Control_Monad_Aff_Console = PS["Control.Monad.Aff.Console"];
  var Control_Monad_Eff_Timer = PS["Control.Monad.Eff.Timer"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var Data_Either = PS["Data.Either"];
  var Data_Either_Nested = PS["Data.Either.Nested"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor_Coproduct_Nested = PS["Data.Functor.Coproduct.Nested"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_Component_ChildPath = PS["Halogen.Component.ChildPath"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Network_HTTP_Affjax = PS["Network.HTTP.Affjax"];
  var Ocelot_Block_FormControl = PS["Ocelot.Block.FormControl"];
  var Ocelot_Components_Typeahead = PS["Ocelot.Components.Typeahead"];
  var Ocelot_Core_Typeahead = PS["Ocelot.Core.Typeahead"];
  var Prelude = PS["Prelude"];
  var UIGuide_Block_Component = PS["UIGuide.Block.Component"];
  var UIGuide_Block_Documentation = PS["UIGuide.Block.Documentation"];
  var UIGuide_Utilities_Async = PS["UIGuide.Utilities.Async"];
  var NoOp = (function () {
      function NoOp(value0) {
          this.value0 = value0;
      };
      NoOp.create = function (value0) {
          return new NoOp(value0);
      };
      return NoOp;
  })();
  var HandleTypeahead = (function () {
      function HandleTypeahead(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      HandleTypeahead.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new HandleTypeahead(value0, value1, value2);
              };
          };
      };
      return HandleTypeahead;
  })();
  var HandleSyncTypeahead = (function () {
      function HandleSyncTypeahead(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HandleSyncTypeahead.create = function (value0) {
          return function (value1) {
              return new HandleSyncTypeahead(value0, value1);
          };
      };
      return HandleSyncTypeahead;
  })();
  var containerData = [ "Instagram", "Facebook", "Twitter", "Pinterest", "Snapchat", "YouTube", "Reddit", "Voat", "Discord", "4Chan", "8Chan", "Digg", "Myspace", "Friendster" ];
  var cnDocumentationBlocks = function (dictMonadAff) {
      return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.documentation({
          header: "Typeaheads",
          subheader: "Use string input to search pre-determined entries."
      })([ UIGuide_Block_Component.component({
          title: "Synchronous Typeahead"
      })([ Ocelot_Block_FormControl.formControl({
          label: "Developers",
          helpText: new Data_Maybe.Just("There are lots of developers to choose from."),
          valid: Data_Maybe.Nothing.value,
          inputId: "devs"
      })(Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp2)(Data_Unit.unit)(Ocelot_Core_Typeahead.component(dictMonadAff)(Data_Eq.eqString)(Data_Void.showVoid))(Ocelot_Components_Typeahead.defMulti(dictMonadAff)(Data_Eq.eqString)(Data_Void.showVoid)([ Halogen_HTML_Properties.placeholder("Search developers..."), Halogen_HTML_Properties.id_("devs") ])(containerData)(Ocelot_Components_Typeahead.renderItemString))(Halogen_HTML_Events.input(HandleSyncTypeahead.create))) ]), UIGuide_Block_Component.component({
          title: "Continuous Asynchronous Typeahead"
      })([ Ocelot_Block_FormControl.formControl({
          label: "Developers",
          helpText: new Data_Maybe.Just("There are lots of developers to choose from."),
          valid: Data_Maybe.Nothing.value,
          inputId: "devs-async"
      })(Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Ocelot_Core_Typeahead.component(dictMonadAff)(UIGuide_Utilities_Async.eqTodo)(Data_Show.showString))(Ocelot_Components_Typeahead.defAsyncMulti(dictMonadAff)(UIGuide_Utilities_Async.eqTodo)(Data_Show.showString)([ Halogen_HTML_Properties.placeholder("Search developers asynchronously..."), Halogen_HTML_Properties.id_("devs-async") ])(function (v) {
          return UIGuide_Utilities_Async.loadFromSource(UIGuide_Utilities_Async.todos);
      })(UIGuide_Utilities_Async.renderItemTodo))(Halogen_HTML_Events.input(HandleTypeahead.create(Data_Unit.unit)))) ]) ]) ]);
  };
  var component = function (dictMonadAff) {
      var render = function (v) {
          return cnDocumentationBlocks(dictMonadAff);
      };
      var $$eval = function (v) {
          if (v instanceof NoOp) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
          };
          if (v instanceof HandleSyncTypeahead) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
          };
          if (v instanceof HandleTypeahead) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value2);
          };
          throw new Error("Failed pattern match at UIGuide.Components.TextFields line 71, column 5 - line 71, column 91: " + [ v.constructor.name ]);
      };
      return Halogen_Component.parentComponent(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Ord.ordVoid)))({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": $$eval,
          receiver: Data_Function["const"](Data_Maybe.Nothing.value)
      });
  };
  exports["NoOp"] = NoOp;
  exports["HandleTypeahead"] = HandleTypeahead;
  exports["HandleSyncTypeahead"] = HandleSyncTypeahead;
  exports["component"] = component;
  exports["containerData"] = containerData;
  exports["cnDocumentationBlocks"] = cnDocumentationBlocks;
})(PS["UIGuide.Components.TextFields"] = PS["UIGuide.Components.TextFields"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Monad_Aff_Class = PS["Control.Monad.Aff.Class"];
  var Control_Monad_Aff_Console = PS["Control.Monad.Aff.Console"];
  var Control_Monad_Eff_Timer = PS["Control.Monad.Eff.Timer"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_HTML_Indexed_ButtonType = PS["DOM.HTML.Indexed.ButtonType"];
  var Data_Array = PS["Data.Array"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Either_Nested = PS["Data.Either.Nested"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Coproduct_Nested = PS["Data.Functor.Coproduct.Nested"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_String_Utils = PS["Data.String.Utils"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Validation_Semigroup = PS["Data.Validation.Semigroup"];
  var Data_Void = PS["Data.Void"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_Component_ChildPath = PS["Halogen.Component.ChildPath"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query = PS["Halogen.Query"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Network_HTTP_Affjax = PS["Network.HTTP.Affjax"];
  var Network_RemoteData = PS["Network.RemoteData"];
  var Ocelot_Block_Button = PS["Ocelot.Block.Button"];
  var Ocelot_Block_FormControl = PS["Ocelot.Block.FormControl"];
  var Ocelot_Block_Input = PS["Ocelot.Block.Input"];
  var Ocelot_Components_Typeahead = PS["Ocelot.Components.Typeahead"];
  var Ocelot_Core_Typeahead = PS["Ocelot.Core.Typeahead"];
  var Ocelot_Core_Validation = PS["Ocelot.Core.Validation"];
  var Prelude = PS["Prelude"];
  var UIGuide_Block_Component = PS["UIGuide.Block.Component"];
  var UIGuide_Block_Documentation = PS["UIGuide.Block.Documentation"];
  var UIGuide_Utilities_Async = PS["UIGuide.Utilities.Async"];        
  var ValidatedArray = function (x) {
      return x;
  };
  var Username = function (x) {
      return x;
  };
  var TestRecord = function (x) {
      return x;
  };
  var DevelopersV = (function () {
      function DevelopersV(value0) {
          this.value0 = value0;
      };
      DevelopersV.create = function (value0) {
          return new DevelopersV(value0);
      };
      return DevelopersV;
  })();
  var TodosV = (function () {
      function TodosV(value0) {
          this.value0 = value0;
      };
      TodosV.create = function (value0) {
          return new TodosV(value0);
      };
      return TodosV;
  })();
  var Users1V = (function () {
      function Users1V(value0) {
          this.value0 = value0;
      };
      Users1V.create = function (value0) {
          return new Users1V(value0);
      };
      return Users1V;
  })();
  var Users2V = (function () {
      function Users2V(value0) {
          this.value0 = value0;
      };
      Users2V.create = function (value0) {
          return new Users2V(value0);
      };
      return Users2V;
  })();
  var EmailV = (function () {
      function EmailV(value0) {
          this.value0 = value0;
      };
      EmailV.create = function (value0) {
          return new EmailV(value0);
      };
      return EmailV;
  })();
  var UsernameV = (function () {
      function UsernameV(value0) {
          this.value0 = value0;
      };
      UsernameV.create = function (value0) {
          return new UsernameV(value0);
      };
      return UsernameV;
  })();
  var FailDevelopers = (function () {
      function FailDevelopers() {

      };
      FailDevelopers.value = new FailDevelopers();
      return FailDevelopers;
  })();
  var FailTodos = (function () {
      function FailTodos() {

      };
      FailTodos.value = new FailTodos();
      return FailTodos;
  })();
  var FailUsers1 = (function () {
      function FailUsers1() {

      };
      FailUsers1.value = new FailUsers1();
      return FailUsers1;
  })();
  var FailUsers2 = (function () {
      function FailUsers2() {

      };
      FailUsers2.value = new FailUsers2();
      return FailUsers2;
  })();
  var FailEmail = (function () {
      function FailEmail() {

      };
      FailEmail.value = new FailEmail();
      return FailEmail;
  })();
  var FailUsername = (function () {
      function FailUsername() {

      };
      FailUsername.value = new FailUsername();
      return FailUsername;
  })();
  var UpdateTextField = (function () {
      function UpdateTextField(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      UpdateTextField.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new UpdateTextField(value0, value1, value2);
              };
          };
      };
      return UpdateTextField;
  })();
  var HandleSync = (function () {
      function HandleSync(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HandleSync.create = function (value0) {
          return function (value1) {
              return new HandleSync(value0, value1);
          };
      };
      return HandleSync;
  })();
  var HandleB = (function () {
      function HandleB(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HandleB.create = function (value0) {
          return function (value1) {
              return new HandleB(value0, value1);
          };
      };
      return HandleB;
  })();
  var HandleC = (function () {
      function HandleC(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HandleC.create = function (value0) {
          return function (value1) {
              return new HandleC(value0, value1);
          };
      };
      return HandleC;
  })();
  var HandleD = (function () {
      function HandleD(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HandleD.create = function (value0) {
          return function (value1) {
              return new HandleD(value0, value1);
          };
      };
      return HandleD;
  })();
  var Validate = (function () {
      function Validate(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Validate.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Validate(value0, value1, value2);
              };
          };
      };
      return Validate;
  })();
  var FormSubmit = (function () {
      function FormSubmit(value0) {
          this.value0 = value0;
      };
      FormSubmit.create = function (value0) {
          return new FormSubmit(value0);
      };
      return FormSubmit;
  })();
  var Email = function (x) {
      return x;
  };
  var validateUsername = function (uname) {
      return Data_Bifunctor.bimap(Data_Validation_Semigroup.bifunctorV)(Data_Map.singleton(FailUsername.value))(function ($158) {
          return Username(Data_String_Utils.fromCharArray($158));
      })(Control_Apply.applySecond(Data_Validation_Semigroup.applyV(Data_Semigroup.semigroupArray))(Ocelot_Core_Validation.validateNonEmptyStr(uname))(Ocelot_Core_Validation.validateMinLength(Data_Foldable.foldableArray)(8)("Username must be longer than 8 characters")(Data_String_Utils.toCharArray(uname))));
  };
  var validateUserDependence = function (users1) {
      return function (users2) {
          return Ocelot_Core_Validation.validateDependence(function (u1) {
              return function (u2) {
                  return (Data_Array.length(u1) + Data_Array.length(u2) | 0) > 4;
              };
          })("Users 1 and 2 must combine to 5 or more")(users1)(users2);
      };
  };
  var validateUsers1 = function (users1) {
      return function (users2) {
          return Data_Bifunctor.bimap(Data_Validation_Semigroup.bifunctorV)(Data_Map.singleton(FailUsers1.value))(ValidatedArray)(Control_Apply.applySecond(Data_Validation_Semigroup.applyV(Data_Semigroup.semigroupArray))(Control_Apply.applySecond(Data_Validation_Semigroup.applyV(Data_Semigroup.semigroupArray))(Ocelot_Core_Validation.validateNonEmptyArr(users1))(Ocelot_Core_Validation.validateMinLength(Data_Foldable.foldableArray)(2)("Must select more than one user")(users1)))(validateUserDependence(users2)(users2)));
      };
  };
  var validateUsers2 = function (users2) {
      return function (users1) {
          return Data_Bifunctor.bimap(Data_Validation_Semigroup.bifunctorV)(Data_Map.singleton(FailUsers2.value))(ValidatedArray)(Control_Apply.applySecond(Data_Validation_Semigroup.applyV(Data_Semigroup.semigroupArray))(Ocelot_Core_Validation.validateNonEmptyArr(users2))(validateUserDependence(users2)(users1)));
      };
  };
  var validateTodos = function (xs) {
      return Data_Bifunctor.bimap(Data_Validation_Semigroup.bifunctorV)(Data_Map.singleton(FailTodos.value))(ValidatedArray)(Ocelot_Core_Validation.validateNonEmptyArr(xs));
  };
  var validateEmail = function (email) {
      return Data_Bifunctor.bimap(Data_Validation_Semigroup.bifunctorV)(Data_Map.singleton(FailEmail.value))(Email)(Control_Apply.applySecond(Data_Validation_Semigroup.applyV(Data_Semigroup.semigroupArray))(Ocelot_Core_Validation.validateNonEmptyStr(email))(Ocelot_Core_Validation.validateStrIsEmail(email)));
  };
  var validateDevelopers = function ($159) {
      return Data_Bifunctor.lmap(Data_Validation_Semigroup.bifunctorV)(Data_Map.singleton(FailDevelopers.value))(Ocelot_Core_Validation.validateNonEmptyMaybe($159));
  };
  var validateField = function (v) {
      if (v instanceof DevelopersV) {
          return Data_Functor.map(Data_Validation_Semigroup.functorV)(Data_Function["const"](Data_Unit.unit))(validateDevelopers(v.value0));
      };
      if (v instanceof TodosV) {
          return Data_Functor.map(Data_Validation_Semigroup.functorV)(Data_Function["const"](Data_Unit.unit))(validateTodos(v.value0));
      };
      if (v instanceof Users1V) {
          return Data_Functor.map(Data_Validation_Semigroup.functorV)(Data_Function["const"](Data_Unit.unit))(validateUsers1(v.value0.value0)(v.value0.value1));
      };
      if (v instanceof Users2V) {
          return Data_Functor.map(Data_Validation_Semigroup.functorV)(Data_Function["const"](Data_Unit.unit))(validateUsers2(v.value0.value0)(v.value0.value1));
      };
      if (v instanceof EmailV) {
          return Data_Functor.map(Data_Validation_Semigroup.functorV)(Data_Function["const"](Data_Unit.unit))(validateEmail(v.value0));
      };
      if (v instanceof UsernameV) {
          return Data_Functor.map(Data_Validation_Semigroup.functorV)(Data_Function["const"](Data_Unit.unit))(validateUsername(v.value0));
      };
      throw new Error("Failed pattern match at UIGuide.Components.Validation line 283, column 1 - line 283, column 47: " + [ v.constructor.name ]);
  };
  var testToStrMap = function (v) {
      return Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("name", v.name), new Data_Tuple.Tuple("id", Data_Show.show(Data_Show.showInt)(v.id)) ]);
  };
  var testRecords = [ {
      name: "Chris",
      id: 0
  }, {
      name: "Dave",
      id: 1
  }, {
      name: "Thomas",
      id: 2
  }, {
      name: "Forest",
      id: 3
  } ];
  var newtypeTestRecord = new Data_Newtype.Newtype(function (n) {
      return n;
  }, TestRecord);
  var renderItemTestRecord = {
      toStrMap: testToStrMap,
      renderFuzzy: Ocelot_Components_Typeahead.defRenderFuzzy,
      renderItem: function ($160) {
          return Ocelot_Components_Typeahead.defRenderItem(Data_Newtype.unwrap(newtypeTestRecord)($160));
      }
  };         
  var eqTestRecord = new Data_Eq.Eq(function (v) {
      return function (v1) {
          return v.id === v1.id;
      };
  });
  var eqFormErrorKey = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof FailDevelopers && y instanceof FailDevelopers) {
              return true;
          };
          if (x instanceof FailTodos && y instanceof FailTodos) {
              return true;
          };
          if (x instanceof FailUsers1 && y instanceof FailUsers1) {
              return true;
          };
          if (x instanceof FailUsers2 && y instanceof FailUsers2) {
              return true;
          };
          if (x instanceof FailEmail && y instanceof FailEmail) {
              return true;
          };
          if (x instanceof FailUsername && y instanceof FailUsername) {
              return true;
          };
          return false;
      };
  });
  var ordFormErrorKey = new Data_Ord.Ord(function () {
      return eqFormErrorKey;
  }, function (x) {
      return function (y) {
          if (x instanceof FailDevelopers && y instanceof FailDevelopers) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof FailDevelopers) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof FailDevelopers) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof FailTodos && y instanceof FailTodos) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof FailTodos) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof FailTodos) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof FailUsers1 && y instanceof FailUsers1) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof FailUsers1) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof FailUsers1) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof FailUsers2 && y instanceof FailUsers2) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof FailUsers2) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof FailUsers2) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof FailEmail && y instanceof FailEmail) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof FailEmail) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof FailEmail) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof FailUsername && y instanceof FailUsername) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at UIGuide.Components.Validation line 263, column 8 - line 263, column 52: " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var renderForm = function (dictMonadAff) {
      return function (st) {
          return Halogen_HTML_Elements.form([ Halogen_HTML_Events.onSubmit(Halogen_HTML_Events.input_(FormSubmit.create)) ])([ UIGuide_Block_Documentation.documentation({
              header: "Example Form",
              subheader: "Test validations and form submission."
          })([ UIGuide_Block_Component.component({
              title: "Typeaheads"
          })([ Ocelot_Block_FormControl.formControl({
              label: "Developer",
              helpText: new Data_Maybe.Just("There are lots of developers to choose from."),
              valid: Data_Map.lookup(ordFormErrorKey)(FailDevelopers.value)(st.errors),
              inputId: "devs"
          })(Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Ocelot_Core_Typeahead.component(dictMonadAff)(eqTestRecord)(Data_Void.showVoid))(Ocelot_Components_Typeahead.defSingle(dictMonadAff)(eqTestRecord)(Data_Void.showVoid)([ Halogen_HTML_Properties.placeholder("Search developers..."), Halogen_HTML_Properties.id_("devs") ])([  ])(renderItemTestRecord))(Halogen_HTML_Events.input(HandleSync.create))), Ocelot_Block_FormControl.formControl({
              label: "Todos",
              helpText: new Data_Maybe.Just("Synchronous todo fetching like you've always wanted."),
              valid: Data_Map.lookup(ordFormErrorKey)(FailTodos.value)(st.errors),
              inputId: "todos"
          })(Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp2)(Data_Unit.unit)(Ocelot_Core_Typeahead.component(dictMonadAff)(UIGuide_Utilities_Async.eqTodo)(Data_Show.showString))(Ocelot_Components_Typeahead.defAsyncMulti(dictMonadAff)(UIGuide_Utilities_Async.eqTodo)(Data_Show.showString)([ Halogen_HTML_Properties.placeholder("Search todos asynchronously..."), Halogen_HTML_Properties.id_("todos") ])(function (v) {
              return UIGuide_Utilities_Async.loadFromSource(UIGuide_Utilities_Async.todos);
          })(UIGuide_Utilities_Async.renderItemTodo))(Halogen_HTML_Events.input(HandleB.create))), Ocelot_Block_FormControl.formControl({
              label: "Users",
              helpText: new Data_Maybe.Just("Oh, you REALLY need async, huh."),
              valid: Data_Map.lookup(ordFormErrorKey)(FailUsers1.value)(st.errors),
              inputId: "users1"
          })(Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp3)(Data_Unit.unit)(Ocelot_Core_Typeahead.component(dictMonadAff)(UIGuide_Utilities_Async.eqUser)(Data_Show.showString))(Ocelot_Components_Typeahead.defAsyncMulti(dictMonadAff)(UIGuide_Utilities_Async.eqUser)(Data_Show.showString)([ Halogen_HTML_Properties.placeholder("Search users asynchronously"), Halogen_HTML_Properties.id_("users1") ])(function (v) {
              return UIGuide_Utilities_Async.loadFromSource(UIGuide_Utilities_Async.users);
          })(UIGuide_Utilities_Async.renderItemUser))(Halogen_HTML_Events.input(HandleC.create))), Ocelot_Block_FormControl.formControl({
              label: "Users 2",
              helpText: new Data_Maybe.Just("Honestly, this is just lazy."),
              valid: Data_Map.lookup(ordFormErrorKey)(FailUsers2.value)(st.errors),
              inputId: "users2"
          })(Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp4)(Data_Unit.unit)(Ocelot_Core_Typeahead.component(dictMonadAff)(UIGuide_Utilities_Async.eqUser)(Data_Show.showString))(Ocelot_Components_Typeahead.defAsyncMulti(dictMonadAff)(UIGuide_Utilities_Async.eqUser)(Data_Show.showString)([ Halogen_HTML_Properties.placeholder("Search more users..."), Halogen_HTML_Properties.id_("users2") ])(function (v) {
              return UIGuide_Utilities_Async.loadFromSource(UIGuide_Utilities_Async.users);
          })(UIGuide_Utilities_Async.renderItemUser))(Halogen_HTML_Events.input(HandleD.create))), Ocelot_Block_FormControl.formControl({
              label: "Email",
              helpText: new Data_Maybe.Just("Dave will spam your email with gang of four patterns"),
              valid: Data_Map.lookup(ordFormErrorKey)(FailEmail.value)(st.errors),
              inputId: "email"
          })(Ocelot_Block_Input.input([ Halogen_HTML_Properties.placeholder("davelovesgangoffour@gmail.com"), Halogen_HTML_Properties.id_("email"), Halogen_HTML_Events.onBlur(Halogen_HTML_Events.input_(Validate.create(FailEmail.value)(new EmailV(st.raw.email)))), Halogen_HTML_Events.onValueInput(Halogen_HTML_Events.input(UpdateTextField.create(1))) ])), Ocelot_Block_FormControl.formControl({
              label: "Username",
              helpText: new Data_Maybe.Just("Put your name in and we'll spam you forever"),
              valid: Data_Map.lookup(ordFormErrorKey)(FailUsername.value)(st.errors),
              inputId: "username"
          })(Ocelot_Block_Input.input([ Halogen_HTML_Properties.placeholder("Placehold me"), Halogen_HTML_Properties.id_("username"), Halogen_HTML_Events.onBlur(Halogen_HTML_Events.input_(Validate.create(FailUsername.value)(new UsernameV(st.raw.username)))), Halogen_HTML_Events.onValueInput(Halogen_HTML_Events.input(UpdateTextField.create(2))) ])), Ocelot_Block_Button.button({
              type_: Ocelot_Block_Button.Primary.value
          })([ Halogen_HTML_Properties.type_(Halogen_HTML_Core.buttonTypeIsProp)(DOM_HTML_Indexed_ButtonType.ButtonSubmit.value) ])([ Halogen_HTML_Core.text("Submit") ]) ]) ]) ]);
      };
  };
  var runValidation = function (f) {
      return Control_Apply.apply(Data_Validation_Semigroup.applyV(Data_Map.semigroupMap(ordFormErrorKey)))(Control_Apply.apply(Data_Validation_Semigroup.applyV(Data_Map.semigroupMap(ordFormErrorKey)))(Control_Apply.apply(Data_Validation_Semigroup.applyV(Data_Map.semigroupMap(ordFormErrorKey)))(Control_Apply.apply(Data_Validation_Semigroup.applyV(Data_Map.semigroupMap(ordFormErrorKey)))(Control_Apply.apply(Data_Validation_Semigroup.applyV(Data_Map.semigroupMap(ordFormErrorKey)))(Data_Functor.map(Data_Validation_Semigroup.functorV)(function (v) {
          return function (v1) {
              return function (v2) {
                  return function (v3) {
                      return function (v4) {
                          return function (v5) {
                              return {
                                  developers: v,
                                  todos: v1,
                                  users1: v2,
                                  users2: v3,
                                  email: v4,
                                  username: v5
                              };
                          };
                      };
                  };
              };
          };
      })(validateDevelopers(f.developers)))(validateTodos(f.todos)))(validateUsers1(f.users1)(f.users2)))(validateUsers2(f.users2)(f.users1)))(validateEmail(f.email)))(validateUsername(f.username));
  };
  var component = function (dictMonadAff) {
      var render = function (st) {
          return Halogen_HTML_Elements.div_([ renderForm(dictMonadAff)(st) ]);
      };
      var $$eval = function (v) {
          if (v instanceof HandleSync) {
              if (v.value0 instanceof Ocelot_Core_Typeahead.SelectionsChanged) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $86 = {};
                      for (var $87 in v1) {
                          if ({}.hasOwnProperty.call(v1, $87)) {
                              $86[$87] = v1[$87];
                          };
                      };
                      $86.raw = (function () {
                          var $83 = {};
                          for (var $84 in v1.raw) {
                              if ({}.hasOwnProperty.call(v1.raw, $84)) {
                                  $83[$84] = v1["raw"][$84];
                              };
                          };
                          $83.developers = Ocelot_Core_Typeahead.unpackSelection(v.value0.value2);
                          return $83;
                      })();
                      return $86;
                  }))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                  });
              };
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
          };
          if (v instanceof HandleB) {
              if (v.value0 instanceof Ocelot_Core_Typeahead.SelectionsChanged) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $98 = {};
                      for (var $99 in v1) {
                          if ({}.hasOwnProperty.call(v1, $99)) {
                              $98[$99] = v1[$99];
                          };
                      };
                      $98.raw = (function () {
                          var $95 = {};
                          for (var $96 in v1.raw) {
                              if ({}.hasOwnProperty.call(v1.raw, $96)) {
                                  $95[$96] = v1["raw"][$96];
                              };
                          };
                          $95.todos = Ocelot_Core_Typeahead.unpackSelections(v.value0.value2);
                          return $95;
                      })();
                      return $98;
                  }))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                  });
              };
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
          };
          if (v instanceof HandleC) {
              if (v.value0 instanceof Ocelot_Core_Typeahead.SelectionsChanged) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $110 = {};
                      for (var $111 in v1) {
                          if ({}.hasOwnProperty.call(v1, $111)) {
                              $110[$111] = v1[$111];
                          };
                      };
                      $110.raw = (function () {
                          var $107 = {};
                          for (var $108 in v1.raw) {
                              if ({}.hasOwnProperty.call(v1.raw, $108)) {
                                  $107[$108] = v1["raw"][$108];
                              };
                          };
                          $107.users1 = Ocelot_Core_Typeahead.unpackSelections(v.value0.value2);
                          return $107;
                      })();
                      return $110;
                  }))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                  });
              };
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
          };
          if (v instanceof HandleD) {
              if (v.value0 instanceof Ocelot_Core_Typeahead.SelectionsChanged) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $122 = {};
                      for (var $123 in v1) {
                          if ({}.hasOwnProperty.call(v1, $123)) {
                              $122[$123] = v1[$123];
                          };
                      };
                      $122.raw = (function () {
                          var $119 = {};
                          for (var $120 in v1.raw) {
                              if ({}.hasOwnProperty.call(v1.raw, $120)) {
                                  $119[$120] = v1["raw"][$120];
                              };
                          };
                          $119.users2 = Ocelot_Core_Typeahead.unpackSelections(v.value0.value2);
                          return $119;
                      })();
                      return $122;
                  }))(function () {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))))(Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Halogen_Query.action(Ocelot_Core_Typeahead.Reset.create)))(function (v1) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))))(Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Halogen_Query.action(Ocelot_Core_Typeahead.ReplaceItems.create(new Network_RemoteData.Success(testRecords)))))(function (v2) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))))(Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Halogen_Query.action(Ocelot_Core_Typeahead.ReplaceSelections.create(Ocelot_Core_Typeahead.One.create(Data_Maybe.Just.create({
                                  name: "Dave",
                                  id: 1
                              }))))))(function (v3) {
                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                              });
                          });
                      });
                  });
              };
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
          };
          if (v instanceof UpdateTextField) {
              if (v.value0 === 1) {
                  return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $134 = {};
                      for (var $135 in v1) {
                          if ({}.hasOwnProperty.call(v1, $135)) {
                              $134[$135] = v1[$135];
                          };
                      };
                      $134.raw = (function () {
                          var $131 = {};
                          for (var $132 in v1.raw) {
                              if ({}.hasOwnProperty.call(v1.raw, $132)) {
                                  $131[$132] = v1["raw"][$132];
                              };
                          };
                          $131.email = v.value1;
                          return $131;
                      })();
                      return $134;
                  }))(Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value2));
              };
              if (v.value0 === 2) {
                  return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $140 = {};
                      for (var $141 in v1) {
                          if ({}.hasOwnProperty.call(v1, $141)) {
                              $140[$141] = v1[$141];
                          };
                      };
                      $140.raw = (function () {
                          var $137 = {};
                          for (var $138 in v1.raw) {
                              if ({}.hasOwnProperty.call(v1.raw, $138)) {
                                  $137[$138] = v1["raw"][$138];
                              };
                          };
                          $137.username = v.value1;
                          return $137;
                      })();
                      return $140;
                  }))(Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value2));
              };
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value2);
          };
          if (v instanceof Validate) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  var v2 = validateField(v.value1);
                  var errors = Data_Validation_Semigroup.unV(Data_Function.flip(Data_Map.union(ordFormErrorKey))(v1.errors))(Data_Function["const"](Data_Map["delete"](ordFormErrorKey)(v.value0)(v1.errors)))(v2);
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                      var $147 = {};
                      for (var $148 in v3) {
                          if ({}.hasOwnProperty.call(v3, $148)) {
                              $147[$148] = v3[$148];
                          };
                      };
                      $147.errors = errors;
                      return $147;
                  }))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value2);
                  });
              });
          };
          if (v instanceof FormSubmit) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  var validation = runValidation(v1.raw);
                  var errors = Data_Validation_Semigroup.unV(Control_Category.id(Control_Category.categoryFn))(Data_Function["const"](Data_Map.empty))(validation);
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                      var $154 = {};
                      for (var $155 in v2) {
                          if ({}.hasOwnProperty.call(v2, $155)) {
                              $154[$155] = v2[$155];
                          };
                      };
                      $154.errors = errors;
                      return $154;
                  }))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
                  });
              });
          };
          throw new Error("Failed pattern match at UIGuide.Components.Validation line 105, column 5 - line 107, column 79: " + [ v.constructor.name ]);
      };
      return Halogen_Component.parentComponent(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Ord.ordVoid)))))({
          initialState: Data_Function["const"]({
              raw: {
                  developers: Data_Maybe.Nothing.value,
                  todos: [  ],
                  users1: [  ],
                  users2: [  ],
                  email: "",
                  username: ""
              },
              errors: Data_Map.empty
          }),
          render: render,
          "eval": $$eval,
          receiver: Data_Function["const"](Data_Maybe.Nothing.value)
      });
  };
  exports["UpdateTextField"] = UpdateTextField;
  exports["HandleSync"] = HandleSync;
  exports["HandleB"] = HandleB;
  exports["HandleC"] = HandleC;
  exports["HandleD"] = HandleD;
  exports["Validate"] = Validate;
  exports["FormSubmit"] = FormSubmit;
  exports["component"] = component;
  exports["runValidation"] = runValidation;
  exports["validateDevelopers"] = validateDevelopers;
  exports["validateTodos"] = validateTodos;
  exports["validateUsers1"] = validateUsers1;
  exports["validateUsers2"] = validateUsers2;
  exports["validateUserDependence"] = validateUserDependence;
  exports["validateEmail"] = validateEmail;
  exports["validateUsername"] = validateUsername;
  exports["Email"] = Email;
  exports["Username"] = Username;
  exports["ValidatedArray"] = ValidatedArray;
  exports["FailDevelopers"] = FailDevelopers;
  exports["FailTodos"] = FailTodos;
  exports["FailUsers1"] = FailUsers1;
  exports["FailUsers2"] = FailUsers2;
  exports["FailEmail"] = FailEmail;
  exports["FailUsername"] = FailUsername;
  exports["DevelopersV"] = DevelopersV;
  exports["TodosV"] = TodosV;
  exports["Users1V"] = Users1V;
  exports["Users2V"] = Users2V;
  exports["EmailV"] = EmailV;
  exports["UsernameV"] = UsernameV;
  exports["validateField"] = validateField;
  exports["renderForm"] = renderForm;
  exports["TestRecord"] = TestRecord;
  exports["renderItemTestRecord"] = renderItemTestRecord;
  exports["testToStrMap"] = testToStrMap;
  exports["testRecords"] = testRecords;
  exports["eqFormErrorKey"] = eqFormErrorKey;
  exports["ordFormErrorKey"] = ordFormErrorKey;
  exports["eqTestRecord"] = eqTestRecord;
  exports["newtypeTestRecord"] = newtypeTestRecord;
})(PS["UIGuide.Components.Validation"] = PS["UIGuide.Components.Validation"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Monad_Aff_Class = PS["Control.Monad.Aff.Class"];
  var Control_Monad_Aff_Console = PS["Control.Monad.Aff.Console"];
  var Control_Monad_Eff_Timer = PS["Control.Monad.Eff.Timer"];
  var DOM = PS["DOM"];
  var Data_Const = PS["Data.Const"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Map = PS["Data.Map"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Tuple = PS["Data.Tuple"];
  var Halogen = PS["Halogen"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_Storybook_Proxy = PS["Halogen.Storybook.Proxy"];
  var Network_HTTP_Affjax = PS["Network.HTTP.Affjax"];
  var Prelude = PS["Prelude"];
  var UIGuide_App = PS["UIGuide.App"];
  var UIGuide_Components_Button = PS["UIGuide.Components.Button"];
  var UIGuide_Components_Card = PS["UIGuide.Components.Card"];
  var UIGuide_Components_FormControl = PS["UIGuide.Components.FormControl"];
  var UIGuide_Components_Icon = PS["UIGuide.Components.Icon"];
  var UIGuide_Components_Tab = PS["UIGuide.Components.Tab"];
  var UIGuide_Components_TextFields = PS["UIGuide.Components.TextFields"];
  var UIGuide_Components_Validation = PS["UIGuide.Components.Validation"];        
  var routes = Data_Map.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("tabs", {
      anchor: "Tabs",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Components_Tab.component),
      group: UIGuide_App.Components.value
  }), new Data_Tuple.Tuple("cards", {
      anchor: "Cards",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Components_Card.card),
      group: UIGuide_App.Components.value
  }), new Data_Tuple.Tuple("textfields", {
      anchor: "Text Fields",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Components_TextFields.component(Control_Monad_Aff_Class.monadAffAff)),
      group: UIGuide_App.FormElements.value
  }), new Data_Tuple.Tuple("buttons", {
      anchor: "Buttons",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Components_Button.component),
      group: UIGuide_App.FormElements.value
  }), new Data_Tuple.Tuple("formcontrols", {
      anchor: "Form Controls",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Components_FormControl.component),
      group: UIGuide_App.FormElements.value
  }), new Data_Tuple.Tuple("validation", {
      anchor: "Validation",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Components_Validation.component(Control_Monad_Aff_Class.monadAffAff)),
      group: UIGuide_App.Behaviors.value
  }), new Data_Tuple.Tuple("icon", {
      anchor: "Icon",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Components_Icon.icon),
      group: UIGuide_App.FormElements.value
  }) ]);
  var groups = [ UIGuide_App.Components.value, UIGuide_App.FormElements.value, UIGuide_App.Behaviors.value ];
  exports["routes"] = routes;
  exports["groups"] = groups;
})(PS["UIGuide.App.Routes"] = PS["UIGuide.App.Routes"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_Console = PS["Control.Monad.Aff.Console"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Timer = PS["Control.Monad.Eff.Timer"];
  var Halogen_Aff = PS["Halogen.Aff"];
  var Halogen_Aff_Util = PS["Halogen.Aff.Util"];
  var Network_HTTP_Affjax = PS["Network.HTTP.Affjax"];
  var Prelude = PS["Prelude"];
  var UIGuide_App = PS["UIGuide.App"];
  var UIGuide_App_Routes = PS["UIGuide.App.Routes"];        
  var main = Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(function (v) {
      return UIGuide_App.runStorybook(UIGuide_App_Routes.routes)(UIGuide_App_Routes.groups)(v);
  }));
  exports["main"] = main;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
